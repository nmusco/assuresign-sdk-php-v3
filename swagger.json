{
    "openapi": "3.0.2",
    "info": {
        "title": "AssureSign DocumentNOW API Documentation",
        "version": "3.6",
        "description": "AssureSign DocumentNOW electronic signature APIs (envelopes and documents) For DocumentNOW user and account management APIs, go to [Account API](https://account.assuresign.net/api/v3.6/account)",
        "contact": {
            "name": "Support",
            "url": "https://support.assuresign.net"
        }
    },
    "servers": [
        {
            "url": "https://sb.assuresign.net/api/documentnow/v3.6/",
            "description": "SB"
        },
        {
            "url": "https://www.assuresign.net/api/documentnow/v3.6/",
            "description": "WWW"
        }
    ],
    "paths": {
        "/emaildesignsets": {
            "get": {
                "tags": [
                    "EmailDesignSets"
                ],
                "parameters": [
                    {
                        "name": "culture",
                        "description": "Specifies which culture to use when including system designs. Currently supported cultures are: en‑US (English - US), es‑US (Spanish - US), and fr‑CA (French - Canada)",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "IncludeSystemDesignSets",
                        "description": "Specifies whether or not to include built-in design sets. To query a specific built-in design set, include the culture",
                        "schema": {
                            "format": "",
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/listEmailDesignSetsResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for getting email design sets"
                    }
                },
                "operationId": "GetEmailDesignSets",
                "summary": "Retrieve all email design sets for a given account",
                "description": ""
            }
        },
        "/emaildesignsets/{emailDesignSetID}/emailDesigns": {
            "get": {
                "tags": [
                    "EmailDesignSets"
                ],
                "parameters": [
                    {
                        "name": "emailDesignSetID",
                        "description": "Specifies the unique identifier of the email design set",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "culture",
                        "description": "Specifies which culture to use when including system designs. Currently supported cultures are: en‑US (English - US), es‑US (Spanish - US), and fr‑CA (French - Canada)",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "IncludeSystemDesigns",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/listEmailDesignsResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for getting email designs"
                    }
                },
                "operationId": "GetEmailDesigns",
                "summary": "Retrieve all email designs for a given email design set",
                "description": ""
            }
        },
        "/emaildesignsets/{emailDesignSetID}/defaultEmailNotifications/{culture}": {
            "get": {
                "tags": [
                    "EmailDesignSets"
                ],
                "parameters": [
                    {
                        "name": "emailDesignSetID",
                        "description": "Specifies the unique identifier of the email design set",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "culture",
                        "description": "Specifies which culture to use when including system designs. Currently supported cultures are: en‑US (English - US), es‑US (Spanish - US), and fr‑CA (French - Canada)",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/getDefaultNotificationsResult"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for getting default notifications for a given design set"
                    }
                },
                "operationId": "GetDefaultNotifications",
                "summary": "Retrieve all default notifications",
                "description": ""
            }
        },
        "/users/{username}/accounts": {
            "get": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/getUserAccountsResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {}
                        },
                        "description": ""
                    }
                },
                "operationId": "GetUserAccounts",
                "summary": "Lists accounts the specified user may access.",
                "description": ""
            }
        },
        "/envelopes": {
            "get": {
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "dateFilter",
                        "description": "",
                        "schema": {
                            "format": "",
                            "enum": [
                                "ANY",
                                "CREATED",
                                "CLOSED",
                                "EXPIRED",
                                "COMPLETION",
                                "CANCELLED",
                                "DECLINED",
                                "STALED"
                            ],
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "envelopeName",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "signerName",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "orderID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "emailAddress",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "mobilePhone",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "fromDate",
                        "description": "Can include time in the following format(s). MM/dd/yyyy HH:mm (24 hour clock) 12/01/2020 13:01 | MM/dd/yyyy hh:mm tt (12 hour clock) 12/01/2020 01:01 PM | MM/dd/yyyy (No time specified will default to 12 am) 12/01/2020",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "toDate",
                        "description": "Can include time in the following format(s). MM/dd/yyyy HH:mm (24 hour clock) 12/01/2020 13:01 | MM/dd/yyyy hh:mm tt (12 hour clock) 12/01/2020 01:01 PM | MM/dd/yyyy (No time specified will default to 12 am) 12/01/2020",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "queryChildAccounts",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/listEnvelopesResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "ListEnvelopes",
                "summary": "Get envelopes matching given criteria",
                "description": ""
            }
        },
        "/envelopes/{envelopeID}": {
            "get": {
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/getEnvelopeResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "GetEnvelope",
                "summary": "Envelope data",
                "description": ""
            }
        },
        "/envelope/{envelopeID}/signingLinks": {
            "get": {
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "includeOnlyCurrentSigners",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "isAuthenticated",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "redirectUrl",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "linkExpirationDate",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/getSigningLinksResponseDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "signing links available for immediate presentment"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "GetSigningLinks",
                "summary": "Get signing links for envelope signers",
                "description": "Retrieve the signing links for the envelope identified by {envelopeID}. Note that bypassing authentication by setting isAuthenticated will fail should the account not be configured to allow customer provided authentication. Add includeOnlyCurrentSigners=true to the request to only include signers whose steps are currently active. You may specify a custom redirectUrl for signers by passing an HTML encoded URL. Set a date for the links to expire by passing a date in via linkExpirationDate. This date will always be interpreted as being in Coordinated Universal Time (UTC)."
            }
        },
        "/envelope/{envelopeID}/accessLinks/{documentType}": {
            "get": {
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "documentType",
                        "description": "",
                        "schema": {
                            "format": "",
                            "enum": [
                                "ORIGINAL",
                                "INTERIM",
                                "COMPLETED"
                            ],
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "signerEmail",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "signerMobilePhone",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "linkExpirationDate",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/getAccessLinkResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Provides access links to an envelope "
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "GetAccessLinks",
                "summary": "Get access links for a specific user in an envelope",
                "description": "Retrieve a link to a particular version of an envelope identified by {envelopeID} for a given party to the document. Identify the party (signers, CC contacts, originating user) by their email address or mobile phone number; identifying the party to the document is important since different parties may have different view of the envelope collection, depending on how it was constructed.  Calling the method without indicating a party will return the access link intended for the document originator. Note that interim versions of envelopes are only preserved as long as an envelope is unsigned or has not been cancelled. The completed version of the document will only be available for signed envelopes."
            }
        },
        "/envelopes/{envelopeID}/cancel": {
            "put": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request": {
                                        "$ref": "#/components/schemas/cancelEnvelopeRequestDto",
                                        "type": "object"
                                    }
                                }
                            },
                            "example": {
                                "request": {
                                    "remarks": "Cancelling envelope because..."
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/cancelEnvelopeResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "CancelEnvelope",
                "summary": "Cancel an active envelope",
                "description": "Cancel an envelope identified by {envelopeID} and stop pending workflow. The envelope must not be completed already for the cancellation to be accepted."
            }
        },
        "/envelopes/{envelopeID}/download": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request": {
                                        "$ref": "#/components/schemas/downloadEnvelopeRequestDto",
                                        "type": "object"
                                    }
                                }
                            },
                            "example": {
                                "request": {
                                    "envelopePassword": "TheEnvelopePassword1234"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/downloadEnvelopeResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "DownloadEnvelope",
                "summary": "Download a completed envelope",
                "description": "Download the documents contained in the envelope identified by {envelopeID}. The document contents will be included in the response content as base64 encoded string data."
            }
        },
        "/envelopes/{envelopeID}/delete": {},
        "/envelopes/{envelopeID}/history": {
            "get": {
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/envelopeHistoryResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "EnvelopeHistory",
                "summary": "Get envelope history",
                "description": "Retrieve the history for an envelope identified by {envelopeID}. The history of the envelope container will be returned in addition to the histories of individual documents contained in the envelope."
            }
        },
        "/envelopes/{envelopeID}/status": {
            "get": {
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/envelopeStatusResultDto",
                                            "type": "object"
                                        }
                                    }
                                },
                                "examples": {
                                    "envelope Status Response": {
                                        "value": {
                                            "messages": [],
                                            "result": {
                                                "status": "completed",
                                                "documentList": [
                                                    {
                                                        "status": {
                                                            "statusDate": "2020-09-08T04:00:00+00:00",
                                                            "statusDateSpecified": true,
                                                            "statusType": "completed",
                                                            "statusTypeSpecified": true,
                                                            "statusDetails": "Document details"
                                                        },
                                                        "name": "TestDocument"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "EnvelopeStatus",
                "summary": "Get envelope status",
                "description": "Retrieve the current status of the envelope identified by {envelopeID}."
            }
        },
        "/envelopes/{envelopeID}/signers/{envelopeSignerID}": {
            "put": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request": {
                                        "$ref": "#/components/schemas/updateEnvelopeSignerRequestDto",
                                        "type": "object"
                                    }
                                }
                            },
                            "example": {
                                "request": {
                                    "updateEnvelopeSigner": {
                                        "name": "FirstName LastName",
                                        "emailAddress": "FirstName@example.com",
                                        "resendLastEmail": true
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "envelopeSignerID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/updateEnvelopeSignerResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "operationId": "UpdateEnvelopeSigner",
                "summary": "Update envelope signer name, email, mobile phone, and password",
                "description": ""
            }
        },
        "/envelopes/{envelopeID}/values": {
            "get": {
                "tags": [
                    "Envelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "envelopeID",
                        "description": "",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/getEnvelopeValuesResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "400": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "410": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Deleted"
                    }
                },
                "operationId": "GetEnvelopeValues",
                "summary": "Get a list of field (JotBlock) values for an envelope",
                "description": "Get a list containing all of the typed fields (JotBlocks) and associated values contained in the envelope identified by {envelopeID}. The envelope must be completed prior to calling this method in order for field (JotBlock) values to be available."
            }
        },
        "/authentication/sso": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request": {
                                        "$ref": "#/components/schemas/ssoRequestDto",
                                        "type": "object"
                                    }
                                }
                            },
                            "example": {}
                        }
                    },
                    "required": false
                },
                "tags": [
                    "SsoToken"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/ssoResultDto"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for getting sso token"
                    }
                },
                "operationId": "GetWebTokenAsync",
                "summary": "Obtain a token that can be applied as a query parameter to SimpleSetup",
                "description": "An API authenticated user may request an SSO token via /authentication/sso and add the token to the Simple Setup URL in the form ?ssoToken={ssoTokenValue} to redirect to a prepared envelope. For example, for a prepared envelope built at www.assuresign.net, append the preparedEnvelopeID to the address, along with the ssoToken, in the form https://www.assuresign.net/ui/simpleSetup/{preparedEnvelopeID}?ssoToken={ssoTokenValue}."
            }
        },
        "/submit/prepare": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request": {
                                        "$ref": "#/components/schemas/preparedEnvelopeParsed",
                                        "type": "object"
                                    }
                                }
                            },
                            "example": {
                                "request": {
                                    "content": {
                                        "addendums": [],
                                        "documents": [
                                            {
                                                "attachments": [
                                                    {
                                                        "allowMultipleUploads": true,
                                                        "instructions": "Check this out",
                                                        "label": "",
                                                        "required": true,
                                                        "signer": "First Signer"
                                                    }
                                                ],
                                                "fields": [
                                                    {
                                                        "borderSides": {},
                                                        "certified": true,
                                                        "fieldType": "signature",
                                                        "inputType": "signatory",
                                                        "instructions": "Please sign by entering your full name.",
                                                        "name": "Signature JotBlock",
                                                        "position": {
                                                            "x": 0.27,
                                                            "y": 0.32
                                                        },
                                                        "required": true,
                                                        "signer": "First Signer",
                                                        "size": {
                                                            "height": 0.05,
                                                            "width": 0.7
                                                        },
                                                        "sourceGroup": "SIGNATURE",
                                                        "signatureStyle": "drawn",
                                                        "fontSize": 10,
                                                        "horizontalAlignment": "center",
                                                        "signerInputType": "free_Text",
                                                        "verticalAlignment": "middle"
                                                    }
                                                ],
                                                "file": {
                                                    "fileToUpload": {
                                                        "data": "[File data must be converted to Base64]",
                                                        "fileName": "Example.pdf"
                                                    },
                                                    "extension": "pdf"
                                                },
                                                "name": "document 1"
                                            }
                                        ],
                                        "emailNotifications": [],
                                        "envelope": {
                                            "cultureType": "en-US",
                                            "expirationDate": "2020-10-08",
                                            "name": "Example Envelope",
                                            "templatesApplied": [],
                                            "senderInputs": [],
                                            "notificationSettings": {
                                                "enableNotifications": true,
                                                "addCustomRecipientsToEnvelopeComplete": true
                                            }
                                        },
                                        "notificationRecipients": [],
                                        "signers": [
                                            {
                                                "email": "example@asd.com",
                                                "label": "First Signer",
                                                "name": "Signer one",
                                                "signatureStyle": "drawn"
                                            }
                                        ],
                                        "signerPayments": [
                                            {
                                                "label": "Signer one payment",
                                                "signer": "Signer one",
                                                "paymentConfiguration": {
                                                    "signerPaymentChargeCard": {
                                                        "amount": "1.99"
                                                    },
                                                    "orderNumber": "ANYORDERNUMBER001"
                                                },
                                                "failureBehavior": {
                                                    "allowPaymentFailure": true
                                                }
                                            }
                                        ],
                                        "smsNotifications": [],
                                        "steps": [],
                                        "conditionalLogicItems": [],
                                        "webHookNotifications": [],
                                        "documentTransmissions": []
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "PreparedEnvelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/preparedEnvelopeUpsertResponse"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for creating a prepared envelope"
                    }
                },
                "operationId": "CreatePreparedEnvelope",
                "summary": "Prepare an envelope for additional operations, including manual review and adding documents",
                "description": "Preparing an envelope allows for further modification, either via additional API calls or by continuing to edit the envelope in the AssureSign UI. Ad hoc data may be submitted, or Simple Setup template information may be provided. The prepared envelope may be finalized by calling /submit/{preparedEnvelopeID}. Additional modifications may be made to the prepared envelope by performing a PUT to /submit/prepare/{preparedEnvelopeID}. An API authenticated user may request an SSO token via /authentication/sso and add the token to the Simple Setup URL in the form ?ssoToken={ssoTokenValue} to redirect to the prepared envelope. For example, for a prepared envelope built at www.assuresign.net, append the preparedEnvelopeID to the address, along with the ssoToken, in the form https://www.assuresign.net/ui/simpleSetup/{preparedEnvelopeID}?ssoToken={ssoTokenValue}. Additional examples are available on the [AssureSign support portal](https://support.assuresign.net/hc/en-us/articles/360011225593)"
            }
        },
        "/submit/prepare/{preparedEnvelopeID}": {
            "put": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request": {
                                        "$ref": "#/components/schemas/preparedEnvelopeParsed",
                                        "type": "object"
                                    }
                                }
                            },
                            "example": {
                                "request": {
                                    "content": {
                                        "addendums": [],
                                        "documents": [
                                            {
                                                "attachments": [
                                                    {
                                                        "allowMultipleUploads": true,
                                                        "instructions": "Check this out",
                                                        "label": "",
                                                        "required": true,
                                                        "signer": "First Signer"
                                                    }
                                                ],
                                                "fields": [
                                                    {
                                                        "borderSides": {},
                                                        "certified": true,
                                                        "fieldType": "signature",
                                                        "inputType": "signatory",
                                                        "instructions": "Please sign by entering your full name.",
                                                        "name": "Signature JotBlock",
                                                        "position": {
                                                            "x": 0.27,
                                                            "y": 0.32
                                                        },
                                                        "required": true,
                                                        "signer": "First Signer",
                                                        "size": {
                                                            "height": 0.05,
                                                            "width": 0.7
                                                        },
                                                        "sourceGroup": "SIGNATURE",
                                                        "signatureStyle": "drawn",
                                                        "fontSize": 10,
                                                        "horizontalAlignment": "center",
                                                        "signerInputType": "free_Text",
                                                        "verticalAlignment": "middle"
                                                    }
                                                ],
                                                "file": {
                                                    "fileToUpload": {
                                                        "data": "[File data must be converted to Base64]",
                                                        "fileName": "Example.pdf"
                                                    },
                                                    "extension": "pdf"
                                                },
                                                "name": "document 1"
                                            }
                                        ],
                                        "emailNotifications": [],
                                        "envelope": {
                                            "cultureType": "en-US",
                                            "expirationDate": "2020-10-08",
                                            "name": "Example Envelope",
                                            "templatesApplied": [],
                                            "senderInputs": [],
                                            "notificationSettings": {
                                                "enableNotifications": true,
                                                "addCustomRecipientsToEnvelopeComplete": true
                                            }
                                        },
                                        "notificationRecipients": [],
                                        "signers": [
                                            {
                                                "email": "example@asd.com",
                                                "label": "First Signer",
                                                "name": "Signer one",
                                                "signatureStyle": "drawn"
                                            }
                                        ],
                                        "signerPayments": [
                                            {
                                                "label": "Signer one payment",
                                                "signer": "Signer one",
                                                "paymentConfiguration": {
                                                    "signerPaymentChargeCard": {
                                                        "amount": "1.99"
                                                    },
                                                    "orderNumber": "ANYORDERNUMBER001"
                                                },
                                                "failureBehavior": {
                                                    "allowPaymentFailure": true
                                                }
                                            }
                                        ],
                                        "smsNotifications": [],
                                        "steps": [],
                                        "conditionalLogicItems": [],
                                        "webHookNotifications": [],
                                        "documentTransmissions": []
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "PreparedEnvelope"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "preparedEnvelopeID",
                        "description": "ID of Prepared envelope",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/preparedEnvelopeUpsertResponse"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for updating a prepared envelope"
                    }
                },
                "operationId": "UpdatePreparedEnvelope",
                "summary": "Perform additional operations on a previously created prepared envelope",
                "description": "Make additional modifications to the prepared envelope referenced by the {preparedEnvelopeID} that was returned from a /submit/prepare operation. This may be useful, for example, in cases where an envelope contains multiple documents and needs to be split up into multiple submissions."
            }
        },
        "/submit": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request": {
                                        "$ref": "#/components/schemas/templateParsed",
                                        "type": "object"
                                    }
                                }
                            },
                            "examples": {
                                "submit template example": {
                                    "description": "Pass the templateID of the Simple Setup template (you can perform a GET to /templates to see all available templates), and a values array of name/value pairs for the sender inputs. You control the names of the sender inputs, so any submit needs to be adjusted to match what your template requires be sent in.",
                                    "value": {
                                        "request": {
                                            "placeholders": [],
                                            "templates": [
                                                {
                                                    "templateID": "9562851d-7c22-415c-b373-6f49f72fdd53",
                                                    "values": [
                                                        {
                                                            "name": "Envelope Name 2 ",
                                                            "value": "My New Envelope"
                                                        },
                                                        {
                                                            "name": "Envelope Order number 2",
                                                            "value": "Account_Order_123"
                                                        },
                                                        {
                                                            "name": "Expiration Date 2",
                                                            "value": "06/17/2019"
                                                        },
                                                        {
                                                            "name": "Language",
                                                            "value": "en-US"
                                                        },
                                                        {
                                                            "name": "Signer 1 Name",
                                                            "value": "John Doe"
                                                        },
                                                        {
                                                            "name": "Signer 1 Email",
                                                            "value": "john.doe@example.com"
                                                        },
                                                        {
                                                            "name": "Signer 1 Mobile Phone",
                                                            "value": ""
                                                        },
                                                        {
                                                            "name": "DocumentFile",
                                                            "files": [
                                                                {
                                                                    "fileToUpload": {
                                                                        "data": "Base64DataHere",
                                                                        "fileName": "ExampleFileName.pdf"
                                                                    },
                                                                    "extension": "pdf"
                                                                }
                                                            ],
                                                            "overlayStartPage": 0
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "submit Ad-hoc example": {
                                    "description": "Illustrates some of the possible configurations that could be used to perform a submit of an ad-hoc document. It is also possible to combine ad-hoc and template request information in a single operation. ",
                                    "value": {
                                        "request": {
                                            "content": {
                                                "addendums": [],
                                                "documents": [
                                                    {
                                                        "attachments": [
                                                            {
                                                                "allowMultipleUploads": true,
                                                                "instructions": "Check this out",
                                                                "label": "",
                                                                "required": true,
                                                                "signer": "First Signer"
                                                            }
                                                        ],
                                                        "fields": [
                                                            {
                                                                "borderSides": {},
                                                                "certified": true,
                                                                "fieldType": "signature",
                                                                "inputType": "signatory",
                                                                "instructions": "Please sign by entering your full name.",
                                                                "name": "Signature JotBlock",
                                                                "position": {
                                                                    "x": 0.27,
                                                                    "y": 0.32
                                                                },
                                                                "required": true,
                                                                "signer": "First Signer",
                                                                "size": {
                                                                    "height": 0.05,
                                                                    "width": 0.7
                                                                },
                                                                "sourceGroup": "SIGNATURE",
                                                                "signatureStyle": "drawn",
                                                                "fontSize": 10,
                                                                "horizontalAlignment": "center",
                                                                "signerInputType": "free_Text",
                                                                "verticalAlignment": "middle"
                                                            }
                                                        ],
                                                        "file": {
                                                            "fileToUpload": {
                                                                "data": "[File data must be converted to Base64]",
                                                                "fileName": "Example.pdf"
                                                            },
                                                            "extension": "pdf"
                                                        },
                                                        "name": "document 1"
                                                    }
                                                ],
                                                "emailNotifications": [],
                                                "envelope": {
                                                    "cultureType": "en-US",
                                                    "expirationDate": "2020-10-08",
                                                    "name": "Env1",
                                                    "templatesApplied": [],
                                                    "senderInputs": [],
                                                    "notificationSettings": {
                                                        "enableNotifications": true,
                                                        "addCustomRecipientsToEnvelopeComplete": true
                                                    }
                                                },
                                                "notificationRecipients": [],
                                                "signers": [
                                                    {
                                                        "email": "example@asd.com",
                                                        "label": "First Signer",
                                                        "name": "Signer one",
                                                        "signatureStyle": "drawn"
                                                    }
                                                ],
                                                "signerPayments": [],
                                                "smsNotifications": [],
                                                "steps": [],
                                                "conditionalLogicItems": [],
                                                "webHookNotifications": [],
                                                "documentTransmissions": []
                                            },
                                            "placeholders": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Submit"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/submitResult"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for submit"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    }
                },
                "operationId": "SubmitRequest",
                "summary": "Submit a complete envelope via a combination of ad hoc data and/or Simple Setup templates.",
                "description": "Submit a complete envelope to begin the envelope's workflow, operating in the context of the the account indicated in the X-AS-UserContext header. Simple Setup templates may be used, a complete ad hoc envelope may be submitted, or a combination of ad hoc and templated information may be submitted. The messages section should be parsed for any warnings. A successful submit will return back an ID of the envelope that may be used in method calls requiring {envelopeID}. Additional examples are available on the [AssureSign support portal](https://support.assuresign.net/hc/en-us/articles/360011128574)"
            }
        },
        "/submit/validate": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request": {
                                        "$ref": "#/components/schemas/templateParsed",
                                        "type": "object"
                                    }
                                }
                            },
                            "examples": {
                                "validate template submission": {
                                    "description": "Pass the templateID of the Simple Setup template (you can perform a GET to /templates to see all available templates), and a values array of name/value pairs for the sender inputs. You control the names of the sender inputs, so any submit needs to be adjusted to match what your template requires be sent in.",
                                    "value": {
                                        "request": {
                                            "placeholders": [],
                                            "templates": [
                                                {
                                                    "templateID": "27b0b997-7f5a-4b11-a069-c0472b424718",
                                                    "values": [
                                                        {
                                                            "name": "Envelope Name 2 ",
                                                            "value": "My New Envelope"
                                                        },
                                                        {
                                                            "name": "Envelope Order number 2",
                                                            "value": "Account_Order_123"
                                                        },
                                                        {
                                                            "name": "Expiration Date 2",
                                                            "value": "06/17/2019"
                                                        },
                                                        {
                                                            "name": "Language",
                                                            "value": "en-US"
                                                        },
                                                        {
                                                            "name": "Signer 1 Name",
                                                            "value": "John Doe"
                                                        },
                                                        {
                                                            "name": "Signer 1 Email",
                                                            "value": "john.doe@example.com"
                                                        },
                                                        {
                                                            "name": "Signer 1 Mobile Phone",
                                                            "value": ""
                                                        },
                                                        {
                                                            "name": "DocumentFile",
                                                            "files": [
                                                                {
                                                                    "fileToUpload": {
                                                                        "data": "Base64DataHere",
                                                                        "fileName": "ExampleFileName.pdf"
                                                                    },
                                                                    "extension": "pdf"
                                                                }
                                                            ],
                                                            "overlayStartPage": 0
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "validate Ad-hoc submission example": {
                                    "description": "Illustrates some of the possible configurations that could be used to perform a submit of an ad-hoc document. It is also possible to combine ad-hoc and template request information in a single operation. ",
                                    "value": {
                                        "request": {
                                            "content": {
                                                "addendums": [],
                                                "documents": [
                                                    {
                                                        "attachments": [
                                                            {
                                                                "allowMultipleUploads": true,
                                                                "instructions": "Check this out",
                                                                "label": "",
                                                                "required": true,
                                                                "signer": "First Signer"
                                                            }
                                                        ],
                                                        "fields": [
                                                            {
                                                                "borderSides": {},
                                                                "certified": true,
                                                                "fieldType": "signature",
                                                                "inputType": "signatory",
                                                                "instructions": "Please sign by entering your full name.",
                                                                "name": "Signature JotBlock",
                                                                "position": {
                                                                    "x": 0.27,
                                                                    "y": 0.32
                                                                },
                                                                "required": true,
                                                                "signer": "First Signer",
                                                                "size": {
                                                                    "height": 0.05,
                                                                    "width": 0.7
                                                                },
                                                                "sourceGroup": "SIGNATURE",
                                                                "signatureStyle": "drawn",
                                                                "fontSize": 10,
                                                                "horizontalAlignment": "center",
                                                                "signerInputType": "free_Text",
                                                                "verticalAlignment": "middle"
                                                            }
                                                        ],
                                                        "file": {
                                                            "fileToUpload": {
                                                                "data": "[File data must be converted to Base64]",
                                                                "fileName": "Example.pdf"
                                                            },
                                                            "extension": "pdf"
                                                        },
                                                        "name": "document 1"
                                                    }
                                                ],
                                                "emailNotifications": [],
                                                "envelope": {
                                                    "cultureType": "en-US",
                                                    "expirationDate": "2020-10-08",
                                                    "name": "Env1",
                                                    "templatesApplied": [],
                                                    "senderInputs": [],
                                                    "notificationSettings": {
                                                        "enableNotifications": true,
                                                        "addCustomRecipientsToEnvelopeComplete": true
                                                    }
                                                },
                                                "notificationRecipients": [],
                                                "signers": [
                                                    {
                                                        "email": "example@asd.com",
                                                        "label": "First Signer",
                                                        "name": "Signer one",
                                                        "signatureStyle": "drawn"
                                                    }
                                                ],
                                                "signerPayments": [],
                                                "smsNotifications": [],
                                                "steps": [],
                                                "conditionalLogicItems": [],
                                                "webHookNotifications": [],
                                                "documentTransmissions": []
                                            },
                                            "placeholders": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Submit"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/mergeResult"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for preview"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/appError"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Bad Request"
                    }
                },
                "operationId": "ValidateSubmit",
                "summary": "Submit an envelope and contained documents for content validation only",
                "description": "Passing in the same JSON request structure as /submit, this method will validate the content of the request without completing the submission process."
            }
        },
        "/submit/{preparedEnvelopeID}": {
            "post": {
                "tags": [
                    "Submit"
                ],
                "parameters": [
                    {
                        "name": "preparedEnvelopeID",
                        "description": "ID of Prepared envelope",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/submitResult"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for prepare"
                    }
                },
                "operationId": "PreparedEnvelope",
                "summary": "Finalize the submission of a previously prepared envelope.",
                "description": "Finalize a submit of a prepared envelope previously created via a /submit/prepare operation. This closes the envelope and begins the envelope's workflow."
            }
        },
        "/templates": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    },
                    {
                        "name": "includeArchived",
                        "description": "Include archived templates with the GetAll operation",
                        "schema": {
                            "format": "",
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/templateList"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for GetAllTemplates"
                    }
                },
                "operationId": "GetAllTemplates",
                "summary": "Retrieve a list of all of the Simple Setup templates available to the current user.",
                "description": "List Simple Setup templates available to the user, operating in the context of the the account indicated in the X-AS-UserContext header. Detailed information for any given template may be retrieved by using the returned templateID in a call to templates/{templateID}. The messages section should be parsed for any warnings."
            }
        },
        "/templates/{templateID}": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "name": "templateID",
                        "description": "Specifies the unique identifier of the template.",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "format": "",
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messages": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/responseMessageDto",
                                                "format": "",
                                                "type": "n/a"
                                            }
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/templateParsed"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "A successful response for getting a template"
                    }
                },
                "operationId": "GetTemplate",
                "summary": "Retrieve all of the data for the specified Simple Setup template.",
                "description": "Retrieve a Simple Setup envelope JSON structure. The messages section should be parsed for any warnings."
            }
        },
        "/webHooks": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/createWebhookRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "X-AS-UserContext",
                        "description": "{username}:{DocumentNOW Account Context Identifier}",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createWebhookResponse"
                                }
                            }
                        },
                        "description": "A successful response for creating a prepared envelope"
                    }
                },
                "operationId": "CreateWebhook",
                "summary": "Create Webhook",
                "description": "Creates a new DocumentTrack Webhook"
            }
        }
    },
    "components": {
        "schemas": {
            "actionSuccessResultDto": {
                "type": "object",
                "properties": {
                    "success": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "responseMessageDto": {
                "type": "object",
                "properties": {
                    "details": {
                        "description": "",
                        "type": "string"
                    },
                    "messageType": {
                        "description": "",
                        "enum": [
                            "Information",
                            "Verbose",
                            "Warning",
                            "Error"
                        ],
                        "type": "string"
                    }
                }
            },
            "ssoResultDto": {
                "type": "object",
                "properties": {
                    "ssoToken": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ssoRequestDto": {
                "type": "object"
            },
            "apiFile": {
                "type": "object",
                "properties": {
                    "saved": {
                        "description": "Specifies the metadata for a previously uploaded file.",
                        "type": "object",
                        "properties": {
                            "fileName": {
                                "description": "Specifies the full file name and extension for this previously uploaded file. Note that the filename should not contain any spaces or special characters.",
                                "type": "string"
                            },
                            "location": {
                                "description": "Specifies the storage location of this previously uploaded file.",
                                "type": "string"
                            },
                            "pages": {
                                "description": "Provides a list of the page images rendered for this previously uploaded file.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "width": {
                                            "description": "Specifies the width (in pixels) of a page image.",
                                            "type": "string"
                                        },
                                        "height": {
                                            "description": "Specifies the height (in pixels) of a page image.",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "fileToUpload": {
                        "description": "Specifies the file metadata and file contents for a new file upload.",
                        "type": "object",
                        "properties": {
                            "data": {
                                "description": "Specifies the actual file data a Base64-encoded string.",
                                "type": "string"
                            },
                            "fileName": {
                                "description": "Specifies the full file name and extension. Example: Policy.pdf",
                                "type": "string"
                            },
                            "parseDocument": {
                                "description": "Parse this document for dynamic jotblocks",
                                "type": "boolean"
                            },
                            "dynamicDocumentVersion": {
                                "description": "Parse the Document using V2 or V3 syntax. Only applicable if ParseDocument is set to true",
                                "enum": [
                                    "V2"
                                ],
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "prepareEnvelopeDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "documents": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/prepareDocumentDto",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "signers": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/prepareSignerDto",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "customRecipients": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/prepareCustomRecipientDto",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "notifications": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/preparedNotificationDto",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "prepareDocumentDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "data": {
                        "description": "",
                        "type": "string"
                    },
                    "dataType": {
                        "description": "",
                        "type": "string"
                    },
                    "extracted": {
                        "$ref": "#/components/schemas/prepareExtractedDocumentDto",
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "prepareExtractedDocumentDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "pages": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/prepareExtractedPageDto",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "prepareExtractedPageDto": {
                "type": "object",
                "properties": {
                    "width": {
                        "format": "int32",
                        "description": "",
                        "type": "integer"
                    },
                    "height": {
                        "format": "int32",
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "prepareSignerDto": {
                "type": "object",
                "properties": {
                    "label": {
                        "description": "",
                        "type": "string"
                    },
                    "fullName": {
                        "description": "",
                        "type": "string"
                    },
                    "emailAddress": {
                        "description": "",
                        "type": "string"
                    },
                    "mobilePhone": {
                        "description": "",
                        "type": "string"
                    },
                    "authentication": {
                        "$ref": "#/components/schemas/prepareSignerAuthenticationDto",
                        "description": "",
                        "type": "object"
                    },
                    "signatureStyle": {
                        "description": "",
                        "enum": [
                            "SELECTABLE",
                            "DRAWN",
                            "TYPED",
                            "CLASSIC"
                        ],
                        "type": "string"
                    }
                }
            },
            "prepareSignerAuthenticationDto": {
                "type": "object",
                "properties": {
                    "password": {
                        "description": "",
                        "type": "string"
                    },
                    "passwordPrompt": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "prepareCustomRecipientDto": {
                "type": "object",
                "properties": {
                    "label": {
                        "description": "",
                        "type": "string"
                    },
                    "fullName": {
                        "description": "",
                        "type": "string"
                    },
                    "emailAddress": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "preparedNotificationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "subject": {
                        "description": "",
                        "type": "string"
                    },
                    "body": {
                        "description": "",
                        "type": "string"
                    },
                    "stage": {
                        "description": "",
                        "enum": [
                            "EnvelopeStart",
                            "EnvelopePreExpire",
                            "EnvelopeExpire",
                            "EnvelopeComplete",
                            "EnvelopeCancel",
                            "EnvelopeDecline",
                            "SignerFeedback",
                            "SignerAuthFailure",
                            "SignerKbaStart",
                            "SignerKbaComplete",
                            "StepStart",
                            "StepComplete",
                            "OnPaymentApproved",
                            "OnPaymentDeclined",
                            "OnPaymentRefunded"
                        ],
                        "type": "string"
                    },
                    "step": {
                        "format": "int32",
                        "description": "",
                        "type": "integer"
                    },
                    "recipients": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    }
                }
            },
            "preparedEnvelopeUpsertResponseV3_1": {
                "type": "object",
                "properties": {
                    "preparedEnvelopeId": {
                        "format": "uuid",
                        "description": "Specifies the unique identifier of a prepared envelope.",
                        "type": "string"
                    }
                }
            },
            "preparedEnvelopeUpsertResponse": {
                "type": "object",
                "properties": {
                    "preparedEnvelopeID": {
                        "format": "uuid",
                        "description": "Specifies the unique identifier of a prepared envelope.",
                        "type": "string"
                    }
                }
            },
            "submitResultV3_1": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "authToken": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "submitResult": {
                "type": "object",
                "properties": {
                    "envelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "authToken": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "preparedEnvelopeRequestDto3_0": {
                "type": "object",
                "properties": {
                    "envelope": {
                        "$ref": "#/components/schemas/prepareEnvelopeDto",
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "conditionalLogicItem": {
                "type": "object",
                "properties": {
                    "andOrType": {
                        "description": "",
                        "enum": [
                            "And",
                            "Or"
                        ],
                        "type": "string"
                    },
                    "conditions": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "objectEntityID": {
                                    "description": "",
                                    "type": "string"
                                },
                                "objectEntityType": {
                                    "description": "",
                                    "enum": [
                                        "Field",
                                        "SignerAttachment",
                                        "SignerPayment"
                                    ],
                                    "type": "string"
                                },
                                "regex": {
                                    "description": "",
                                    "type": "string"
                                },
                                "compareType": {
                                    "description": "",
                                    "enum": [
                                        "Anything",
                                        "EqualTo",
                                        "NotEqualTo",
                                        "GreaterThan",
                                        "LessThan",
                                        "Skipped",
                                        "Enabled",
                                        "Regex"
                                    ],
                                    "type": "string"
                                },
                                "conditionalValue": {
                                    "description": "",
                                    "type": "string"
                                },
                                "isCaseSensitive": {
                                    "description": "",
                                    "type": "string"
                                },
                                "trim": {
                                    "description": "",
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "actions": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "objectEntityID": {
                                    "description": "links action to field",
                                    "type": "string"
                                },
                                "objectEntityType": {
                                    "description": "",
                                    "enum": [
                                        "Field",
                                        "SignerAttachment",
                                        "SignerPayment"
                                    ],
                                    "type": "string"
                                },
                                "requireSignerAttachment": {
                                    "description": "",
                                    "type": "boolean"
                                },
                                "isHidden": {
                                    "description": "",
                                    "type": "boolean"
                                },
                                "isShown": {
                                    "description": "",
                                    "type": "boolean"
                                },
                                "isRequired": {
                                    "description": "",
                                    "type": "boolean"
                                },
                                "requirePayment": {
                                    "description": "",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "conditionalLogicCondition": {
                "type": "object",
                "properties": {
                    "objectEntityID": {
                        "description": "",
                        "type": "string"
                    },
                    "objectEntityType": {
                        "description": "",
                        "enum": [
                            "Field",
                            "SignerAttachment",
                            "SignerPayment"
                        ],
                        "type": "string"
                    },
                    "regex": {
                        "description": "",
                        "type": "string"
                    },
                    "compareType": {
                        "description": "",
                        "enum": [
                            "Anything",
                            "EqualTo",
                            "NotEqualTo",
                            "GreaterThan",
                            "LessThan",
                            "Skipped",
                            "Enabled",
                            "Regex"
                        ],
                        "type": "string"
                    },
                    "conditionalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "isCaseSensitive": {
                        "description": "",
                        "type": "string"
                    },
                    "trim": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "conditionalLogicAction": {
                "type": "object",
                "properties": {
                    "objectEntityID": {
                        "description": "links action to field",
                        "type": "string"
                    },
                    "objectEntityType": {
                        "description": "",
                        "enum": [
                            "Field",
                            "SignerAttachment",
                            "SignerPayment"
                        ],
                        "type": "string"
                    },
                    "requireSignerAttachment": {
                        "description": "",
                        "type": "boolean"
                    },
                    "isHidden": {
                        "description": "",
                        "type": "boolean"
                    },
                    "isShown": {
                        "description": "",
                        "type": "boolean"
                    },
                    "isRequired": {
                        "description": "",
                        "type": "boolean"
                    },
                    "requirePayment": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "preparedEnvelopeParsedV3_2": {
                "type": "object",
                "properties": {
                    "content": {
                        "$ref": "#/components/schemas/submissionV3_2",
                        "description": "Provides the data required for submitting an envelope.",
                        "type": "object"
                    }
                }
            },
            "preparedEnvelopeParsed": {
                "type": "object",
                "properties": {
                    "content": {
                        "description": "Provides the data required for submitting an envelope.",
                        "type": "object",
                        "properties": {
                            "addendums": {
                                "description": "Provides a list of non-signable addendums associated with the envelope.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "file": {
                                            "description": "Provides the file metadata and contents for the addendum.",
                                            "type": "object",
                                            "properties": {
                                                "saved": {
                                                    "description": "Specifies the metadata for a previously uploaded file.",
                                                    "type": "object",
                                                    "properties": {
                                                        "fileName": {
                                                            "description": "Specifies the full file name and extension for this previously uploaded file. Note that the filename should not contain any spaces or special characters.",
                                                            "type": "string"
                                                        },
                                                        "location": {
                                                            "description": "Specifies the storage location of this previously uploaded file.",
                                                            "type": "string"
                                                        },
                                                        "pages": {
                                                            "description": "Provides a list of the page images rendered for this previously uploaded file.",
                                                            "type": "array",
                                                            "items": {
                                                                "format": "",
                                                                "type": "object",
                                                                "properties": {
                                                                    "width": {
                                                                        "description": "Specifies the width (in pixels) of a page image.",
                                                                        "type": "string"
                                                                    },
                                                                    "height": {
                                                                        "description": "Specifies the height (in pixels) of a page image.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "fileToUpload": {
                                                    "description": "Specifies the file metadata and file contents for a new file upload.",
                                                    "type": "object",
                                                    "properties": {
                                                        "data": {
                                                            "description": "Specifies the actual file data a Base64-encoded string.",
                                                            "type": "string"
                                                        },
                                                        "fileName": {
                                                            "description": "Specifies the full file name and extension. Example: Policy.pdf",
                                                            "type": "string"
                                                        },
                                                        "parseDocument": {
                                                            "description": "Parse this document for dynamic jotblocks",
                                                            "type": "boolean"
                                                        },
                                                        "dynamicDocumentVersion": {
                                                            "description": "Parse the Document using V2 or V3 syntax. Only applicable if ParseDocument is set to true",
                                                            "enum": [
                                                                "V2"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "name": {
                                            "description": "Specifies the name of the addendum.",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "documents": {
                                "description": "Provides a list of the documents included in the envelope.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "attachments": {
                                            "description": "Provides a list of the signer attachments that will be collected and applied to the document.",
                                            "type": "array",
                                            "items": {
                                                "format": "",
                                                "type": "object",
                                                "properties": {
                                                    "allowMultipleUploads": {
                                                        "description": "Specifies whether or not signers will be allowed to upload more than one file for the requested attachment.",
                                                        "type": "boolean"
                                                    },
                                                    "instructions": {
                                                        "description": "Specifies the instructions that will be presented to the signer when they are prompted to upload the attachment during signing.",
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "description": "Specifies a label for the signer attachment.",
                                                        "type": "string"
                                                    },
                                                    "required": {
                                                        "description": "Specifies whether or not signers will be required to upload a file for the requested attachment.",
                                                        "type": "boolean"
                                                    },
                                                    "signer": {
                                                        "description": "Specifies the 'Label' of the signer that will be prompted to upload the attachement.",
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "fields": {
                                            "description": "Provides a list of the fields (JotBlocks) that will be applied to the document.",
                                            "type": "array",
                                            "items": {
                                                "format": "",
                                                "type": "object",
                                                "properties": {
                                                    "borderSides": {
                                                        "description": "Specifies the borders that should be drawn around the field (if any).",
                                                        "type": "object",
                                                        "properties": {
                                                            "bottom": {
                                                                "description": "Specifies whether or not a border should be rendered on the bottom of the field.",
                                                                "type": "boolean"
                                                            },
                                                            "left": {
                                                                "description": "Specifies whether or not a border should be rendered on the left side of the field.",
                                                                "type": "boolean"
                                                            },
                                                            "right": {
                                                                "description": "Specifies whether or not a border should be rendered on the right side of the field.",
                                                                "type": "boolean"
                                                            },
                                                            "top": {
                                                                "description": "Specifies whether or not a border should be rendered on the top of the field.",
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    },
                                                    "certified": {
                                                        "description": "Specifies whether or not printed metadata uniquely identifying the field should be rendered around it to visually distinguish it from other data on the containing page.",
                                                        "type": "boolean"
                                                    },
                                                    "fieldType": {
                                                        "description": "Specifies the type of input required for the field: signature/initials or text.",
                                                        "enum": [
                                                            "Typed",
                                                            "Signature"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "inputType": {
                                                        "description": "Specifies the source of the input for the field. Possible values include 'Signer' and 'Fixed'.",
                                                        "enum": [
                                                            "Signer",
                                                            "Fixed",
                                                            "Signatory"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "instructions": {
                                                        "description": "Specifies the instructions that will be presented to the signer when they are prompted to provide input for the field.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Specifies the name of the field.",
                                                        "type": "string"
                                                    },
                                                    "pageIndex": {
                                                        "format": "int32",
                                                        "description": "Specifies the 0-based index of the containing page.",
                                                        "type": "integer"
                                                    },
                                                    "position": {
                                                        "description": "Specifies the position of the field relative to the upper-left corner of the containing page. For example: a field with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                                                        "type": "object",
                                                        "properties": {
                                                            "x": {
                                                                "format": "float",
                                                                "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "format": "float",
                                                                "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "required": {
                                                        "description": "Specifies whether or not signer input is required for the field.",
                                                        "type": "boolean"
                                                    },
                                                    "hidden": {
                                                        "description": "Specifies whether or not the field is hidden.",
                                                        "type": "boolean"
                                                    },
                                                    "signer": {
                                                        "description": "Specifies the label identifying the intended signer for fields that require signer input (signature or text).",
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "description": "Specifies the size of the field relative to the size of the containing page. For example: a field with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                                                        "type": "object",
                                                        "properties": {
                                                            "height": {
                                                                "format": "float",
                                                                "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                                                "type": "number"
                                                            },
                                                            "width": {
                                                                "format": "float",
                                                                "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "sourceGroup": {
                                                        "description": "Optionally specifies a common identifier for a group of fields in an envelope that should share a value.",
                                                        "type": "string"
                                                    },
                                                    "tag": {
                                                        "description": "A generic holder of any information you would like to provide",
                                                        "type": "string"
                                                    },
                                                    "fixedText": {
                                                        "description": "Specifies the text contents for the field for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'. Note: content may include merge fields.",
                                                        "type": "string"
                                                    },
                                                    "timing": {
                                                        "description": "Specifies the timing for when the contents of the field will be rendered to the containing document for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'.",
                                                        "enum": [
                                                            "On_Document_Start",
                                                            "On_Document_Complete"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "options": {
                                                        "description": "Provides the list of options to present to the signer for fields with a 'FieldType' of 'Typed' and one of the 'Multiple Choice' signatory input types.",
                                                        "type": "array",
                                                        "items": {
                                                            "format": "",
                                                            "type": "object",
                                                            "properties": {
                                                                "graphicRenderType": {
                                                                    "description": "Specifies how the option will be rendered to the document if selected. Possible values include: Empty = 0, Check = 1, X = 2, No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6",
                                                                    "enum": [
                                                                        "Empty",
                                                                        "Check",
                                                                        "X",
                                                                        "No_Box_Empty",
                                                                        "No_Box_Check",
                                                                        "No_Box_X",
                                                                        "Text",
                                                                        "None"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "selected": {
                                                                    "description": "Specifies whether or not the option will be selected by default.",
                                                                    "type": "boolean"
                                                                },
                                                                "text": {
                                                                    "description": "Specifies the text for the option that will be presented to the signer.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "Specifies the value of the option (may be different than the displayed text).",
                                                                    "type": "string"
                                                                },
                                                                "pageIndex": {
                                                                    "format": "int32",
                                                                    "description": "Specifies the 0-based index of the containing page.",
                                                                    "type": "integer"
                                                                },
                                                                "position": {
                                                                    "description": "Specifies the position of the option relative to the upper-left corner of the containing page for radio button or checkbox options. For example: an option with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "x": {
                                                                            "format": "float",
                                                                            "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                                                            "type": "number"
                                                                        },
                                                                        "y": {
                                                                            "format": "float",
                                                                            "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                                                            "type": "number"
                                                                        }
                                                                    }
                                                                },
                                                                "size": {
                                                                    "description": "Specifies the size of the option relative to the size of the containing page for radio button or checkbox options. For example: an option with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "height": {
                                                                            "format": "float",
                                                                            "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                                                            "type": "number"
                                                                        },
                                                                        "width": {
                                                                            "format": "float",
                                                                            "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                                                            "type": "number"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "multipleChoiceDefaultValues": {
                                                        "description": "Specify list of values that will be automatically selected upon signing.",
                                                        "type": "array",
                                                        "items": {
                                                            "format": "",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "penColor": {
                                                        "description": "Specifies the color of 'ink' used to render the signature for fields with a 'FieldType' of 'Signature'.",
                                                        "enum": [
                                                            "Black",
                                                            "Blue"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "signatureType": {
                                                        "description": "Specifies the type of signature (initials or signature) the signer will be prompted to provide for fields with a 'FieldType' of 'Signature'.",
                                                        "enum": [
                                                            "Signature",
                                                            "Initials"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "signatureStyle": {
                                                        "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                                                        "enum": [
                                                            "Selectable",
                                                            "Drawn",
                                                            "Typed",
                                                            "Classic"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "fontDecoration": {
                                                        "description": "Specifies the font styles that should be applied for fields with a 'FieldType' of 'Typed'.",
                                                        "type": "object",
                                                        "properties": {
                                                            "bold": {
                                                                "description": "Specifies whether or not text content for the field will be rendered in Bold.",
                                                                "type": "boolean"
                                                            },
                                                            "italic": {
                                                                "description": "Specifies whether or not text content for the field will be rendered in Italics.",
                                                                "type": "boolean"
                                                            },
                                                            "underline": {
                                                                "description": "Specifies whether or not text content for the field will be underlined.",
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    },
                                                    "fontName": {
                                                        "description": "Specifies the name of the supported font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'.",
                                                        "enum": [
                                                            "Arial",
                                                            "Bradley_Hand_ITC",
                                                            "Brush_Script_BT",
                                                            "Courier_New",
                                                            "Times_New_Roman",
                                                            "My_Handwriting",
                                                            "Otto"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "fontSize": {
                                                        "description": "Specifies the size of the font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'. Possible values include: 6, 8, 10, 12, 14",
                                                        "type": "integer"
                                                    },
                                                    "horizontalAlignment": {
                                                        "description": "Specifies the horizontal alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                                                        "enum": [
                                                            "Left",
                                                            "Center",
                                                            "Right"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "signerInputType": {
                                                        "description": "Specifies the type of input required from the signer for fields with a 'FieldType' of 'Typed'.",
                                                        "enum": [
                                                            "Free_Text",
                                                            "Prefill",
                                                            "Multiple_Choice_Text",
                                                            "Multiple_Choice_Graphic",
                                                            "Timestamp",
                                                            "Custom_Validation",
                                                            "Multiple_Choice_Radio",
                                                            "Multiple_Choice_Checkbox",
                                                            "Undefined"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "verticalAlignment": {
                                                        "description": "Specifies the vertical alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                                                        "enum": [
                                                            "Top",
                                                            "Middle",
                                                            "Bottom"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "wordWrap": {
                                                        "description": "Specifies whether or not the contents of the field should be automatically wrapped to a new line for fields with a 'FieldType' of 'Typed'.",
                                                        "type": "boolean"
                                                    },
                                                    "formatterType": {
                                                        "description": "Specifies the text mask to apply for fields with a 'FieldType' of 'Typed'.",
                                                        "enum": [
                                                            "ALPHANUMERIC",
                                                            "CREDITCARD",
                                                            "SSN",
                                                            "CUSTOM"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "formatterCode": {
                                                        "description": "Specifies the custom text mask to apply for fields with a 'FieldType' of 'Typed' and a 'FormatterType' of 'Fixed'.",
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "file": {
                                            "description": "Provides the file metadata and contents for the document.",
                                            "type": "object",
                                            "properties": {
                                                "saved": {
                                                    "description": "Specifies the metadata for a previously uploaded file.",
                                                    "type": "object",
                                                    "properties": {
                                                        "fileName": {
                                                            "description": "Specifies the full file name and extension for this previously uploaded file. Note that the filename should not contain any spaces or special characters.",
                                                            "type": "string"
                                                        },
                                                        "location": {
                                                            "description": "Specifies the storage location of this previously uploaded file.",
                                                            "type": "string"
                                                        },
                                                        "pages": {
                                                            "description": "Provides a list of the page images rendered for this previously uploaded file.",
                                                            "type": "array",
                                                            "items": {
                                                                "format": "",
                                                                "type": "object",
                                                                "properties": {
                                                                    "width": {
                                                                        "description": "Specifies the width (in pixels) of a page image.",
                                                                        "type": "string"
                                                                    },
                                                                    "height": {
                                                                        "description": "Specifies the height (in pixels) of a page image.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "fileToUpload": {
                                                    "description": "Specifies the file metadata and file contents for a new file upload.",
                                                    "type": "object",
                                                    "properties": {
                                                        "data": {
                                                            "description": "Specifies the actual file data a Base64-encoded string.",
                                                            "type": "string"
                                                        },
                                                        "fileName": {
                                                            "description": "Specifies the full file name and extension. Example: Policy.pdf",
                                                            "type": "string"
                                                        },
                                                        "parseDocument": {
                                                            "description": "Parse this document for dynamic jotblocks",
                                                            "type": "boolean"
                                                        },
                                                        "dynamicDocumentVersion": {
                                                            "description": "Parse the Document using V2 or V3 syntax. Only applicable if ParseDocument is set to true",
                                                            "enum": [
                                                                "V2"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "name": {
                                            "description": "Specifies a name for the document.",
                                            "type": "string"
                                        },
                                        "orderID": {
                                            "description": "Optionally specifies an order ID or order number to help identify the document.",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "emailNotifications": {
                                "description": "Provides a list of email notifications that will be sent throughout the envelope life-cycle.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "description": "Specifies the body of the email notification. Note: content may include merge fields.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Specifies the name of the email notification.",
                                            "type": "string"
                                        },
                                        "recipients": {
                                            "description": "Provides a list of intended recipients for the email notification. Specify a signer or recipient label to send specific recipients. Specify 'Originator' to send to the envelope originator. Specify 'All_Signers' to send to all signers on this envelope. Specify 'All_Signers_In_Step' to send to all signers that part of the current signing step.",
                                            "type": "array",
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            }
                                        },
                                        "stage": {
                                            "description": "Specifies the stage in the envelope signing process during which the email notification will be sent.",
                                            "enum": [
                                                "Envelope_Start",
                                                "Envelope_PreExpire",
                                                "Envelope_Expire",
                                                "Envelope_Complete",
                                                "Envelope_Cancel",
                                                "Envelope_Decline",
                                                "Signer_Feedback",
                                                "Signer_Auth_Failure",
                                                "Signer_Kba_Start",
                                                "Signer_Kba_Complete",
                                                "Step_Start",
                                                "Step_Complete",
                                                "On_Payment_Approved",
                                                "On_Payment_Declined",
                                                "On_Payment_Refunded",
                                                "On_Envelope_Landing_Visit"
                                            ],
                                            "type": "string"
                                        },
                                        "step": {
                                            "description": "Specifies the 0-based index of the signing step with which the email notification is associated for email notifications with a 'Stage' of 'StepStart' or 'StepComplete'.",
                                            "type": "integer"
                                        },
                                        "subject": {
                                            "description": "Specifies the subject of the email notification. Note: content may include merge fields.",
                                            "type": "string"
                                        },
                                        "customMessage": {
                                            "description": "Specifies a custom message to add at the end of the email notification",
                                            "type": "string"
                                        },
                                        "preExpirationDays": {
                                            "description": "Specifies the amount of days to send a pre-expiration notification. (only applicable to Pre-Expire)",
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "envelope": {
                                "description": "Provides envelope metadata and defines envelope behaviors.",
                                "type": "object",
                                "properties": {
                                    "cultureType": {
                                        "description": "Specifies the target culture for the signing session. Possible values include 'en-US' (English - US), 'es-US' (Spanish - US), and 'fr-CA' (French - Canada). Note that specifying a culture here will control the language displayed to signers and the language of default email and SMS notifications. It will not, however, provide automatic translation of the contents of the documents within the envelope or for any adhoc notifications provided in the submission.",
                                        "type": "string"
                                    },
                                    "declineBehaviorType": {
                                        "description": "Specifies whether signers will be given the option to decline signing for individual documents within the envelope or just to decline the envelope as a whole.",
                                        "enum": [
                                            "Decline_All",
                                            "Decline_Single"
                                        ],
                                        "type": "string"
                                    },
                                    "downloadPassword": {
                                        "description": "Specifies a password that users or notification recipients will be prompted to enter in order to access downloads for the envelope.",
                                        "type": "string"
                                    },
                                    "expirationDate": {
                                        "description": "Optionally specifies the date when the envelope will expire if not completed. If an expiration date is not provided, the expiration date will be automatically set based on the expiration policy configured for the account.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Specifies the name of the envelope.",
                                        "type": "string"
                                    },
                                    "orderID": {
                                        "description": "Optionally specifies an order ID or order number to help identify the document.",
                                        "type": "string"
                                    },
                                    "signingDeviceEnabled": {
                                        "description": "Specifies whether or not support for external signing devices should be enabled for the envelope.",
                                        "type": "boolean"
                                    },
                                    "viewBehaviorType": {
                                        "description": "Specifies whether signers will be able to see all documents within the envelope or just documents for which they are a signing party.",
                                        "enum": [
                                            "View_Signer_Only",
                                            "View_All"
                                        ],
                                        "type": "string"
                                    },
                                    "workflowType": {
                                        "description": "Specifies whether the workflow for the envelope will make signing available to all signers at the same time or if signing will be made available to signers one at a time.",
                                        "enum": [
                                            "Sequential",
                                            "Parallel",
                                            "Custom"
                                        ],
                                        "type": "string"
                                    },
                                    "allowInPersonSigning": {
                                        "description": "Specifies whether or not in person signing should be enabled for the envelope.",
                                        "type": "boolean"
                                    },
                                    "redirectUrl": {
                                        "description": "Optionally specifies a fully qualified domain name that signers will be redirected to after signing when they have no other documents in the envelope they can currently sign. If a URL is specified here, it will supersede any other redirect URLs specified elsewhere in the application (such as a default account redirect URL)",
                                        "type": "string"
                                    },
                                    "termsAndConditions": {
                                        "description": "Specifies additional terms and conditions to be presented to the signer. Your account must be configured to allow customization of the standard terms and conditions.",
                                        "type": "object",
                                        "properties": {
                                            "additionalComplianceStatement": {
                                                "description": "Optional information that will be appended to any default system or account terms.",
                                                "type": "string"
                                            },
                                            "additionalAgreementStatement": {
                                                "description": "Optional information that will be appended to any default system or account agreement terms.",
                                                "type": "string"
                                            },
                                            "additionalExtendedDisclosures": {
                                                "description": "Optional information that will be appended to any default system or account disclosures terms.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "notificationRecipients": {
                                "description": "Provides a list of additional recipients for notifications.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "format": "email",
                                            "description": "Specifies the email address of the recipient.",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "Specifies a label for the recipient. This label can be referenced when specifying recipients for an email notification.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Specifies the full name of the recipient.",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "signers": {
                                "description": "Provides a list of signers defined for the envelope.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "format": "email",
                                            "description": "Specifies the email address for the signer.",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "Specifies a label for the signer. This label can be referenced when specifying the signer for a field or when specifying recipients for an email or SMS notification.",
                                            "type": "string"
                                        },
                                        "mobilePhone": {
                                            "description": "Specifies the mobile phone number for the signer.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Specifies the full name for the signer.",
                                            "type": "string"
                                        },
                                        "password": {
                                            "description": "Specifies a password for the signer that will need to be provided in order to access signing or envelope downloads.",
                                            "type": "string"
                                        },
                                        "passwordPrompt": {
                                            "description": "Specifies the prompt that will be presented to the signer indicating what to enter as a password. For example: 'For security purposes, please enter the last 4 digits of your account number.'",
                                            "type": "string"
                                        },
                                        "signatureStyle": {
                                            "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                                            "enum": [
                                                "Selectable",
                                                "Drawn",
                                                "Typed",
                                                "Classic"
                                            ],
                                            "type": "string"
                                        },
                                        "smsAuthPhone": {
                                            "description": "Specifies the phone number that SMS Two-Factor authentication should use to authenticate the signer for signing or envelope downloads.",
                                            "type": "string"
                                        },
                                        "enableKba": {
                                            "description": "When set to true, KBA property must be populated",
                                            "type": "boolean"
                                        },
                                        "kba": {
                                            "description": "Specifies Knowledge-Based Authentication details used when EnableKba is set to true",
                                            "type": "object",
                                            "properties": {
                                                "firstName": {
                                                    "description": "Specifies the first name used for KBA. 40 character limit",
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "description": "Specifies the last name used for KBA. 40 character limit",
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "description": "Specifies the address used for KBA. 40 character limit",
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "description": "Specifies the city used for KBA. 40 character limit",
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "description": "Specifies the state used for KBA. Must be in State abbreviation format",
                                                    "type": "string"
                                                },
                                                "zip": {
                                                    "description": "Specifies the zip code used for KBA. 5 character number format",
                                                    "type": "string"
                                                },
                                                "ssn": {
                                                    "description": "Specifies the SSN used for KBA. 9 digit SSN (no dashes) or last 4 digits",
                                                    "type": "string"
                                                },
                                                "dobYear": {
                                                    "description": "Specifies the year used for KBA. YYYY format",
                                                    "type": "string"
                                                },
                                                "dobMonth": {
                                                    "description": "Specifies the month used for KBA. M or MM format",
                                                    "type": "string"
                                                },
                                                "dobDay": {
                                                    "description": "Specifies the day used for KBA. D or DD format",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "smsNotifications": {
                                "description": "Provides a list of SMS notifications that will be sent throughout the envelope life-cycle.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "description": "Specifies the body of the SMS notification. Note: content may include merge fields.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Specifies the name of the SMS notification.",
                                            "type": "string"
                                        },
                                        "recipients": {
                                            "description": "Provides a list of intended recipients for the email notification. Specify a signer or recipient label to send specific recipients. Specify 'Originator' to send to the envelope originator. Specify 'All_Signers' to send to all signers on this envelope. Specify 'All_Signers_In_Step' to send to all signers that part of the current signing step.",
                                            "type": "array",
                                            "items": {
                                                "format": "",
                                                "type": "string"
                                            }
                                        },
                                        "stage": {
                                            "description": "Specifies the stage in the envelope signing process during which the email notification will be sent.",
                                            "enum": [
                                                "Envelope_Start",
                                                "Envelope_PreExpire",
                                                "Envelope_Expire",
                                                "Envelope_Complete",
                                                "Envelope_Cancel",
                                                "Envelope_Decline",
                                                "Signer_Feedback",
                                                "Signer_Auth_Failure",
                                                "Signer_Kba_Start",
                                                "Signer_Kba_Complete",
                                                "Step_Start",
                                                "Step_Complete",
                                                "On_Payment_Approved",
                                                "On_Payment_Declined",
                                                "On_Payment_Refunded",
                                                "On_Envelope_Landing_Visit"
                                            ],
                                            "type": "string"
                                        },
                                        "step": {
                                            "description": "Specifies the 0-based index of the signing step with which the email notification is associated for email notifications with a 'Stage' of 'StepStart' or 'StepComplete'.",
                                            "type": "integer"
                                        },
                                        "preExpirationDays": {
                                            "description": "Specifies the amount of days to send a pre-expiration notification. (only applicable to Pre-Expire)",
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "steps": {
                                "description": "Provides a list of workflow steps to be used when using a Custom envelope workflow type.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "Specifies the name of the workflow step.",
                                            "type": "string"
                                        },
                                        "signers": {
                                            "description": "Specifies a list of signers that are included in the step. Any fields defined in other steps will take precedence over signers included in a step.",
                                            "type": "array",
                                            "items": {
                                                "format": "",
                                                "type": "string"
                                            }
                                        },
                                        "fields": {
                                            "description": "Specifies a list of fields that are included in the step. This will override fields included based on their signer in other steps.",
                                            "type": "array",
                                            "items": {
                                                "format": "",
                                                "type": "string"
                                            }
                                        },
                                        "workflowStepDelay": {
                                            "description": "Specifies durations for the workflow step to be delayed.",
                                            "type": "object",
                                            "properties": {
                                                "days": {
                                                    "description": "The number of days the step will be delayed.",
                                                    "type": "integer"
                                                },
                                                "hours": {
                                                    "description": "The number of hours the step will be delayed.",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "conditionalLogicItems": {
                                "description": "Conditional logic allows you to create rules that test conditions during signing to change elements of the signing process.",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "andOrType": {
                                            "description": "",
                                            "enum": [
                                                "And",
                                                "Or"
                                            ],
                                            "type": "string"
                                        },
                                        "conditions": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "format": "",
                                                "type": "object",
                                                "properties": {
                                                    "objectEntityID": {
                                                        "description": "",
                                                        "type": "string"
                                                    },
                                                    "objectEntityType": {
                                                        "description": "",
                                                        "enum": [
                                                            "Field",
                                                            "SignerAttachment",
                                                            "SignerPayment"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "regex": {
                                                        "description": "",
                                                        "type": "string"
                                                    },
                                                    "compareType": {
                                                        "description": "",
                                                        "enum": [
                                                            "Anything",
                                                            "EqualTo",
                                                            "NotEqualTo",
                                                            "GreaterThan",
                                                            "LessThan",
                                                            "Skipped",
                                                            "Enabled",
                                                            "Regex"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "conditionalValue": {
                                                        "description": "",
                                                        "type": "string"
                                                    },
                                                    "isCaseSensitive": {
                                                        "description": "",
                                                        "type": "string"
                                                    },
                                                    "trim": {
                                                        "description": "",
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "actions": {
                                            "description": "",
                                            "type": "array",
                                            "items": {
                                                "format": "",
                                                "type": "object",
                                                "properties": {
                                                    "objectEntityID": {
                                                        "description": "links action to field",
                                                        "type": "string"
                                                    },
                                                    "objectEntityType": {
                                                        "description": "",
                                                        "enum": [
                                                            "Field",
                                                            "SignerAttachment",
                                                            "SignerPayment"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "requireSignerAttachment": {
                                                        "description": "",
                                                        "type": "boolean"
                                                    },
                                                    "isHidden": {
                                                        "description": "",
                                                        "type": "boolean"
                                                    },
                                                    "isShown": {
                                                        "description": "",
                                                        "type": "boolean"
                                                    },
                                                    "isRequired": {
                                                        "description": "",
                                                        "type": "boolean"
                                                    },
                                                    "requirePayment": {
                                                        "description": "",
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "webHookNotifications": {
                                "description": "Provides a list of webhooks in a given stage",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "designName": {
                                            "description": "Specifies the design name of the webhook.",
                                            "type": "string"
                                        },
                                        "timing": {
                                            "description": "Specifies the stage in the envelope signing process during which the webhook will be executed.",
                                            "enum": [
                                                "Envelope_Start",
                                                "Envelope_PreExpire",
                                                "Envelope_Expire",
                                                "Envelope_Complete",
                                                "Envelope_Cancel",
                                                "Envelope_Decline",
                                                "Signer_Feedback",
                                                "Signer_Auth_Failure",
                                                "Signer_Kba_Start",
                                                "Signer_Kba_Complete",
                                                "Step_Start",
                                                "Step_Complete",
                                                "On_Payment_Approved",
                                                "On_Payment_Declined",
                                                "On_Payment_Refunded",
                                                "On_Envelope_Landing_Visit"
                                            ],
                                            "type": "string"
                                        },
                                        "step": {
                                            "description": "Specifies the 0-based index of the signing step with which the webhook is associated (StepStart, StepComplete)",
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "documentTransmissions": {
                                "description": "Provides a list of document transmissions to be executed at Envelope Complete",
                                "type": "array",
                                "items": {
                                    "format": "",
                                    "type": "object",
                                    "properties": {
                                        "designName": {
                                            "description": "Specifies the design name of the Document Transmission.",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "submissionSource": {
                "type": "object"
            },
            "submissionV3_2": {
                "type": "object",
                "properties": {
                    "addendums": {
                        "description": "Provides a list of non-signable addendums associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/addendum",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "documents": {
                        "description": "Provides a list of the documents included in the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/document",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "emailNotifications": {
                        "description": "Provides a list of email notifications that will be sent throughout the envelope life-cycle.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailNotification",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "emailRecipients": {
                        "description": "Provides a list of additional recipients for notifications.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notificationRecipient",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "envelope": {
                        "$ref": "#/components/schemas/envelope",
                        "description": "Provides envelope metadata and defines envelope behaviors.",
                        "type": "object"
                    },
                    "signers": {
                        "description": "Provides a list of signers defined for the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signerV3_2",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "smsNotifications": {
                        "description": "Provides a list of SMS notifications that will be sent throughout the envelope life-cycle.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/smsNotificationSubmission",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "documentV3_2": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "description": "Provides a list of the signer attachments that will be collected and applied to the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attachment",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "fields": {
                        "description": "Provides a list of the fields (JotBlocks) that will be applied to the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/field",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "file": {
                        "$ref": "#/components/schemas/apiFile",
                        "description": "Provides the file metadata and contents for the document.",
                        "type": "object"
                    },
                    "name": {
                        "description": "Specifies a name for the document.",
                        "type": "string"
                    },
                    "orderId": {
                        "description": "Optionally specifies an order ID or order number to help identify the document.",
                        "type": "string"
                    }
                }
            },
            "emailNotificationV3_2": {
                "type": "object",
                "properties": {
                    "body": {
                        "description": "Specifies the body of the email notification. Note: content may include merge fields.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the email notification.",
                        "type": "string"
                    },
                    "recipients": {
                        "description": "Provides a list of intended recipients for the email notification. Specify a signer or recipient label to send specific recipients. Specify 'Originator' to send to the envelope originator. Specific 'AllSigners' to send to all signers on this envelope. Specify 'SignersInStep' to send to all signers that part of the current signing step.",
                        "type": "array",
                        "items": {
                            "format": "email",
                            "type": "string"
                        }
                    },
                    "stage": {
                        "description": "Specifies the stage in the envelope signing process during which the email notification will be sent.",
                        "enum": [
                            "EnvelopeStart",
                            "EnvelopePreExpire",
                            "EnvelopeExpire",
                            "EnvelopeComplete",
                            "EnvelopeCancel",
                            "EnvelopeDecline",
                            "SignerFeedback",
                            "SignerAuthFailure",
                            "SignerKbaStart",
                            "SignerKbaComplete",
                            "StepStart",
                            "StepComplete",
                            "OnPaymentApproved",
                            "OnPaymentDeclined",
                            "OnPaymentRefunded"
                        ],
                        "type": "string"
                    },
                    "step": {
                        "description": "Specifies the 0-based index of the signing step with which the email notification is associated for email notifications with a 'Stage' of 'StepStart' or 'StepComplete'.",
                        "type": "integer"
                    },
                    "subject": {
                        "description": "Specifies the subject of the email notification. Note: content may include merge fields.",
                        "type": "string"
                    }
                }
            },
            "envelopeV3_2": {
                "type": "object",
                "properties": {
                    "cultureType": {
                        "description": "Specifies the target culture for the signing session. Possible values include 'en-US' (English - US), 'es-US' (Spanish - US), and 'fr-CA' (French - Canada). Note that specifying a culture here will control the language displayed to signers and the language of default email and SMS notifications. It will not, however, provide automatic translation of the contents of the documents within the envelope or for any adhoc notifications provided in the submission.",
                        "type": "string"
                    },
                    "declineBehaviorType": {
                        "description": "Specifies whether signers will be given the option to decline signing for individual documents within the envelope or just to decline the envelope as a whole.",
                        "enum": [
                            "DeclineAll",
                            "DeclineSingle"
                        ],
                        "type": "string"
                    },
                    "downloadPassword": {
                        "description": "Specifies a password that users or notification recipients will be prompted to enter in order to access downloads for the envelope.",
                        "type": "string"
                    },
                    "expirationDate": {
                        "description": "Optionally specifies the date when the envelope will expire if not completed. If an expiration date is not provided, the expiration date will be automatically set based on the expiration policy configured for the account.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the envelope.",
                        "type": "string"
                    },
                    "orderId": {
                        "description": "Optionally specifies an order ID or order number to help identify the document.",
                        "type": "string"
                    },
                    "signingDeviceEnabled": {
                        "description": "Specifies whether or not support for external signing devices should be enabled for the envelope.",
                        "type": "boolean"
                    },
                    "viewBehaviorType": {
                        "description": "Specifies whether signers will be able to see all documents within the envelope or just documents for which they are a signing party.",
                        "enum": [
                            "ViewSignatoryOnly",
                            "ViewAll"
                        ],
                        "type": "string"
                    },
                    "workflowType": {
                        "description": "Specifies whether the workflow for the envelope will make signing available to all signers at the same time or if signing will be made available to signers one at a time.",
                        "enum": [
                            "Sequential",
                            "Parallel",
                            "Custom"
                        ],
                        "type": "string"
                    }
                }
            },
            "emailRecipientV3_2": {
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Specifies the email address of the recipient.",
                        "type": "string"
                    },
                    "label": {
                        "description": "Specifies a label for the recipient. This label can be referenced when specifying recipients for an email notification.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the full name of the recipient.",
                        "type": "string"
                    }
                }
            },
            "fieldV3_2": {
                "type": "object",
                "properties": {
                    "borderSides": {
                        "description": "Specifies the borders that should be drawn around the field (if any) as integer representation of a bitwise operator. For Example: None = 0, Top = 1, Right = 2, Bottom = 4, Left = 8, All = 15",
                        "type": "integer"
                    },
                    "certified": {
                        "description": "Specifies whether or not printed metadata uniquely identifying the field should be rendered around it to visually distinguish it from other data on the containing page.",
                        "type": "boolean"
                    },
                    "fieldType": {
                        "description": "Specifies the type of input required for the field: signature/initials or text.",
                        "enum": [
                            "TYPED",
                            "SIGNATURE"
                        ],
                        "type": "string"
                    },
                    "inputType": {
                        "description": "Specifies the source of the input for the field. Possible values include 'Signer' and 'Fixed'.",
                        "enum": [
                            "SIGNER",
                            "PARAMETER",
                            "FIXED",
                            "SIGNATORY"
                        ],
                        "type": "string"
                    },
                    "instructions": {
                        "description": "Specifies the instructions that will be presented to the signer when they are prompted to provide input for the field.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the field.",
                        "type": "string"
                    },
                    "pageIndex": {
                        "format": "int32",
                        "description": "Specifies the 0-based index of the containing page.",
                        "type": "integer"
                    },
                    "position": {
                        "$ref": "#/components/schemas/coordinate",
                        "description": "Specifies the position of the field relative to the upper-left corner of the containing page. For example: a field with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                        "type": "object"
                    },
                    "required": {
                        "description": "Specifies whether or not signer input is required for the field.",
                        "type": "boolean"
                    },
                    "signer": {
                        "description": "Specifies the label identifying the intended signer for fields that require signer input (signature or text).",
                        "type": "string"
                    },
                    "size": {
                        "$ref": "#/components/schemas/fieldSize",
                        "description": "Specifies the size of the field relative to the size of the containing page. For example: a field with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                        "type": "object"
                    },
                    "sourceGroup": {
                        "description": "Optionally specifies a common identifier for a group of fields in an envelope that should share a value.",
                        "type": "string"
                    },
                    "fixedText": {
                        "description": "Specifies the text contents for the field for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'. Note: content may include merge fields.",
                        "type": "string"
                    },
                    "timing": {
                        "description": "Specifies the timing for when the contents of the field will be rendered to the containing document for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'.",
                        "enum": [
                            "ON_DOCUMENT_START",
                            "ON_DOCUMENT_COMPLETE"
                        ],
                        "type": "string"
                    },
                    "options": {
                        "description": "Provides the list of options to present to the signer for fields with a 'FieldType' of 'Typed' and one of the 'Multiple Choice' signatory input types.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fieldOption",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "penColor": {
                        "description": "Specifies the color of 'ink' used to render the signature for fields with a 'FieldType' of 'Signature'.",
                        "enum": [
                            "BLACK",
                            "BLUE"
                        ],
                        "type": "string"
                    },
                    "signatoryInputType": {
                        "description": "Specifies the type of input required from the signer for fields with a 'FieldType' of 'Typed'. Possible values include: Free_Text = 0, Prefill = 1, Multiple_Choice_Text = 2, Multiple_Choice_Graphic = 3, Timestamp = 4, Custom_Validation = 5, Multiple_Choice_Radio = 6, Multiple_Choice_Checkbox = 7",
                        "type": "integer"
                    },
                    "signatureType": {
                        "description": "Specifies the type of signature (initials or signature) the signer will be prompted to provide for fields with a 'FieldType' of 'Signature'.",
                        "enum": [
                            "SIGNATURE",
                            "INITIALS"
                        ],
                        "type": "string"
                    },
                    "signatureStyle": {
                        "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                        "enum": [
                            "SELECTABLE",
                            "DRAWN",
                            "TYPED",
                            "CLASSIC"
                        ],
                        "type": "string"
                    },
                    "fontDecoration": {
                        "description": "Specifies the font styles that should be applied for fields with a 'FieldType' of 'Typed' as an integer representation of a bitwise operator. For Example: Regular = 0, Bold = 1, Italic = 2, Underline = 4, Bold + Italic + Underline = 7",
                        "type": "integer"
                    },
                    "fontName": {
                        "description": "Specifies the name of the supported font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "Arial",
                            "Bradley_Hand_ITC",
                            "Brush_Script_BT",
                            "Courier_New",
                            "Times_New_Roman",
                            "My_Handwriting",
                            "Otto"
                        ],
                        "type": "string"
                    },
                    "fontSize": {
                        "description": "Specifies the size of the font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'. Possible values include: 6, 8, 10, 12, 14",
                        "type": "integer"
                    },
                    "horizontalAlignment": {
                        "description": "Specifies the horizontal alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "LEFT",
                            "CENTER",
                            "RIGHT"
                        ],
                        "type": "string"
                    },
                    "verticalAlignment": {
                        "description": "Specifies the vertical alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "TOP",
                            "MIDDLE",
                            "BOTTOM"
                        ],
                        "type": "string"
                    },
                    "wordWrap": {
                        "description": "Specifies whether or not the contents of the field should be automatically wrapped to a new line for fields with a 'FieldType' of 'Typed'.",
                        "type": "boolean"
                    },
                    "formatterType": {
                        "description": "Specifies the text mask to apply for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "ALPHANUMERIC",
                            "CREDITCARD",
                            "SSN",
                            "CUSTOM"
                        ],
                        "type": "string"
                    },
                    "formatterCode": {
                        "description": "Specifies the custom text mask to apply for fields with a 'FieldType' of 'Typed' and a 'FormatterType' of 'Fixed'.",
                        "type": "string"
                    }
                }
            },
            "fieldOptionV3_2": {
                "type": "object",
                "properties": {
                    "graphicRenderType": {
                        "description": "Specifies how the option will be rendered to the document if selected. Possible values include: Empty = 0, Check = 1, X = 2, No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6",
                        "type": "integer"
                    },
                    "selected": {
                        "description": "Specifies whether or not the option will be selected by default.",
                        "type": "boolean"
                    },
                    "text": {
                        "description": "Specifies the text for the option that will be presented to the signer.",
                        "type": "string"
                    },
                    "value": {
                        "description": "Specifies the value of the option (may be different than the displayed text).",
                        "type": "string"
                    },
                    "position": {
                        "$ref": "#/components/schemas/coordinate",
                        "description": "Specifies the position of the option relative to the upper-left corner of the containing page for radio button or checkbox options. For example: an option with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                        "type": "object"
                    },
                    "pageIndex": {
                        "format": "int32",
                        "description": "Specifies the 0-based index of the containing page.",
                        "type": "integer"
                    },
                    "size": {
                        "$ref": "#/components/schemas/fieldSize",
                        "description": "Specifies the size of the option relative to the size of the containing page for radio button or checkbox options. For example: an option with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                        "type": "object"
                    }
                }
            },
            "signerV3_2": {
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Specifies the email address for the signer.",
                        "type": "string"
                    },
                    "label": {
                        "description": "Specifies a label for the signer. This label can be referenced when specifying the signer for a field or when specifying recipients for an email or SMS notification.",
                        "type": "string"
                    },
                    "mobilePhone": {
                        "description": "Specifies the mobile phone number for the signer.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the full name for the signer.",
                        "type": "string"
                    },
                    "password": {
                        "description": "Specifies a password for the signer that will need to be provided in order to access signing or envelope downloads.",
                        "type": "string"
                    },
                    "passwordPrompt": {
                        "description": "Specifies the prompt that will be presented to the signer indicating what to enter as a password. For example: 'For security purposes, please enter the last 4 digits of your account number.'",
                        "type": "string"
                    },
                    "signatureStyle": {
                        "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                        "enum": [
                            "SELECTABLE",
                            "DRAWN",
                            "TYPED",
                            "CLASSIC"
                        ],
                        "type": "string"
                    }
                }
            },
            "smsNotificationSubmissionV3_2": {
                "type": "object",
                "properties": {
                    "body": {
                        "description": "Specifies the body of the SMS notification. Note: content may include merge fields.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the SMS notification.",
                        "type": "string"
                    },
                    "recipients": {
                        "description": "Provides a list of intended recipients for the email notification. Specify a signer or recipient label to send specific recipients. Specify 'Originator' to send to the envelope originator. Specific 'AllSigners' to send to all signers on this envelope. Specify 'SignersInStep' to send to all signers that part of the current signing step.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    },
                    "stage": {
                        "description": "Specifies the stage in the envelope signing process during which the email notification will be sent.",
                        "enum": [
                            "EnvelopeStart",
                            "EnvelopePreExpire",
                            "EnvelopeExpire",
                            "EnvelopeComplete",
                            "EnvelopeCancel",
                            "EnvelopeDecline",
                            "SignerFeedback",
                            "SignerAuthFailure",
                            "SignerKbaStart",
                            "SignerKbaComplete",
                            "StepStart",
                            "StepComplete",
                            "OnPaymentApproved",
                            "OnPaymentDeclined",
                            "OnPaymentRefunded"
                        ],
                        "type": "string"
                    },
                    "step": {
                        "description": "Specifies the 0-based index of the signing step with which the email notification is associated for email notifications with a 'Stage' of 'StepStart' or 'StepComplete'.",
                        "type": "integer"
                    }
                }
            },
            "submission": {
                "type": "object",
                "properties": {
                    "addendums": {
                        "description": "Provides a list of non-signable addendums associated with the envelope.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "file": {
                                    "description": "Provides the file metadata and contents for the addendum.",
                                    "type": "object",
                                    "properties": {
                                        "saved": {
                                            "description": "Specifies the metadata for a previously uploaded file.",
                                            "type": "object",
                                            "properties": {
                                                "fileName": {
                                                    "description": "Specifies the full file name and extension for this previously uploaded file. Note that the filename should not contain any spaces or special characters.",
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "description": "Specifies the storage location of this previously uploaded file.",
                                                    "type": "string"
                                                },
                                                "pages": {
                                                    "description": "Provides a list of the page images rendered for this previously uploaded file.",
                                                    "type": "array",
                                                    "items": {
                                                        "format": "",
                                                        "type": "object",
                                                        "properties": {
                                                            "width": {
                                                                "description": "Specifies the width (in pixels) of a page image.",
                                                                "type": "string"
                                                            },
                                                            "height": {
                                                                "description": "Specifies the height (in pixels) of a page image.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "fileToUpload": {
                                            "description": "Specifies the file metadata and file contents for a new file upload.",
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "description": "Specifies the actual file data a Base64-encoded string.",
                                                    "type": "string"
                                                },
                                                "fileName": {
                                                    "description": "Specifies the full file name and extension. Example: Policy.pdf",
                                                    "type": "string"
                                                },
                                                "parseDocument": {
                                                    "description": "Parse this document for dynamic jotblocks",
                                                    "type": "boolean"
                                                },
                                                "dynamicDocumentVersion": {
                                                    "description": "Parse the Document using V2 or V3 syntax. Only applicable if ParseDocument is set to true",
                                                    "enum": [
                                                        "V2"
                                                    ],
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "name": {
                                    "description": "Specifies the name of the addendum.",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "documents": {
                        "description": "Provides a list of the documents included in the envelope.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "attachments": {
                                    "description": "Provides a list of the signer attachments that will be collected and applied to the document.",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "object",
                                        "properties": {
                                            "allowMultipleUploads": {
                                                "description": "Specifies whether or not signers will be allowed to upload more than one file for the requested attachment.",
                                                "type": "boolean"
                                            },
                                            "instructions": {
                                                "description": "Specifies the instructions that will be presented to the signer when they are prompted to upload the attachment during signing.",
                                                "type": "string"
                                            },
                                            "label": {
                                                "description": "Specifies a label for the signer attachment.",
                                                "type": "string"
                                            },
                                            "required": {
                                                "description": "Specifies whether or not signers will be required to upload a file for the requested attachment.",
                                                "type": "boolean"
                                            },
                                            "signer": {
                                                "description": "Specifies the 'Label' of the signer that will be prompted to upload the attachement.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "description": "Provides a list of the fields (JotBlocks) that will be applied to the document.",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "object",
                                        "properties": {
                                            "borderSides": {
                                                "description": "Specifies the borders that should be drawn around the field (if any).",
                                                "type": "object",
                                                "properties": {
                                                    "bottom": {
                                                        "description": "Specifies whether or not a border should be rendered on the bottom of the field.",
                                                        "type": "boolean"
                                                    },
                                                    "left": {
                                                        "description": "Specifies whether or not a border should be rendered on the left side of the field.",
                                                        "type": "boolean"
                                                    },
                                                    "right": {
                                                        "description": "Specifies whether or not a border should be rendered on the right side of the field.",
                                                        "type": "boolean"
                                                    },
                                                    "top": {
                                                        "description": "Specifies whether or not a border should be rendered on the top of the field.",
                                                        "type": "boolean"
                                                    }
                                                }
                                            },
                                            "certified": {
                                                "description": "Specifies whether or not printed metadata uniquely identifying the field should be rendered around it to visually distinguish it from other data on the containing page.",
                                                "type": "boolean"
                                            },
                                            "fieldType": {
                                                "description": "Specifies the type of input required for the field: signature/initials or text.",
                                                "enum": [
                                                    "Typed",
                                                    "Signature"
                                                ],
                                                "type": "string"
                                            },
                                            "inputType": {
                                                "description": "Specifies the source of the input for the field. Possible values include 'Signer' and 'Fixed'.",
                                                "enum": [
                                                    "Signer",
                                                    "Fixed",
                                                    "Signatory"
                                                ],
                                                "type": "string"
                                            },
                                            "instructions": {
                                                "description": "Specifies the instructions that will be presented to the signer when they are prompted to provide input for the field.",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "Specifies the name of the field.",
                                                "type": "string"
                                            },
                                            "pageIndex": {
                                                "format": "int32",
                                                "description": "Specifies the 0-based index of the containing page.",
                                                "type": "integer"
                                            },
                                            "position": {
                                                "description": "Specifies the position of the field relative to the upper-left corner of the containing page. For example: a field with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                                                "type": "object",
                                                "properties": {
                                                    "x": {
                                                        "format": "float",
                                                        "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                                        "type": "number"
                                                    },
                                                    "y": {
                                                        "format": "float",
                                                        "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "required": {
                                                "description": "Specifies whether or not signer input is required for the field.",
                                                "type": "boolean"
                                            },
                                            "hidden": {
                                                "description": "Specifies whether or not the field is hidden.",
                                                "type": "boolean"
                                            },
                                            "signer": {
                                                "description": "Specifies the label identifying the intended signer for fields that require signer input (signature or text).",
                                                "type": "string"
                                            },
                                            "size": {
                                                "description": "Specifies the size of the field relative to the size of the containing page. For example: a field with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                                                "type": "object",
                                                "properties": {
                                                    "height": {
                                                        "format": "float",
                                                        "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                                        "type": "number"
                                                    },
                                                    "width": {
                                                        "format": "float",
                                                        "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "sourceGroup": {
                                                "description": "Optionally specifies a common identifier for a group of fields in an envelope that should share a value.",
                                                "type": "string"
                                            },
                                            "tag": {
                                                "description": "A generic holder of any information you would like to provide",
                                                "type": "string"
                                            },
                                            "fixedText": {
                                                "description": "Specifies the text contents for the field for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'. Note: content may include merge fields.",
                                                "type": "string"
                                            },
                                            "timing": {
                                                "description": "Specifies the timing for when the contents of the field will be rendered to the containing document for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'.",
                                                "enum": [
                                                    "On_Document_Start",
                                                    "On_Document_Complete"
                                                ],
                                                "type": "string"
                                            },
                                            "options": {
                                                "description": "Provides the list of options to present to the signer for fields with a 'FieldType' of 'Typed' and one of the 'Multiple Choice' signatory input types.",
                                                "type": "array",
                                                "items": {
                                                    "format": "",
                                                    "type": "object",
                                                    "properties": {
                                                        "graphicRenderType": {
                                                            "description": "Specifies how the option will be rendered to the document if selected. Possible values include: Empty = 0, Check = 1, X = 2, No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6",
                                                            "enum": [
                                                                "Empty",
                                                                "Check",
                                                                "X",
                                                                "No_Box_Empty",
                                                                "No_Box_Check",
                                                                "No_Box_X",
                                                                "Text",
                                                                "None"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "selected": {
                                                            "description": "Specifies whether or not the option will be selected by default.",
                                                            "type": "boolean"
                                                        },
                                                        "text": {
                                                            "description": "Specifies the text for the option that will be presented to the signer.",
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "Specifies the value of the option (may be different than the displayed text).",
                                                            "type": "string"
                                                        },
                                                        "pageIndex": {
                                                            "format": "int32",
                                                            "description": "Specifies the 0-based index of the containing page.",
                                                            "type": "integer"
                                                        },
                                                        "position": {
                                                            "description": "Specifies the position of the option relative to the upper-left corner of the containing page for radio button or checkbox options. For example: an option with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                                                            "type": "object",
                                                            "properties": {
                                                                "x": {
                                                                    "format": "float",
                                                                    "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                                                    "type": "number"
                                                                },
                                                                "y": {
                                                                    "format": "float",
                                                                    "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                                                    "type": "number"
                                                                }
                                                            }
                                                        },
                                                        "size": {
                                                            "description": "Specifies the size of the option relative to the size of the containing page for radio button or checkbox options. For example: an option with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                                                            "type": "object",
                                                            "properties": {
                                                                "height": {
                                                                    "format": "float",
                                                                    "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                                                    "type": "number"
                                                                },
                                                                "width": {
                                                                    "format": "float",
                                                                    "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                                                    "type": "number"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "multipleChoiceDefaultValues": {
                                                "description": "Specify list of values that will be automatically selected upon signing.",
                                                "type": "array",
                                                "items": {
                                                    "format": "",
                                                    "type": "string"
                                                }
                                            },
                                            "penColor": {
                                                "description": "Specifies the color of 'ink' used to render the signature for fields with a 'FieldType' of 'Signature'.",
                                                "enum": [
                                                    "Black",
                                                    "Blue"
                                                ],
                                                "type": "string"
                                            },
                                            "signatureType": {
                                                "description": "Specifies the type of signature (initials or signature) the signer will be prompted to provide for fields with a 'FieldType' of 'Signature'.",
                                                "enum": [
                                                    "Signature",
                                                    "Initials"
                                                ],
                                                "type": "string"
                                            },
                                            "signatureStyle": {
                                                "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                                                "enum": [
                                                    "Selectable",
                                                    "Drawn",
                                                    "Typed",
                                                    "Classic"
                                                ],
                                                "type": "string"
                                            },
                                            "fontDecoration": {
                                                "description": "Specifies the font styles that should be applied for fields with a 'FieldType' of 'Typed'.",
                                                "type": "object",
                                                "properties": {
                                                    "bold": {
                                                        "description": "Specifies whether or not text content for the field will be rendered in Bold.",
                                                        "type": "boolean"
                                                    },
                                                    "italic": {
                                                        "description": "Specifies whether or not text content for the field will be rendered in Italics.",
                                                        "type": "boolean"
                                                    },
                                                    "underline": {
                                                        "description": "Specifies whether or not text content for the field will be underlined.",
                                                        "type": "boolean"
                                                    }
                                                }
                                            },
                                            "fontName": {
                                                "description": "Specifies the name of the supported font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'.",
                                                "enum": [
                                                    "Arial",
                                                    "Bradley_Hand_ITC",
                                                    "Brush_Script_BT",
                                                    "Courier_New",
                                                    "Times_New_Roman",
                                                    "My_Handwriting",
                                                    "Otto"
                                                ],
                                                "type": "string"
                                            },
                                            "fontSize": {
                                                "description": "Specifies the size of the font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'. Possible values include: 6, 8, 10, 12, 14",
                                                "type": "integer"
                                            },
                                            "horizontalAlignment": {
                                                "description": "Specifies the horizontal alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                                                "enum": [
                                                    "Left",
                                                    "Center",
                                                    "Right"
                                                ],
                                                "type": "string"
                                            },
                                            "signerInputType": {
                                                "description": "Specifies the type of input required from the signer for fields with a 'FieldType' of 'Typed'.",
                                                "enum": [
                                                    "Free_Text",
                                                    "Prefill",
                                                    "Multiple_Choice_Text",
                                                    "Multiple_Choice_Graphic",
                                                    "Timestamp",
                                                    "Custom_Validation",
                                                    "Multiple_Choice_Radio",
                                                    "Multiple_Choice_Checkbox",
                                                    "Undefined"
                                                ],
                                                "type": "string"
                                            },
                                            "verticalAlignment": {
                                                "description": "Specifies the vertical alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                                                "enum": [
                                                    "Top",
                                                    "Middle",
                                                    "Bottom"
                                                ],
                                                "type": "string"
                                            },
                                            "wordWrap": {
                                                "description": "Specifies whether or not the contents of the field should be automatically wrapped to a new line for fields with a 'FieldType' of 'Typed'.",
                                                "type": "boolean"
                                            },
                                            "formatterType": {
                                                "description": "Specifies the text mask to apply for fields with a 'FieldType' of 'Typed'.",
                                                "enum": [
                                                    "ALPHANUMERIC",
                                                    "CREDITCARD",
                                                    "SSN",
                                                    "CUSTOM"
                                                ],
                                                "type": "string"
                                            },
                                            "formatterCode": {
                                                "description": "Specifies the custom text mask to apply for fields with a 'FieldType' of 'Typed' and a 'FormatterType' of 'Fixed'.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "file": {
                                    "description": "Provides the file metadata and contents for the document.",
                                    "type": "object",
                                    "properties": {
                                        "saved": {
                                            "description": "Specifies the metadata for a previously uploaded file.",
                                            "type": "object",
                                            "properties": {
                                                "fileName": {
                                                    "description": "Specifies the full file name and extension for this previously uploaded file. Note that the filename should not contain any spaces or special characters.",
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "description": "Specifies the storage location of this previously uploaded file.",
                                                    "type": "string"
                                                },
                                                "pages": {
                                                    "description": "Provides a list of the page images rendered for this previously uploaded file.",
                                                    "type": "array",
                                                    "items": {
                                                        "format": "",
                                                        "type": "object",
                                                        "properties": {
                                                            "width": {
                                                                "description": "Specifies the width (in pixels) of a page image.",
                                                                "type": "string"
                                                            },
                                                            "height": {
                                                                "description": "Specifies the height (in pixels) of a page image.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "fileToUpload": {
                                            "description": "Specifies the file metadata and file contents for a new file upload.",
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "description": "Specifies the actual file data a Base64-encoded string.",
                                                    "type": "string"
                                                },
                                                "fileName": {
                                                    "description": "Specifies the full file name and extension. Example: Policy.pdf",
                                                    "type": "string"
                                                },
                                                "parseDocument": {
                                                    "description": "Parse this document for dynamic jotblocks",
                                                    "type": "boolean"
                                                },
                                                "dynamicDocumentVersion": {
                                                    "description": "Parse the Document using V2 or V3 syntax. Only applicable if ParseDocument is set to true",
                                                    "enum": [
                                                        "V2"
                                                    ],
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "name": {
                                    "description": "Specifies a name for the document.",
                                    "type": "string"
                                },
                                "orderID": {
                                    "description": "Optionally specifies an order ID or order number to help identify the document.",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "emailNotifications": {
                        "description": "Provides a list of email notifications that will be sent throughout the envelope life-cycle.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "body": {
                                    "description": "Specifies the body of the email notification. Note: content may include merge fields.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Specifies the name of the email notification.",
                                    "type": "string"
                                },
                                "recipients": {
                                    "description": "Provides a list of intended recipients for the email notification. Specify a signer or recipient label to send specific recipients. Specify 'Originator' to send to the envelope originator. Specify 'All_Signers' to send to all signers on this envelope. Specify 'All_Signers_In_Step' to send to all signers that part of the current signing step.",
                                    "type": "array",
                                    "items": {
                                        "format": "email",
                                        "type": "string"
                                    }
                                },
                                "stage": {
                                    "description": "Specifies the stage in the envelope signing process during which the email notification will be sent.",
                                    "enum": [
                                        "Envelope_Start",
                                        "Envelope_PreExpire",
                                        "Envelope_Expire",
                                        "Envelope_Complete",
                                        "Envelope_Cancel",
                                        "Envelope_Decline",
                                        "Signer_Feedback",
                                        "Signer_Auth_Failure",
                                        "Signer_Kba_Start",
                                        "Signer_Kba_Complete",
                                        "Step_Start",
                                        "Step_Complete",
                                        "On_Payment_Approved",
                                        "On_Payment_Declined",
                                        "On_Payment_Refunded",
                                        "On_Envelope_Landing_Visit"
                                    ],
                                    "type": "string"
                                },
                                "step": {
                                    "description": "Specifies the 0-based index of the signing step with which the email notification is associated for email notifications with a 'Stage' of 'StepStart' or 'StepComplete'.",
                                    "type": "integer"
                                },
                                "subject": {
                                    "description": "Specifies the subject of the email notification. Note: content may include merge fields.",
                                    "type": "string"
                                },
                                "customMessage": {
                                    "description": "Specifies a custom message to add at the end of the email notification",
                                    "type": "string"
                                },
                                "preExpirationDays": {
                                    "description": "Specifies the amount of days to send a pre-expiration notification. (only applicable to Pre-Expire)",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "envelope": {
                        "description": "Provides envelope metadata and defines envelope behaviors.",
                        "type": "object",
                        "properties": {
                            "cultureType": {
                                "description": "Specifies the target culture for the signing session. Possible values include 'en-US' (English - US), 'es-US' (Spanish - US), and 'fr-CA' (French - Canada). Note that specifying a culture here will control the language displayed to signers and the language of default email and SMS notifications. It will not, however, provide automatic translation of the contents of the documents within the envelope or for any adhoc notifications provided in the submission.",
                                "type": "string"
                            },
                            "declineBehaviorType": {
                                "description": "Specifies whether signers will be given the option to decline signing for individual documents within the envelope or just to decline the envelope as a whole.",
                                "enum": [
                                    "Decline_All",
                                    "Decline_Single"
                                ],
                                "type": "string"
                            },
                            "downloadPassword": {
                                "description": "Specifies a password that users or notification recipients will be prompted to enter in order to access downloads for the envelope.",
                                "type": "string"
                            },
                            "expirationDate": {
                                "description": "Optionally specifies the date when the envelope will expire if not completed. If an expiration date is not provided, the expiration date will be automatically set based on the expiration policy configured for the account.",
                                "type": "string"
                            },
                            "name": {
                                "description": "Specifies the name of the envelope.",
                                "type": "string"
                            },
                            "orderID": {
                                "description": "Optionally specifies an order ID or order number to help identify the document.",
                                "type": "string"
                            },
                            "signingDeviceEnabled": {
                                "description": "Specifies whether or not support for external signing devices should be enabled for the envelope.",
                                "type": "boolean"
                            },
                            "viewBehaviorType": {
                                "description": "Specifies whether signers will be able to see all documents within the envelope or just documents for which they are a signing party.",
                                "enum": [
                                    "View_Signer_Only",
                                    "View_All"
                                ],
                                "type": "string"
                            },
                            "workflowType": {
                                "description": "Specifies whether the workflow for the envelope will make signing available to all signers at the same time or if signing will be made available to signers one at a time.",
                                "enum": [
                                    "Sequential",
                                    "Parallel",
                                    "Custom"
                                ],
                                "type": "string"
                            },
                            "allowInPersonSigning": {
                                "description": "Specifies whether or not in person signing should be enabled for the envelope.",
                                "type": "boolean"
                            },
                            "redirectUrl": {
                                "description": "Optionally specifies a fully qualified domain name that signers will be redirected to after signing when they have no other documents in the envelope they can currently sign. If a URL is specified here, it will supersede any other redirect URLs specified elsewhere in the application (such as a default account redirect URL)",
                                "type": "string"
                            },
                            "termsAndConditions": {
                                "description": "Specifies additional terms and conditions to be presented to the signer. Your account must be configured to allow customization of the standard terms and conditions.",
                                "type": "object",
                                "properties": {
                                    "additionalComplianceStatement": {
                                        "description": "Optional information that will be appended to any default system or account terms.",
                                        "type": "string"
                                    },
                                    "additionalAgreementStatement": {
                                        "description": "Optional information that will be appended to any default system or account agreement terms.",
                                        "type": "string"
                                    },
                                    "additionalExtendedDisclosures": {
                                        "description": "Optional information that will be appended to any default system or account disclosures terms.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "notificationRecipients": {
                        "description": "Provides a list of additional recipients for notifications.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "email": {
                                    "format": "email",
                                    "description": "Specifies the email address of the recipient.",
                                    "type": "string"
                                },
                                "label": {
                                    "description": "Specifies a label for the recipient. This label can be referenced when specifying recipients for an email notification.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Specifies the full name of the recipient.",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "signers": {
                        "description": "Provides a list of signers defined for the envelope.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "email": {
                                    "format": "email",
                                    "description": "Specifies the email address for the signer.",
                                    "type": "string"
                                },
                                "label": {
                                    "description": "Specifies a label for the signer. This label can be referenced when specifying the signer for a field or when specifying recipients for an email or SMS notification.",
                                    "type": "string"
                                },
                                "mobilePhone": {
                                    "description": "Specifies the mobile phone number for the signer.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Specifies the full name for the signer.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Specifies a password for the signer that will need to be provided in order to access signing or envelope downloads.",
                                    "type": "string"
                                },
                                "passwordPrompt": {
                                    "description": "Specifies the prompt that will be presented to the signer indicating what to enter as a password. For example: 'For security purposes, please enter the last 4 digits of your account number.'",
                                    "type": "string"
                                },
                                "signatureStyle": {
                                    "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                                    "enum": [
                                        "Selectable",
                                        "Drawn",
                                        "Typed",
                                        "Classic"
                                    ],
                                    "type": "string"
                                },
                                "smsAuthPhone": {
                                    "description": "Specifies the phone number that SMS Two-Factor authentication should use to authenticate the signer for signing or envelope downloads.",
                                    "type": "string"
                                },
                                "enableKba": {
                                    "description": "When set to true, KBA property must be populated",
                                    "type": "boolean"
                                },
                                "kba": {
                                    "description": "Specifies Knowledge-Based Authentication details used when EnableKba is set to true",
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "description": "Specifies the first name used for KBA. 40 character limit",
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "description": "Specifies the last name used for KBA. 40 character limit",
                                            "type": "string"
                                        },
                                        "address": {
                                            "description": "Specifies the address used for KBA. 40 character limit",
                                            "type": "string"
                                        },
                                        "city": {
                                            "description": "Specifies the city used for KBA. 40 character limit",
                                            "type": "string"
                                        },
                                        "state": {
                                            "description": "Specifies the state used for KBA. Must be in State abbreviation format",
                                            "type": "string"
                                        },
                                        "zip": {
                                            "description": "Specifies the zip code used for KBA. 5 character number format",
                                            "type": "string"
                                        },
                                        "ssn": {
                                            "description": "Specifies the SSN used for KBA. 9 digit SSN (no dashes) or last 4 digits",
                                            "type": "string"
                                        },
                                        "dobYear": {
                                            "description": "Specifies the year used for KBA. YYYY format",
                                            "type": "string"
                                        },
                                        "dobMonth": {
                                            "description": "Specifies the month used for KBA. M or MM format",
                                            "type": "string"
                                        },
                                        "dobDay": {
                                            "description": "Specifies the day used for KBA. D or DD format",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "smsNotifications": {
                        "description": "Provides a list of SMS notifications that will be sent throughout the envelope life-cycle.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "body": {
                                    "description": "Specifies the body of the SMS notification. Note: content may include merge fields.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Specifies the name of the SMS notification.",
                                    "type": "string"
                                },
                                "recipients": {
                                    "description": "Provides a list of intended recipients for the email notification. Specify a signer or recipient label to send specific recipients. Specify 'Originator' to send to the envelope originator. Specify 'All_Signers' to send to all signers on this envelope. Specify 'All_Signers_In_Step' to send to all signers that part of the current signing step.",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "string"
                                    }
                                },
                                "stage": {
                                    "description": "Specifies the stage in the envelope signing process during which the email notification will be sent.",
                                    "enum": [
                                        "Envelope_Start",
                                        "Envelope_PreExpire",
                                        "Envelope_Expire",
                                        "Envelope_Complete",
                                        "Envelope_Cancel",
                                        "Envelope_Decline",
                                        "Signer_Feedback",
                                        "Signer_Auth_Failure",
                                        "Signer_Kba_Start",
                                        "Signer_Kba_Complete",
                                        "Step_Start",
                                        "Step_Complete",
                                        "On_Payment_Approved",
                                        "On_Payment_Declined",
                                        "On_Payment_Refunded",
                                        "On_Envelope_Landing_Visit"
                                    ],
                                    "type": "string"
                                },
                                "step": {
                                    "description": "Specifies the 0-based index of the signing step with which the email notification is associated for email notifications with a 'Stage' of 'StepStart' or 'StepComplete'.",
                                    "type": "integer"
                                },
                                "preExpirationDays": {
                                    "description": "Specifies the amount of days to send a pre-expiration notification. (only applicable to Pre-Expire)",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "steps": {
                        "description": "Provides a list of workflow steps to be used when using a Custom envelope workflow type.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "Specifies the name of the workflow step.",
                                    "type": "string"
                                },
                                "signers": {
                                    "description": "Specifies a list of signers that are included in the step. Any fields defined in other steps will take precedence over signers included in a step.",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "string"
                                    }
                                },
                                "fields": {
                                    "description": "Specifies a list of fields that are included in the step. This will override fields included based on their signer in other steps.",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "string"
                                    }
                                },
                                "workflowStepDelay": {
                                    "description": "Specifies durations for the workflow step to be delayed.",
                                    "type": "object",
                                    "properties": {
                                        "days": {
                                            "description": "The number of days the step will be delayed.",
                                            "type": "integer"
                                        },
                                        "hours": {
                                            "description": "The number of hours the step will be delayed.",
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "conditionalLogicItems": {
                        "description": "Conditional logic allows you to create rules that test conditions during signing to change elements of the signing process.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "andOrType": {
                                    "description": "",
                                    "enum": [
                                        "And",
                                        "Or"
                                    ],
                                    "type": "string"
                                },
                                "conditions": {
                                    "description": "",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "object",
                                        "properties": {
                                            "objectEntityID": {
                                                "description": "",
                                                "type": "string"
                                            },
                                            "objectEntityType": {
                                                "description": "",
                                                "enum": [
                                                    "Field",
                                                    "SignerAttachment",
                                                    "SignerPayment"
                                                ],
                                                "type": "string"
                                            },
                                            "regex": {
                                                "description": "",
                                                "type": "string"
                                            },
                                            "compareType": {
                                                "description": "",
                                                "enum": [
                                                    "Anything",
                                                    "EqualTo",
                                                    "NotEqualTo",
                                                    "GreaterThan",
                                                    "LessThan",
                                                    "Skipped",
                                                    "Enabled",
                                                    "Regex"
                                                ],
                                                "type": "string"
                                            },
                                            "conditionalValue": {
                                                "description": "",
                                                "type": "string"
                                            },
                                            "isCaseSensitive": {
                                                "description": "",
                                                "type": "string"
                                            },
                                            "trim": {
                                                "description": "",
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                },
                                "actions": {
                                    "description": "",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "object",
                                        "properties": {
                                            "objectEntityID": {
                                                "description": "links action to field",
                                                "type": "string"
                                            },
                                            "objectEntityType": {
                                                "description": "",
                                                "enum": [
                                                    "Field",
                                                    "SignerAttachment",
                                                    "SignerPayment"
                                                ],
                                                "type": "string"
                                            },
                                            "requireSignerAttachment": {
                                                "description": "",
                                                "type": "boolean"
                                            },
                                            "isHidden": {
                                                "description": "",
                                                "type": "boolean"
                                            },
                                            "isShown": {
                                                "description": "",
                                                "type": "boolean"
                                            },
                                            "isRequired": {
                                                "description": "",
                                                "type": "boolean"
                                            },
                                            "requirePayment": {
                                                "description": "",
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "webHookNotifications": {
                        "description": "Provides a list of webhooks in a given stage",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "designName": {
                                    "description": "Specifies the design name of the webhook.",
                                    "type": "string"
                                },
                                "timing": {
                                    "description": "Specifies the stage in the envelope signing process during which the webhook will be executed.",
                                    "enum": [
                                        "Envelope_Start",
                                        "Envelope_PreExpire",
                                        "Envelope_Expire",
                                        "Envelope_Complete",
                                        "Envelope_Cancel",
                                        "Envelope_Decline",
                                        "Signer_Feedback",
                                        "Signer_Auth_Failure",
                                        "Signer_Kba_Start",
                                        "Signer_Kba_Complete",
                                        "Step_Start",
                                        "Step_Complete",
                                        "On_Payment_Approved",
                                        "On_Payment_Declined",
                                        "On_Payment_Refunded",
                                        "On_Envelope_Landing_Visit"
                                    ],
                                    "type": "string"
                                },
                                "step": {
                                    "description": "Specifies the 0-based index of the signing step with which the webhook is associated (StepStart, StepComplete)",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "documentTransmissions": {
                        "description": "Provides a list of document transmissions to be executed at Envelope Complete",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "designName": {
                                    "description": "Specifies the design name of the Document Transmission.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "addendum": {
                "type": "object",
                "properties": {
                    "file": {
                        "description": "Provides the file metadata and contents for the addendum.",
                        "type": "object",
                        "properties": {
                            "saved": {
                                "description": "Specifies the metadata for a previously uploaded file.",
                                "type": "object",
                                "properties": {
                                    "fileName": {
                                        "description": "Specifies the full file name and extension for this previously uploaded file. Note that the filename should not contain any spaces or special characters.",
                                        "type": "string"
                                    },
                                    "location": {
                                        "description": "Specifies the storage location of this previously uploaded file.",
                                        "type": "string"
                                    },
                                    "pages": {
                                        "description": "Provides a list of the page images rendered for this previously uploaded file.",
                                        "type": "array",
                                        "items": {
                                            "format": "",
                                            "type": "object",
                                            "properties": {
                                                "width": {
                                                    "description": "Specifies the width (in pixels) of a page image.",
                                                    "type": "string"
                                                },
                                                "height": {
                                                    "description": "Specifies the height (in pixels) of a page image.",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "fileToUpload": {
                                "description": "Specifies the file metadata and file contents for a new file upload.",
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "description": "Specifies the actual file data a Base64-encoded string.",
                                        "type": "string"
                                    },
                                    "fileName": {
                                        "description": "Specifies the full file name and extension. Example: Policy.pdf",
                                        "type": "string"
                                    },
                                    "parseDocument": {
                                        "description": "Parse this document for dynamic jotblocks",
                                        "type": "boolean"
                                    },
                                    "dynamicDocumentVersion": {
                                        "description": "Parse the Document using V2 or V3 syntax. Only applicable if ParseDocument is set to true",
                                        "enum": [
                                            "V2"
                                        ],
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "name": {
                        "description": "Specifies the name of the addendum.",
                        "type": "string"
                    }
                }
            },
            "attachment": {
                "type": "object",
                "properties": {
                    "allowMultipleUploads": {
                        "description": "Specifies whether or not signers will be allowed to upload more than one file for the requested attachment.",
                        "type": "boolean"
                    },
                    "instructions": {
                        "description": "Specifies the instructions that will be presented to the signer when they are prompted to upload the attachment during signing.",
                        "type": "string"
                    },
                    "label": {
                        "description": "Specifies a label for the signer attachment.",
                        "type": "string"
                    },
                    "required": {
                        "description": "Specifies whether or not signers will be required to upload a file for the requested attachment.",
                        "type": "boolean"
                    },
                    "signer": {
                        "description": "Specifies the 'Label' of the signer that will be prompted to upload the attachement.",
                        "type": "string"
                    }
                }
            },
            "coordinate": {
                "type": "object",
                "properties": {
                    "x": {
                        "format": "float",
                        "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                        "type": "number"
                    },
                    "y": {
                        "format": "float",
                        "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                        "type": "number"
                    }
                }
            },
            "document": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "description": "Provides a list of the signer attachments that will be collected and applied to the document.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "allowMultipleUploads": {
                                    "description": "Specifies whether or not signers will be allowed to upload more than one file for the requested attachment.",
                                    "type": "boolean"
                                },
                                "instructions": {
                                    "description": "Specifies the instructions that will be presented to the signer when they are prompted to upload the attachment during signing.",
                                    "type": "string"
                                },
                                "label": {
                                    "description": "Specifies a label for the signer attachment.",
                                    "type": "string"
                                },
                                "required": {
                                    "description": "Specifies whether or not signers will be required to upload a file for the requested attachment.",
                                    "type": "boolean"
                                },
                                "signer": {
                                    "description": "Specifies the 'Label' of the signer that will be prompted to upload the attachement.",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "fields": {
                        "description": "Provides a list of the fields (JotBlocks) that will be applied to the document.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "borderSides": {
                                    "description": "Specifies the borders that should be drawn around the field (if any).",
                                    "type": "object",
                                    "properties": {
                                        "bottom": {
                                            "description": "Specifies whether or not a border should be rendered on the bottom of the field.",
                                            "type": "boolean"
                                        },
                                        "left": {
                                            "description": "Specifies whether or not a border should be rendered on the left side of the field.",
                                            "type": "boolean"
                                        },
                                        "right": {
                                            "description": "Specifies whether or not a border should be rendered on the right side of the field.",
                                            "type": "boolean"
                                        },
                                        "top": {
                                            "description": "Specifies whether or not a border should be rendered on the top of the field.",
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "certified": {
                                    "description": "Specifies whether or not printed metadata uniquely identifying the field should be rendered around it to visually distinguish it from other data on the containing page.",
                                    "type": "boolean"
                                },
                                "fieldType": {
                                    "description": "Specifies the type of input required for the field: signature/initials or text.",
                                    "enum": [
                                        "Typed",
                                        "Signature"
                                    ],
                                    "type": "string"
                                },
                                "inputType": {
                                    "description": "Specifies the source of the input for the field. Possible values include 'Signer' and 'Fixed'.",
                                    "enum": [
                                        "Signer",
                                        "Fixed",
                                        "Signatory"
                                    ],
                                    "type": "string"
                                },
                                "instructions": {
                                    "description": "Specifies the instructions that will be presented to the signer when they are prompted to provide input for the field.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Specifies the name of the field.",
                                    "type": "string"
                                },
                                "pageIndex": {
                                    "format": "int32",
                                    "description": "Specifies the 0-based index of the containing page.",
                                    "type": "integer"
                                },
                                "position": {
                                    "description": "Specifies the position of the field relative to the upper-left corner of the containing page. For example: a field with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                                    "type": "object",
                                    "properties": {
                                        "x": {
                                            "format": "float",
                                            "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "format": "float",
                                            "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                            "type": "number"
                                        }
                                    }
                                },
                                "required": {
                                    "description": "Specifies whether or not signer input is required for the field.",
                                    "type": "boolean"
                                },
                                "hidden": {
                                    "description": "Specifies whether or not the field is hidden.",
                                    "type": "boolean"
                                },
                                "signer": {
                                    "description": "Specifies the label identifying the intended signer for fields that require signer input (signature or text).",
                                    "type": "string"
                                },
                                "size": {
                                    "description": "Specifies the size of the field relative to the size of the containing page. For example: a field with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                                    "type": "object",
                                    "properties": {
                                        "height": {
                                            "format": "float",
                                            "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                            "type": "number"
                                        },
                                        "width": {
                                            "format": "float",
                                            "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                            "type": "number"
                                        }
                                    }
                                },
                                "sourceGroup": {
                                    "description": "Optionally specifies a common identifier for a group of fields in an envelope that should share a value.",
                                    "type": "string"
                                },
                                "tag": {
                                    "description": "A generic holder of any information you would like to provide",
                                    "type": "string"
                                },
                                "fixedText": {
                                    "description": "Specifies the text contents for the field for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'. Note: content may include merge fields.",
                                    "type": "string"
                                },
                                "timing": {
                                    "description": "Specifies the timing for when the contents of the field will be rendered to the containing document for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'.",
                                    "enum": [
                                        "On_Document_Start",
                                        "On_Document_Complete"
                                    ],
                                    "type": "string"
                                },
                                "options": {
                                    "description": "Provides the list of options to present to the signer for fields with a 'FieldType' of 'Typed' and one of the 'Multiple Choice' signatory input types.",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "object",
                                        "properties": {
                                            "graphicRenderType": {
                                                "description": "Specifies how the option will be rendered to the document if selected. Possible values include: Empty = 0, Check = 1, X = 2, No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6",
                                                "enum": [
                                                    "Empty",
                                                    "Check",
                                                    "X",
                                                    "No_Box_Empty",
                                                    "No_Box_Check",
                                                    "No_Box_X",
                                                    "Text",
                                                    "None"
                                                ],
                                                "type": "string"
                                            },
                                            "selected": {
                                                "description": "Specifies whether or not the option will be selected by default.",
                                                "type": "boolean"
                                            },
                                            "text": {
                                                "description": "Specifies the text for the option that will be presented to the signer.",
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Specifies the value of the option (may be different than the displayed text).",
                                                "type": "string"
                                            },
                                            "pageIndex": {
                                                "format": "int32",
                                                "description": "Specifies the 0-based index of the containing page.",
                                                "type": "integer"
                                            },
                                            "position": {
                                                "description": "Specifies the position of the option relative to the upper-left corner of the containing page for radio button or checkbox options. For example: an option with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                                                "type": "object",
                                                "properties": {
                                                    "x": {
                                                        "format": "float",
                                                        "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                                        "type": "number"
                                                    },
                                                    "y": {
                                                        "format": "float",
                                                        "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "size": {
                                                "description": "Specifies the size of the option relative to the size of the containing page for radio button or checkbox options. For example: an option with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                                                "type": "object",
                                                "properties": {
                                                    "height": {
                                                        "format": "float",
                                                        "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                                        "type": "number"
                                                    },
                                                    "width": {
                                                        "format": "float",
                                                        "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "multipleChoiceDefaultValues": {
                                    "description": "Specify list of values that will be automatically selected upon signing.",
                                    "type": "array",
                                    "items": {
                                        "format": "",
                                        "type": "string"
                                    }
                                },
                                "penColor": {
                                    "description": "Specifies the color of 'ink' used to render the signature for fields with a 'FieldType' of 'Signature'.",
                                    "enum": [
                                        "Black",
                                        "Blue"
                                    ],
                                    "type": "string"
                                },
                                "signatureType": {
                                    "description": "Specifies the type of signature (initials or signature) the signer will be prompted to provide for fields with a 'FieldType' of 'Signature'.",
                                    "enum": [
                                        "Signature",
                                        "Initials"
                                    ],
                                    "type": "string"
                                },
                                "signatureStyle": {
                                    "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                                    "enum": [
                                        "Selectable",
                                        "Drawn",
                                        "Typed",
                                        "Classic"
                                    ],
                                    "type": "string"
                                },
                                "fontDecoration": {
                                    "description": "Specifies the font styles that should be applied for fields with a 'FieldType' of 'Typed'.",
                                    "type": "object",
                                    "properties": {
                                        "bold": {
                                            "description": "Specifies whether or not text content for the field will be rendered in Bold.",
                                            "type": "boolean"
                                        },
                                        "italic": {
                                            "description": "Specifies whether or not text content for the field will be rendered in Italics.",
                                            "type": "boolean"
                                        },
                                        "underline": {
                                            "description": "Specifies whether or not text content for the field will be underlined.",
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "fontName": {
                                    "description": "Specifies the name of the supported font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'.",
                                    "enum": [
                                        "Arial",
                                        "Bradley_Hand_ITC",
                                        "Brush_Script_BT",
                                        "Courier_New",
                                        "Times_New_Roman",
                                        "My_Handwriting",
                                        "Otto"
                                    ],
                                    "type": "string"
                                },
                                "fontSize": {
                                    "description": "Specifies the size of the font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'. Possible values include: 6, 8, 10, 12, 14",
                                    "type": "integer"
                                },
                                "horizontalAlignment": {
                                    "description": "Specifies the horizontal alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                                    "enum": [
                                        "Left",
                                        "Center",
                                        "Right"
                                    ],
                                    "type": "string"
                                },
                                "signerInputType": {
                                    "description": "Specifies the type of input required from the signer for fields with a 'FieldType' of 'Typed'.",
                                    "enum": [
                                        "Free_Text",
                                        "Prefill",
                                        "Multiple_Choice_Text",
                                        "Multiple_Choice_Graphic",
                                        "Timestamp",
                                        "Custom_Validation",
                                        "Multiple_Choice_Radio",
                                        "Multiple_Choice_Checkbox",
                                        "Undefined"
                                    ],
                                    "type": "string"
                                },
                                "verticalAlignment": {
                                    "description": "Specifies the vertical alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                                    "enum": [
                                        "Top",
                                        "Middle",
                                        "Bottom"
                                    ],
                                    "type": "string"
                                },
                                "wordWrap": {
                                    "description": "Specifies whether or not the contents of the field should be automatically wrapped to a new line for fields with a 'FieldType' of 'Typed'.",
                                    "type": "boolean"
                                },
                                "formatterType": {
                                    "description": "Specifies the text mask to apply for fields with a 'FieldType' of 'Typed'.",
                                    "enum": [
                                        "ALPHANUMERIC",
                                        "CREDITCARD",
                                        "SSN",
                                        "CUSTOM"
                                    ],
                                    "type": "string"
                                },
                                "formatterCode": {
                                    "description": "Specifies the custom text mask to apply for fields with a 'FieldType' of 'Typed' and a 'FormatterType' of 'Fixed'.",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "file": {
                        "description": "Provides the file metadata and contents for the document.",
                        "type": "object",
                        "properties": {
                            "saved": {
                                "description": "Specifies the metadata for a previously uploaded file.",
                                "type": "object",
                                "properties": {
                                    "fileName": {
                                        "description": "Specifies the full file name and extension for this previously uploaded file. Note that the filename should not contain any spaces or special characters.",
                                        "type": "string"
                                    },
                                    "location": {
                                        "description": "Specifies the storage location of this previously uploaded file.",
                                        "type": "string"
                                    },
                                    "pages": {
                                        "description": "Provides a list of the page images rendered for this previously uploaded file.",
                                        "type": "array",
                                        "items": {
                                            "format": "",
                                            "type": "object",
                                            "properties": {
                                                "width": {
                                                    "description": "Specifies the width (in pixels) of a page image.",
                                                    "type": "string"
                                                },
                                                "height": {
                                                    "description": "Specifies the height (in pixels) of a page image.",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "fileToUpload": {
                                "description": "Specifies the file metadata and file contents for a new file upload.",
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "description": "Specifies the actual file data a Base64-encoded string.",
                                        "type": "string"
                                    },
                                    "fileName": {
                                        "description": "Specifies the full file name and extension. Example: Policy.pdf",
                                        "type": "string"
                                    },
                                    "parseDocument": {
                                        "description": "Parse this document for dynamic jotblocks",
                                        "type": "boolean"
                                    },
                                    "dynamicDocumentVersion": {
                                        "description": "Parse the Document using V2 or V3 syntax. Only applicable if ParseDocument is set to true",
                                        "enum": [
                                            "V2"
                                        ],
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "name": {
                        "description": "Specifies a name for the document.",
                        "type": "string"
                    },
                    "orderID": {
                        "description": "Optionally specifies an order ID or order number to help identify the document.",
                        "type": "string"
                    }
                }
            },
            "emailNotification": {
                "type": "object",
                "properties": {
                    "body": {
                        "description": "Specifies the body of the email notification. Note: content may include merge fields.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the email notification.",
                        "type": "string"
                    },
                    "recipients": {
                        "description": "Provides a list of intended recipients for the email notification. Specify a signer or recipient label to send specific recipients. Specify 'Originator' to send to the envelope originator. Specify 'All_Signers' to send to all signers on this envelope. Specify 'All_Signers_In_Step' to send to all signers that part of the current signing step.",
                        "type": "array",
                        "items": {
                            "format": "email",
                            "type": "string"
                        }
                    },
                    "stage": {
                        "description": "Specifies the stage in the envelope signing process during which the email notification will be sent.",
                        "enum": [
                            "Envelope_Start",
                            "Envelope_PreExpire",
                            "Envelope_Expire",
                            "Envelope_Complete",
                            "Envelope_Cancel",
                            "Envelope_Decline",
                            "Signer_Feedback",
                            "Signer_Auth_Failure",
                            "Signer_Kba_Start",
                            "Signer_Kba_Complete",
                            "Step_Start",
                            "Step_Complete",
                            "On_Payment_Approved",
                            "On_Payment_Declined",
                            "On_Payment_Refunded",
                            "On_Envelope_Landing_Visit"
                        ],
                        "type": "string"
                    },
                    "step": {
                        "description": "Specifies the 0-based index of the signing step with which the email notification is associated for email notifications with a 'Stage' of 'StepStart' or 'StepComplete'.",
                        "type": "integer"
                    },
                    "subject": {
                        "description": "Specifies the subject of the email notification. Note: content may include merge fields.",
                        "type": "string"
                    },
                    "customMessage": {
                        "description": "Specifies a custom message to add at the end of the email notification",
                        "type": "string"
                    },
                    "preExpirationDays": {
                        "description": "Specifies the amount of days to send a pre-expiration notification. (only applicable to Pre-Expire)",
                        "type": "integer"
                    }
                }
            },
            "envelope": {
                "type": "object",
                "properties": {
                    "cultureType": {
                        "description": "Specifies the target culture for the signing session. Possible values include 'en-US' (English - US), 'es-US' (Spanish - US), and 'fr-CA' (French - Canada). Note that specifying a culture here will control the language displayed to signers and the language of default email and SMS notifications. It will not, however, provide automatic translation of the contents of the documents within the envelope or for any adhoc notifications provided in the submission.",
                        "type": "string"
                    },
                    "declineBehaviorType": {
                        "description": "Specifies whether signers will be given the option to decline signing for individual documents within the envelope or just to decline the envelope as a whole.",
                        "enum": [
                            "Decline_All",
                            "Decline_Single"
                        ],
                        "type": "string"
                    },
                    "downloadPassword": {
                        "description": "Specifies a password that users or notification recipients will be prompted to enter in order to access downloads for the envelope.",
                        "type": "string"
                    },
                    "expirationDate": {
                        "description": "Optionally specifies the date when the envelope will expire if not completed. If an expiration date is not provided, the expiration date will be automatically set based on the expiration policy configured for the account.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the envelope.",
                        "type": "string"
                    },
                    "orderID": {
                        "description": "Optionally specifies an order ID or order number to help identify the document.",
                        "type": "string"
                    },
                    "signingDeviceEnabled": {
                        "description": "Specifies whether or not support for external signing devices should be enabled for the envelope.",
                        "type": "boolean"
                    },
                    "viewBehaviorType": {
                        "description": "Specifies whether signers will be able to see all documents within the envelope or just documents for which they are a signing party.",
                        "enum": [
                            "View_Signer_Only",
                            "View_All"
                        ],
                        "type": "string"
                    },
                    "workflowType": {
                        "description": "Specifies whether the workflow for the envelope will make signing available to all signers at the same time or if signing will be made available to signers one at a time.",
                        "enum": [
                            "Sequential",
                            "Parallel",
                            "Custom"
                        ],
                        "type": "string"
                    },
                    "allowInPersonSigning": {
                        "description": "Specifies whether or not in person signing should be enabled for the envelope.",
                        "type": "boolean"
                    },
                    "redirectUrl": {
                        "description": "Optionally specifies a fully qualified domain name that signers will be redirected to after signing when they have no other documents in the envelope they can currently sign. If a URL is specified here, it will supersede any other redirect URLs specified elsewhere in the application (such as a default account redirect URL)",
                        "type": "string"
                    },
                    "termsAndConditions": {
                        "description": "Specifies additional terms and conditions to be presented to the signer. Your account must be configured to allow customization of the standard terms and conditions.",
                        "type": "object",
                        "properties": {
                            "additionalComplianceStatement": {
                                "description": "Optional information that will be appended to any default system or account terms.",
                                "type": "string"
                            },
                            "additionalAgreementStatement": {
                                "description": "Optional information that will be appended to any default system or account agreement terms.",
                                "type": "string"
                            },
                            "additionalExtendedDisclosures": {
                                "description": "Optional information that will be appended to any default system or account disclosures terms.",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "termsAndConditions": {
                "type": "object",
                "properties": {
                    "additionalComplianceStatement": {
                        "description": "Optional information that will be appended to any default system or account terms.",
                        "type": "string"
                    },
                    "additionalAgreementStatement": {
                        "description": "Optional information that will be appended to any default system or account agreement terms.",
                        "type": "string"
                    },
                    "additionalExtendedDisclosures": {
                        "description": "Optional information that will be appended to any default system or account disclosures terms.",
                        "type": "string"
                    }
                }
            },
            "field": {
                "type": "object",
                "properties": {
                    "borderSides": {
                        "description": "Specifies the borders that should be drawn around the field (if any).",
                        "type": "object",
                        "properties": {
                            "bottom": {
                                "description": "Specifies whether or not a border should be rendered on the bottom of the field.",
                                "type": "boolean"
                            },
                            "left": {
                                "description": "Specifies whether or not a border should be rendered on the left side of the field.",
                                "type": "boolean"
                            },
                            "right": {
                                "description": "Specifies whether or not a border should be rendered on the right side of the field.",
                                "type": "boolean"
                            },
                            "top": {
                                "description": "Specifies whether or not a border should be rendered on the top of the field.",
                                "type": "boolean"
                            }
                        }
                    },
                    "certified": {
                        "description": "Specifies whether or not printed metadata uniquely identifying the field should be rendered around it to visually distinguish it from other data on the containing page.",
                        "type": "boolean"
                    },
                    "fieldType": {
                        "description": "Specifies the type of input required for the field: signature/initials or text.",
                        "enum": [
                            "Typed",
                            "Signature"
                        ],
                        "type": "string"
                    },
                    "inputType": {
                        "description": "Specifies the source of the input for the field. Possible values include 'Signer' and 'Fixed'.",
                        "enum": [
                            "Signer",
                            "Fixed",
                            "Signatory"
                        ],
                        "type": "string"
                    },
                    "instructions": {
                        "description": "Specifies the instructions that will be presented to the signer when they are prompted to provide input for the field.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the field.",
                        "type": "string"
                    },
                    "pageIndex": {
                        "format": "int32",
                        "description": "Specifies the 0-based index of the containing page.",
                        "type": "integer"
                    },
                    "position": {
                        "description": "Specifies the position of the field relative to the upper-left corner of the containing page. For example: a field with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                        "type": "object",
                        "properties": {
                            "x": {
                                "format": "float",
                                "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                "type": "number"
                            },
                            "y": {
                                "format": "float",
                                "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                "type": "number"
                            }
                        }
                    },
                    "required": {
                        "description": "Specifies whether or not signer input is required for the field.",
                        "type": "boolean"
                    },
                    "hidden": {
                        "description": "Specifies whether or not the field is hidden.",
                        "type": "boolean"
                    },
                    "signer": {
                        "description": "Specifies the label identifying the intended signer for fields that require signer input (signature or text).",
                        "type": "string"
                    },
                    "size": {
                        "description": "Specifies the size of the field relative to the size of the containing page. For example: a field with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                        "type": "object",
                        "properties": {
                            "height": {
                                "format": "float",
                                "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                "type": "number"
                            },
                            "width": {
                                "format": "float",
                                "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                "type": "number"
                            }
                        }
                    },
                    "sourceGroup": {
                        "description": "Optionally specifies a common identifier for a group of fields in an envelope that should share a value.",
                        "type": "string"
                    },
                    "tag": {
                        "description": "A generic holder of any information you would like to provide",
                        "type": "string"
                    },
                    "fixedText": {
                        "description": "Specifies the text contents for the field for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'. Note: content may include merge fields.",
                        "type": "string"
                    },
                    "timing": {
                        "description": "Specifies the timing for when the contents of the field will be rendered to the containing document for fields with a 'FieldType' of 'Typed' and an 'InputType' of 'Fixed'.",
                        "enum": [
                            "On_Document_Start",
                            "On_Document_Complete"
                        ],
                        "type": "string"
                    },
                    "options": {
                        "description": "Provides the list of options to present to the signer for fields with a 'FieldType' of 'Typed' and one of the 'Multiple Choice' signatory input types.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "graphicRenderType": {
                                    "description": "Specifies how the option will be rendered to the document if selected. Possible values include: Empty = 0, Check = 1, X = 2, No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6",
                                    "enum": [
                                        "Empty",
                                        "Check",
                                        "X",
                                        "No_Box_Empty",
                                        "No_Box_Check",
                                        "No_Box_X",
                                        "Text",
                                        "None"
                                    ],
                                    "type": "string"
                                },
                                "selected": {
                                    "description": "Specifies whether or not the option will be selected by default.",
                                    "type": "boolean"
                                },
                                "text": {
                                    "description": "Specifies the text for the option that will be presented to the signer.",
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Specifies the value of the option (may be different than the displayed text).",
                                    "type": "string"
                                },
                                "pageIndex": {
                                    "format": "int32",
                                    "description": "Specifies the 0-based index of the containing page.",
                                    "type": "integer"
                                },
                                "position": {
                                    "description": "Specifies the position of the option relative to the upper-left corner of the containing page for radio button or checkbox options. For example: an option with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                                    "type": "object",
                                    "properties": {
                                        "x": {
                                            "format": "float",
                                            "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "format": "float",
                                            "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                            "type": "number"
                                        }
                                    }
                                },
                                "size": {
                                    "description": "Specifies the size of the option relative to the size of the containing page for radio button or checkbox options. For example: an option with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                                    "type": "object",
                                    "properties": {
                                        "height": {
                                            "format": "float",
                                            "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                            "type": "number"
                                        },
                                        "width": {
                                            "format": "float",
                                            "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "multipleChoiceDefaultValues": {
                        "description": "Specify list of values that will be automatically selected upon signing.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    },
                    "penColor": {
                        "description": "Specifies the color of 'ink' used to render the signature for fields with a 'FieldType' of 'Signature'.",
                        "enum": [
                            "Black",
                            "Blue"
                        ],
                        "type": "string"
                    },
                    "signatureType": {
                        "description": "Specifies the type of signature (initials or signature) the signer will be prompted to provide for fields with a 'FieldType' of 'Signature'.",
                        "enum": [
                            "Signature",
                            "Initials"
                        ],
                        "type": "string"
                    },
                    "signatureStyle": {
                        "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                        "enum": [
                            "Selectable",
                            "Drawn",
                            "Typed",
                            "Classic"
                        ],
                        "type": "string"
                    },
                    "fontDecoration": {
                        "description": "Specifies the font styles that should be applied for fields with a 'FieldType' of 'Typed'.",
                        "type": "object",
                        "properties": {
                            "bold": {
                                "description": "Specifies whether or not text content for the field will be rendered in Bold.",
                                "type": "boolean"
                            },
                            "italic": {
                                "description": "Specifies whether or not text content for the field will be rendered in Italics.",
                                "type": "boolean"
                            },
                            "underline": {
                                "description": "Specifies whether or not text content for the field will be underlined.",
                                "type": "boolean"
                            }
                        }
                    },
                    "fontName": {
                        "description": "Specifies the name of the supported font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "Arial",
                            "Bradley_Hand_ITC",
                            "Brush_Script_BT",
                            "Courier_New",
                            "Times_New_Roman",
                            "My_Handwriting",
                            "Otto"
                        ],
                        "type": "string"
                    },
                    "fontSize": {
                        "description": "Specifies the size of the font that should be used to render the contents of the field for fields with a 'FieldType' of 'Typed'. Possible values include: 6, 8, 10, 12, 14",
                        "type": "integer"
                    },
                    "horizontalAlignment": {
                        "description": "Specifies the horizontal alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "Left",
                            "Center",
                            "Right"
                        ],
                        "type": "string"
                    },
                    "signerInputType": {
                        "description": "Specifies the type of input required from the signer for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "Free_Text",
                            "Prefill",
                            "Multiple_Choice_Text",
                            "Multiple_Choice_Graphic",
                            "Timestamp",
                            "Custom_Validation",
                            "Multiple_Choice_Radio",
                            "Multiple_Choice_Checkbox",
                            "Undefined"
                        ],
                        "type": "string"
                    },
                    "verticalAlignment": {
                        "description": "Specifies the vertical alignment of the field contents for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "Top",
                            "Middle",
                            "Bottom"
                        ],
                        "type": "string"
                    },
                    "wordWrap": {
                        "description": "Specifies whether or not the contents of the field should be automatically wrapped to a new line for fields with a 'FieldType' of 'Typed'.",
                        "type": "boolean"
                    },
                    "formatterType": {
                        "description": "Specifies the text mask to apply for fields with a 'FieldType' of 'Typed'.",
                        "enum": [
                            "ALPHANUMERIC",
                            "CREDITCARD",
                            "SSN",
                            "CUSTOM"
                        ],
                        "type": "string"
                    },
                    "formatterCode": {
                        "description": "Specifies the custom text mask to apply for fields with a 'FieldType' of 'Typed' and a 'FormatterType' of 'Fixed'.",
                        "type": "string"
                    }
                }
            },
            "fieldBorderSides": {
                "type": "object",
                "properties": {
                    "bottom": {
                        "description": "Specifies whether or not a border should be rendered on the bottom of the field.",
                        "type": "boolean"
                    },
                    "left": {
                        "description": "Specifies whether or not a border should be rendered on the left side of the field.",
                        "type": "boolean"
                    },
                    "right": {
                        "description": "Specifies whether or not a border should be rendered on the right side of the field.",
                        "type": "boolean"
                    },
                    "top": {
                        "description": "Specifies whether or not a border should be rendered on the top of the field.",
                        "type": "boolean"
                    }
                }
            },
            "fieldFontDecoration": {
                "type": "object",
                "properties": {
                    "bold": {
                        "description": "Specifies whether or not text content for the field will be rendered in Bold.",
                        "type": "boolean"
                    },
                    "italic": {
                        "description": "Specifies whether or not text content for the field will be rendered in Italics.",
                        "type": "boolean"
                    },
                    "underline": {
                        "description": "Specifies whether or not text content for the field will be underlined.",
                        "type": "boolean"
                    }
                }
            },
            "fieldOption": {
                "type": "object",
                "properties": {
                    "graphicRenderType": {
                        "description": "Specifies how the option will be rendered to the document if selected. Possible values include: Empty = 0, Check = 1, X = 2, No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6",
                        "enum": [
                            "Empty",
                            "Check",
                            "X",
                            "No_Box_Empty",
                            "No_Box_Check",
                            "No_Box_X",
                            "Text",
                            "None"
                        ],
                        "type": "string"
                    },
                    "selected": {
                        "description": "Specifies whether or not the option will be selected by default.",
                        "type": "boolean"
                    },
                    "text": {
                        "description": "Specifies the text for the option that will be presented to the signer.",
                        "type": "string"
                    },
                    "value": {
                        "description": "Specifies the value of the option (may be different than the displayed text).",
                        "type": "string"
                    },
                    "pageIndex": {
                        "format": "int32",
                        "description": "Specifies the 0-based index of the containing page.",
                        "type": "integer"
                    },
                    "position": {
                        "description": "Specifies the position of the option relative to the upper-left corner of the containing page for radio button or checkbox options. For example: an option with an 'X Coordinate' of '0.2' and a 'Y Coordinate' of '0.4' would be positioned with its upper left corner 20% of the way across the page horizontally and 40% down the page vertically.",
                        "type": "object",
                        "properties": {
                            "x": {
                                "format": "float",
                                "description": "Specifies the horizontal position of the field or option relative to the left side of the containing page. For example: a field with an 'X Coordinate' of '0.2' would be positioned with its left side 20% of the way across the page horizontally.",
                                "type": "number"
                            },
                            "y": {
                                "format": "float",
                                "description": "Specifies the vertical position of the field or option relative to the top of the containing page. For example: a field with a 'Y Coordinate' of '0.4' would be positioned with its top 40% of the way down the page vertically.",
                                "type": "number"
                            }
                        }
                    },
                    "size": {
                        "description": "Specifies the size of the option relative to the size of the containing page for radio button or checkbox options. For example: an option with a 'Height' of '0.1' and a 'Width' of '0.3' would be sized 10% of total page height and 30% of total page width.",
                        "type": "object",
                        "properties": {
                            "height": {
                                "format": "float",
                                "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                                "type": "number"
                            },
                            "width": {
                                "format": "float",
                                "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                                "type": "number"
                            }
                        }
                    }
                }
            },
            "fieldSize": {
                "type": "object",
                "properties": {
                    "height": {
                        "format": "float",
                        "description": "Specifies the height of the field or option relative to the height of the containing page. For example: a field with a 'Height' of '0.1' would be sized 10% of total page height.",
                        "type": "number"
                    },
                    "width": {
                        "format": "float",
                        "description": "Specifies the width of the field or option relative to the width of the containing page. For example: a field with a 'Width' of '0.3' would be sized 30% of total page width.",
                        "type": "number"
                    }
                }
            },
            "notificationRecipient": {
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Specifies the email address of the recipient.",
                        "type": "string"
                    },
                    "label": {
                        "description": "Specifies a label for the recipient. This label can be referenced when specifying recipients for an email notification.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the full name of the recipient.",
                        "type": "string"
                    }
                }
            },
            "notificationSettings": {
                "type": "object",
                "properties": {
                    "enableNotifications": {
                        "description": "When EnableNotifications is set to false, no email/sms notifications will be sent",
                        "type": "boolean"
                    },
                    "addCustomRecipientsToEnvelopeComplete": {
                        "description": "When custom recipients are added to an envelope, automaticlly add them to Envelope Complete Emails",
                        "type": "boolean"
                    }
                }
            },
            "signer": {
                "type": "object",
                "properties": {
                    "email": {
                        "format": "email",
                        "description": "Specifies the email address for the signer.",
                        "type": "string"
                    },
                    "label": {
                        "description": "Specifies a label for the signer. This label can be referenced when specifying the signer for a field or when specifying recipients for an email or SMS notification.",
                        "type": "string"
                    },
                    "mobilePhone": {
                        "description": "Specifies the mobile phone number for the signer.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the full name for the signer.",
                        "type": "string"
                    },
                    "password": {
                        "description": "Specifies a password for the signer that will need to be provided in order to access signing or envelope downloads.",
                        "type": "string"
                    },
                    "passwordPrompt": {
                        "description": "Specifies the prompt that will be presented to the signer indicating what to enter as a password. For example: 'For security purposes, please enter the last 4 digits of your account number.'",
                        "type": "string"
                    },
                    "signatureStyle": {
                        "description": "Specifies the style of signature the signer will adopt for fields with a 'FieldType' of 'Signature'.",
                        "enum": [
                            "Selectable",
                            "Drawn",
                            "Typed",
                            "Classic"
                        ],
                        "type": "string"
                    },
                    "smsAuthPhone": {
                        "description": "Specifies the phone number that SMS Two-Factor authentication should use to authenticate the signer for signing or envelope downloads.",
                        "type": "string"
                    },
                    "enableKba": {
                        "description": "When set to true, KBA property must be populated",
                        "type": "boolean"
                    },
                    "kba": {
                        "description": "Specifies Knowledge-Based Authentication details used when EnableKba is set to true",
                        "type": "object",
                        "properties": {
                            "firstName": {
                                "description": "Specifies the first name used for KBA. 40 character limit",
                                "type": "string"
                            },
                            "lastName": {
                                "description": "Specifies the last name used for KBA. 40 character limit",
                                "type": "string"
                            },
                            "address": {
                                "description": "Specifies the address used for KBA. 40 character limit",
                                "type": "string"
                            },
                            "city": {
                                "description": "Specifies the city used for KBA. 40 character limit",
                                "type": "string"
                            },
                            "state": {
                                "description": "Specifies the state used for KBA. Must be in State abbreviation format",
                                "type": "string"
                            },
                            "zip": {
                                "description": "Specifies the zip code used for KBA. 5 character number format",
                                "type": "string"
                            },
                            "ssn": {
                                "description": "Specifies the SSN used for KBA. 9 digit SSN (no dashes) or last 4 digits",
                                "type": "string"
                            },
                            "dobYear": {
                                "description": "Specifies the year used for KBA. YYYY format",
                                "type": "string"
                            },
                            "dobMonth": {
                                "description": "Specifies the month used for KBA. M or MM format",
                                "type": "string"
                            },
                            "dobDay": {
                                "description": "Specifies the day used for KBA. D or DD format",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "signerKBA": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "description": "Specifies the first name used for KBA. 40 character limit",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Specifies the last name used for KBA. 40 character limit",
                        "type": "string"
                    },
                    "address": {
                        "description": "Specifies the address used for KBA. 40 character limit",
                        "type": "string"
                    },
                    "city": {
                        "description": "Specifies the city used for KBA. 40 character limit",
                        "type": "string"
                    },
                    "state": {
                        "description": "Specifies the state used for KBA. Must be in State abbreviation format",
                        "type": "string"
                    },
                    "zip": {
                        "description": "Specifies the zip code used for KBA. 5 character number format",
                        "type": "string"
                    },
                    "ssn": {
                        "description": "Specifies the SSN used for KBA. 9 digit SSN (no dashes) or last 4 digits",
                        "type": "string"
                    },
                    "dobYear": {
                        "description": "Specifies the year used for KBA. YYYY format",
                        "type": "string"
                    },
                    "dobMonth": {
                        "description": "Specifies the month used for KBA. M or MM format",
                        "type": "string"
                    },
                    "dobDay": {
                        "description": "Specifies the day used for KBA. D or DD format",
                        "type": "string"
                    }
                }
            },
            "smsNotificationSubmission": {
                "type": "object",
                "properties": {
                    "body": {
                        "description": "Specifies the body of the SMS notification. Note: content may include merge fields.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the SMS notification.",
                        "type": "string"
                    },
                    "recipients": {
                        "description": "Provides a list of intended recipients for the email notification. Specify a signer or recipient label to send specific recipients. Specify 'Originator' to send to the envelope originator. Specify 'All_Signers' to send to all signers on this envelope. Specify 'All_Signers_In_Step' to send to all signers that part of the current signing step.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    },
                    "stage": {
                        "description": "Specifies the stage in the envelope signing process during which the email notification will be sent.",
                        "enum": [
                            "Envelope_Start",
                            "Envelope_PreExpire",
                            "Envelope_Expire",
                            "Envelope_Complete",
                            "Envelope_Cancel",
                            "Envelope_Decline",
                            "Signer_Feedback",
                            "Signer_Auth_Failure",
                            "Signer_Kba_Start",
                            "Signer_Kba_Complete",
                            "Step_Start",
                            "Step_Complete",
                            "On_Payment_Approved",
                            "On_Payment_Declined",
                            "On_Payment_Refunded",
                            "On_Envelope_Landing_Visit"
                        ],
                        "type": "string"
                    },
                    "step": {
                        "description": "Specifies the 0-based index of the signing step with which the email notification is associated for email notifications with a 'Stage' of 'StepStart' or 'StepComplete'.",
                        "type": "integer"
                    },
                    "preExpirationDays": {
                        "description": "Specifies the amount of days to send a pre-expiration notification. (only applicable to Pre-Expire)",
                        "type": "integer"
                    }
                }
            },
            "submissionWebHook": {
                "type": "object",
                "properties": {
                    "designName": {
                        "description": "Specifies the design name of the webhook.",
                        "type": "string"
                    },
                    "timing": {
                        "description": "Specifies the stage in the envelope signing process during which the webhook will be executed.",
                        "enum": [
                            "Envelope_Start",
                            "Envelope_PreExpire",
                            "Envelope_Expire",
                            "Envelope_Complete",
                            "Envelope_Cancel",
                            "Envelope_Decline",
                            "Signer_Feedback",
                            "Signer_Auth_Failure",
                            "Signer_Kba_Start",
                            "Signer_Kba_Complete",
                            "Step_Start",
                            "Step_Complete",
                            "On_Payment_Approved",
                            "On_Payment_Declined",
                            "On_Payment_Refunded",
                            "On_Envelope_Landing_Visit"
                        ],
                        "type": "string"
                    },
                    "step": {
                        "description": "Specifies the 0-based index of the signing step with which the webhook is associated (StepStart, StepComplete)",
                        "type": "integer"
                    }
                }
            },
            "submissionDocumentTransmission": {
                "type": "object",
                "properties": {
                    "designName": {
                        "description": "Specifies the design name of the Document Transmission.",
                        "type": "string"
                    }
                }
            },
            "workflowStep": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Specifies the name of the workflow step.",
                        "type": "string"
                    },
                    "signers": {
                        "description": "Specifies a list of signers that are included in the step. Any fields defined in other steps will take precedence over signers included in a step.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    },
                    "fields": {
                        "description": "Specifies a list of fields that are included in the step. This will override fields included based on their signer in other steps.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    },
                    "workflowStepDelay": {
                        "description": "Specifies durations for the workflow step to be delayed.",
                        "type": "object",
                        "properties": {
                            "days": {
                                "description": "The number of days the step will be delayed.",
                                "type": "integer"
                            },
                            "hours": {
                                "description": "The number of hours the step will be delayed.",
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "workflowStepDelay": {
                "type": "object",
                "properties": {
                    "days": {
                        "description": "The number of days the step will be delayed.",
                        "type": "integer"
                    },
                    "hours": {
                        "description": "The number of hours the step will be delayed.",
                        "type": "integer"
                    }
                }
            },
            "templateOwner": {
                "type": "object",
                "properties": {
                    "emailAddress": {
                        "description": "",
                        "type": "string"
                    },
                    "fullName": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "userAccount": {
                "type": "object",
                "properties": {
                    "accountID": {
                        "format": "uuid",
                        "description": "Specifies the unique identifier for the account. This can be referenced in place of the 'Context Identifier' when setting the 'X-AS-UserContext' property.",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "Specifies the name of the account. If the name of the account varies from it's display name (as specified in account settings), this property will be specified in the form '{Account Name} ({Account Display Name})'.",
                        "type": "string"
                    },
                    "isDefault": {
                        "description": "Specifies whether or not this is the primary / default account for the specified user.",
                        "type": "boolean"
                    },
                    "isDisabled": {
                        "description": "Specifies whether or not access to this account is currently disabled for the specified user.",
                        "type": "boolean"
                    }
                }
            },
            "getUserAccountsResultDto": {
                "type": "object",
                "properties": {
                    "userAccounts": {
                        "description": "A list of the accounts to which the specified user has access.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userAccount",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "getDefaultNotificationsResult": {
                "type": "object",
                "properties": {
                    "defaultEmailNotifications": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailNotification",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "defaultSmsNotifications": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/smsNotificationSubmission",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "signingLink": {
                "type": "object",
                "properties": {
                    "envelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "signatoryEmail": {
                        "format": "email",
                        "description": "",
                        "type": "string"
                    },
                    "signatoryMobilePhone": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "expirationDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "getSigningLinksResponseDto": {
                "type": "object",
                "properties": {
                    "signingLinks": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signingLink",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "getSigningLinksRequestDto": {
                "type": "object",
                "properties": {
                    "envelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "linkExpirationDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "includeOnlyCurrentSigners": {
                        "description": "",
                        "type": "boolean"
                    },
                    "redirectUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "isAuthenticated": {
                        "description": "",
                        "type": "boolean"
                    },
                    "suppressHeader": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "getEnvelopeValuesResultDto": {
                "type": "object",
                "properties": {
                    "fieldValues": {
                        "description": "A list containing all of the typed fields (JotBlocks) and associated values contained in the specified envelope",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fieldValue",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "senderInputValues": {
                        "description": "A list containing all of the sender input values contained in the specified envelope",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/senderInputValue",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "updateEnvelopeSignerResultDto": {
                "type": "object",
                "properties": {
                    "updateSignerResult": {
                        "$ref": "#/components/schemas/updateEnvelopeSignerResult",
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "cancelEnvelopeResultDto": {
                "type": "object",
                "properties": {
                    "success": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "deleteEnvelopeResultDto": {
                "type": "object",
                "properties": {
                    "envelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "success": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "downloadEnvelopeResultDto": {
                "type": "object",
                "properties": {
                    "mergedDocument": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    },
                    "completionReport": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    },
                    "documents": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "envelopeHistoryResultDto": {
                "type": "object",
                "properties": {
                    "envelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "envelopeHistoryEvents": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeHistoryEvent",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "documentList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocumentWithHistory",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "envelopeStatusResultDto": {
                "type": "object",
                "properties": {
                    "envelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "enum": [
                            "CREATED",
                            "IN_PROGRESS",
                            "COMPLETED",
                            "EXPIRED",
                            "DECLINED",
                            "CANCELLED",
                            "STALED",
                            "SIGNER_AUTHENTICATION_FAILED"
                        ],
                        "type": "string"
                    },
                    "documentList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocumentWithStatus",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "getEnvelopeResultDto": {
                "type": "object",
                "properties": {
                    "envelope": {
                        "$ref": "#/components/schemas/envelopeApiModel",
                        "description": "",
                        "type": "object"
                    },
                    "documents": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentApiModel",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "listEnvelopesResultDto": {
                "type": "object",
                "properties": {
                    "envelopes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listEnvelopeApiModel",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "updateEnvelopeSignerRequestDto": {
                "type": "object",
                "properties": {
                    "updateEnvelopeSigner": {
                        "$ref": "#/components/schemas/updateEnvelopeSigner",
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "cancelEnvelopeRequestDto": {
                "type": "object",
                "properties": {
                    "remarks": {
                        "description": "Reason for cancellation",
                        "type": "string"
                    }
                }
            },
            "downloadEnvelopeRequestDto": {
                "type": "object",
                "properties": {
                    "mergeCompletedDocuments": {
                        "description": "",
                        "type": "boolean"
                    },
                    "envelopePassword": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "fieldValue": {
                "type": "object",
                "properties": {
                    "documentID": {
                        "format": "uuid",
                        "description": "Specifies the unique identifier of the document with which the field (JotBlock) is associated.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the field (JotBlock)",
                        "type": "string"
                    },
                    "tag": {
                        "description": "If present, specifies the user-defined tag for the field (JotBlock)",
                        "type": "string"
                    },
                    "value": {
                        "description": "Specifies the value of the field (JotBlock)",
                        "type": "string"
                    }
                }
            },
            "senderInputValue": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Specifies the sender input name.",
                        "type": "string"
                    },
                    "value": {
                        "description": "Specifies the sender input value.",
                        "type": "string"
                    },
                    "tag": {
                        "description": "Specifies the sender input tag.",
                        "type": "string"
                    }
                }
            },
            "envelopeDocument": {
                "type": "object",
                "properties": {
                    "documentID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "orderID": {
                        "description": "",
                        "type": "string"
                    },
                    "completedDocument": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    }
                }
            },
            "envelopeDocumentWithStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/envelopeDocumentStatus",
                        "description": "",
                        "type": "object"
                    },
                    "documentID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "orderID": {
                        "description": "",
                        "type": "string"
                    },
                    "completedDocument": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    }
                }
            },
            "envelopeDocumentWithHistory": {
                "type": "object",
                "properties": {
                    "history": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocumentHistoryEvent",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "documentID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "orderID": {
                        "description": "",
                        "type": "string"
                    },
                    "completedDocument": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    }
                }
            },
            "envelopeDocumentHistoryEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "date": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "details": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "envelopeDocumentStatus": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "statusDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "statusType": {
                        "description": "",
                        "enum": [
                            "CREATED",
                            "SIGNING_STEP_PROGRESS",
                            "COMPLETED",
                            "EXPIRED",
                            "DECLINED",
                            "CANCELLED",
                            "SIGNER_AUTHENTICATION_FAILED"
                        ],
                        "type": "string"
                    },
                    "statusDetails": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "envelopeHistoryEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "date": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "details": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "updateEnvelopeSigner": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "emailAddress": {
                        "description": "",
                        "type": "string"
                    },
                    "mobilePhone": {
                        "description": "",
                        "type": "string"
                    },
                    "password": {
                        "description": "",
                        "type": "string"
                    },
                    "resendLastEmail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "resendLastSMS": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "updateEnvelopeSignerResult": {
                "type": "object",
                "properties": {
                    "success": {
                        "description": "",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "emailAddress": {
                        "description": "",
                        "type": "string"
                    },
                    "mobilePhone": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "placeholder": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "regex": {
                        "description": "",
                        "type": "string"
                    },
                    "required": {
                        "description": "",
                        "type": "boolean"
                    },
                    "prompt": {
                        "description": "",
                        "type": "string"
                    },
                    "errorMessage": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "enum": [
                            "String",
                            "File_Addendum",
                            "File_Document",
                            "Signature",
                            "Date",
                            "Email",
                            "PhoneNumber",
                            "Number",
                            "Currency",
                            "MultipleStrings"
                        ],
                        "type": "string"
                    },
                    "defaultValue": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultValues": {
                        "description": "Values used when given Type is set to MultipleStrings",
                        "type": "string"
                    },
                    "tag": {
                        "description": "A generic holder of any information you would like to provide",
                        "type": "string"
                    },
                    "inherited": {
                        "description": "placeholder belongs to a referenced template",
                        "type": "boolean"
                    }
                }
            },
            "placeholderValue": {
                "type": "object",
                "properties": {
                    "inherited": {
                        "description": "Specifies that the placeholder value was inherited from a referenced template.",
                        "type": "boolean"
                    },
                    "value": {
                        "description": "Specifies the value of the placeholder.",
                        "type": "string"
                    },
                    "values": {
                        "description": "Specifies the values of the placeholder when Placeholder type is 'MultipleStrings'",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/apiFile",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "files": {
                        "description": "Specifies one or more files that will be used to populate a file placeholder.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/apiFile",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "overlayStartPage": {
                        "format": "int32",
                        "description": "Specifies the 0-based index of the page on which to start overlaying JotBlocks when using a file document placeholder.",
                        "type": "integer"
                    }
                }
            },
            "placeholderValuePair": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Specifies the name of the placeholder.",
                        "type": "string"
                    },
                    "inherited": {
                        "description": "Specifies that the placeholder value was inherited from a referenced template.",
                        "type": "boolean"
                    },
                    "value": {
                        "description": "Specifies the value of the placeholder.",
                        "type": "string"
                    },
                    "values": {
                        "description": "Specifies the values of the placeholder when Placeholder type is 'MultipleStrings'",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/apiFile",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "files": {
                        "description": "Specifies one or more files that will be used to populate a file placeholder.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/apiFile",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "overlayStartPage": {
                        "format": "int32",
                        "description": "Specifies the 0-based index of the page on which to start overlaying JotBlocks when using a file document placeholder.",
                        "type": "integer"
                    }
                }
            },
            "templatePlaceholderValuesV3_2": {
                "type": "object",
                "properties": {
                    "templateId": {
                        "description": "Template Id",
                        "type": "string"
                    },
                    "values": {
                        "description": "Template Data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/placeholderValuePair",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "templatePlaceholderValues": {
                "type": "object",
                "properties": {
                    "templateID": {
                        "description": "Specifies the unique identifier of the template.",
                        "type": "string"
                    },
                    "values": {
                        "description": "Provides a list of placeholder values that will be used to populate the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/placeholderValuePair",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "template": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "Specifies the user provided description for the template. This is typically used to provide additional detail about the intended use case.",
                        "type": "string"
                    },
                    "isLocked": {
                        "description": "Specifies whether or not the template is locked to prevent editing.",
                        "type": "boolean"
                    },
                    "isPartial": {
                        "description": "Specifies whether or not the template contains only a partial definition. If true, additional data beyond placeholder values must be provided as part of the submission. If false, the template can be submitted with only placeholder values provided.",
                        "type": "boolean"
                    },
                    "isArchived": {
                        "description": "Specifies whether or not the template is archived",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Specifies the name of the template.",
                        "type": "string"
                    },
                    "templateID": {
                        "description": "Specifies the unique identifier of the template.",
                        "type": "string"
                    },
                    "userAccountID": {
                        "description": "Specifies the unique identifier of the user to whom the template belongs.",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/templateOwner",
                        "description": "Specifies the owner of a template",
                        "type": "object"
                    },
                    "accountID": {
                        "description": "Specifies the unique identifier of the account to which the template belongs.",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "Specifies the name of the account to which the template belongs.",
                        "type": "string"
                    },
                    "tag": {
                        "description": "A generic holder of any information you would like to provide",
                        "type": "string"
                    },
                    "originalID": {
                        "description": "Original ID of Imported Template",
                        "type": "string"
                    }
                }
            },
            "templateList": {
                "type": "object",
                "properties": {
                    "templates": {
                        "description": "Provides a list of the templates accessible to the current user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/template",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "templateParsed": {
                "type": "object",
                "properties": {
                    "content": {
                        "$ref": "#/components/schemas/submission",
                        "description": "Provides the data required for submitting an envelope.",
                        "type": "object"
                    },
                    "placeholders": {
                        "description": "Provides a list of the data elements used in the template that must be provided when referencing the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/placeholder",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "templates": {
                        "description": "Provides a list of referenced templates and related placeholder values.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templatePlaceholderValues",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "description": {
                        "description": "Specifies the user provided description for the template. This is typically used to provide additional detail about the intended use case.",
                        "type": "string"
                    },
                    "isLocked": {
                        "description": "Specifies whether or not the template is locked to prevent editing.",
                        "type": "boolean"
                    },
                    "isPartial": {
                        "description": "Specifies whether or not the template contains only a partial definition. If true, additional data beyond placeholder values must be provided as part of the submission. If false, the template can be submitted with only placeholder values provided.",
                        "type": "boolean"
                    },
                    "isArchived": {
                        "description": "Specifies whether or not the template is archived",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Specifies the name of the template.",
                        "type": "string"
                    },
                    "templateID": {
                        "description": "Specifies the unique identifier of the template.",
                        "type": "string"
                    },
                    "userAccountID": {
                        "description": "Specifies the unique identifier of the user to whom the template belongs.",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/templateOwner",
                        "description": "Specifies the owner of a template",
                        "type": "object"
                    },
                    "accountID": {
                        "description": "Specifies the unique identifier of the account to which the template belongs.",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "Specifies the name of the account to which the template belongs.",
                        "type": "string"
                    },
                    "tag": {
                        "description": "A generic holder of any information you would like to provide",
                        "type": "string"
                    },
                    "originalID": {
                        "description": "Original ID of Imported Template",
                        "type": "string"
                    }
                }
            },
            "templateV3_4": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "Specifies the user provided description for the template. This is typically used to provide additional detail about the intended use case.",
                        "type": "string"
                    },
                    "isLocked": {
                        "description": "Specifies whether or not the template is locked to prevent editing.",
                        "type": "boolean"
                    },
                    "isPartial": {
                        "description": "Specifies whether or not the template contains only a partial definition. If true, additional data beyond placeholder values must be provided as part of the submission. If false, the template can be submitted with only placeholder values provided.",
                        "type": "boolean"
                    },
                    "canEdit": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "type": "boolean"
                    },
                    "accessibility": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "enum": [
                            "User",
                            "Account",
                            "AccountAndChildren"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the template.",
                        "type": "string"
                    },
                    "templateID": {
                        "description": "Specifies the unique identifier of the template.",
                        "type": "string"
                    },
                    "userAccountID": {
                        "description": "Specifies the unique identifier of the user to whom the template belongs.",
                        "type": "string"
                    }
                }
            },
            "templateParsedV3_4": {
                "type": "object",
                "properties": {
                    "content": {
                        "$ref": "#/components/schemas/submissionV3_2",
                        "description": "Provides the data required for submitting an envelope.",
                        "type": "object"
                    },
                    "placeholders": {
                        "description": "Provides a list of the data elements used in the template that must be provided when referencing the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/placeholder",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "templates": {
                        "description": "Provides a list of referenced templates and related placeholder values.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templatePlaceholderValuesV3_2",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "description": {
                        "description": "Specifies the user provided description for the template. This is typically used to provide additional detail about the intended use case.",
                        "type": "string"
                    },
                    "isLocked": {
                        "description": "Specifies whether or not the template is locked to prevent editing.",
                        "type": "boolean"
                    },
                    "isPartial": {
                        "description": "Specifies whether or not the template contains only a partial definition. If true, additional data beyond placeholder values must be provided as part of the submission. If false, the template can be submitted with only placeholder values provided.",
                        "type": "boolean"
                    },
                    "canEdit": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "type": "boolean"
                    },
                    "accessibility": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "enum": [
                            "User",
                            "Account",
                            "AccountAndChildren"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the template.",
                        "type": "string"
                    },
                    "templateID": {
                        "description": "Specifies the unique identifier of the template.",
                        "type": "string"
                    },
                    "userAccountID": {
                        "description": "Specifies the unique identifier of the user to whom the template belongs.",
                        "type": "string"
                    }
                }
            },
            "templateListV3_4": {
                "type": "object",
                "properties": {
                    "templates": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templateV3_4",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "templateParsedV3_2": {
                "type": "object",
                "properties": {
                    "content": {
                        "$ref": "#/components/schemas/submissionV3_2",
                        "description": "Provides the data required for submitting an envelope.",
                        "type": "object"
                    },
                    "placeholders": {
                        "description": "Provides a list of the data elements used in the template that must be provided when referencing the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/placeholder",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "templates": {
                        "description": "Provides a list of referenced templates and related placeholder values.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templatePlaceholderValuesV3_2",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "description": {
                        "description": "Specifies the user provided description for the template. This is typically used to provide additional detail about the intended use case.",
                        "type": "string"
                    },
                    "isLocked": {
                        "description": "Specifies whether or not the template is locked to prevent editing.",
                        "type": "boolean"
                    },
                    "isPartial": {
                        "description": "Specifies whether or not the template contains only a partial definition. If true, additional data beyond placeholder values must be provided as part of the submission. If false, the template can be submitted with only placeholder values provided.",
                        "type": "boolean"
                    },
                    "canEdit": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "type": "boolean"
                    },
                    "accessibility": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "enum": [
                            "User",
                            "Account",
                            "AccountAndChildren"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the name of the template.",
                        "type": "string"
                    },
                    "templateID": {
                        "description": "Specifies the unique identifier of the template.",
                        "type": "string"
                    },
                    "userAccountID": {
                        "description": "Specifies the unique identifier of the user to whom the template belongs.",
                        "type": "string"
                    }
                }
            },
            "templateV3_1": {
                "type": "object",
                "properties": {
                    "templateId": {
                        "description": "Id of provided template",
                        "type": "string"
                    },
                    "canEdit": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "type": "boolean"
                    },
                    "userAccountId": {
                        "description": "Id of the User Account which this template belongs to",
                        "type": "string"
                    },
                    "name": {
                        "description": "Template name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Describes what the template is used for",
                        "type": "string"
                    },
                    "isLocked": {
                        "description": "Is the template locked for editing",
                        "type": "boolean"
                    },
                    "isPartial": {
                        "description": "Can this template be submitted as-is",
                        "type": "boolean"
                    },
                    "accessibility": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "enum": [
                            "User",
                            "Account",
                            "AccountAndChildren"
                        ],
                        "type": "string"
                    }
                }
            },
            "templateParsedV3_1": {
                "type": "object",
                "properties": {
                    "content": {
                        "$ref": "#/components/schemas/submissionV3_2",
                        "description": "Provides the data required for submitting an envelope.",
                        "type": "object"
                    },
                    "placeholders": {
                        "description": "Provides a list of the data elements used in the template that must be provided when referencing the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/placeholder",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "templates": {
                        "description": "Provides a list of referenced templates and related placeholder values.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templatePlaceholderValuesV3_2",
                            "format": "",
                            "type": "n/a"
                        }
                    },
                    "templateId": {
                        "description": "Id of provided template",
                        "type": "string"
                    },
                    "canEdit": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "type": "boolean"
                    },
                    "userAccountId": {
                        "description": "Id of the User Account which this template belongs to",
                        "type": "string"
                    },
                    "name": {
                        "description": "Template name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Describes what the template is used for",
                        "type": "string"
                    },
                    "isLocked": {
                        "description": "Is the template locked for editing",
                        "type": "boolean"
                    },
                    "isPartial": {
                        "description": "Can this template be submitted as-is",
                        "type": "boolean"
                    },
                    "accessibility": {
                        "description": "Deprecated. With the introduction of entity permissions in version 6.32, this property is no longer used",
                        "enum": [
                            "User",
                            "Account",
                            "AccountAndChildren"
                        ],
                        "type": "string"
                    }
                }
            },
            "templateListV3_1": {
                "type": "object",
                "properties": {
                    "templates": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templateV3_1",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "templateUpsertResponseV3_2": {
                "type": "object",
                "properties": {
                    "templateId": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "templateUpsertResponse": {
                "type": "object",
                "properties": {
                    "templateID": {
                        "format": "uuid",
                        "description": "Specifies the unique identifier for the template.",
                        "type": "string"
                    }
                }
            },
            "emailDesignDto": {
                "type": "object",
                "properties": {
                    "body": {
                        "description": "",
                        "type": "string"
                    },
                    "dateCreated": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "dateModified": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "defaultRecipients": {
                        "description": "",
                        "enum": [
                            "None",
                            "Originator",
                            "Signers_SigningStep",
                            "Signers_All"
                        ],
                        "type": "string"
                    },
                    "defaultTiming": {
                        "description": "",
                        "enum": [
                            "OnDocumentStepStart",
                            "OnDocumentStepComplete",
                            "OnDocumentStart",
                            "OnDocumentComplete",
                            "OnDocumentPreExpire",
                            "OnDocumentExpire",
                            "OnDocumentLandingVisit",
                            "OnDocumentCancel",
                            "OnDocumentDecline",
                            "OnEnvelopeClosure",
                            "OnEnvelopePreExpire",
                            "OnEnvelopeExpire",
                            "OnEnvelopeComplete",
                            "OnEnvelopeCancel",
                            "OnEnvelopeDecline",
                            "OnDocumentSignerFeedback",
                            "OnEnvelopeSignerFeedback",
                            "OnDocumentSignerAuthFailure",
                            "OnEnvelopeSignerAuthFailure",
                            "OnDocumentSignerKbaStart",
                            "OnEnvelopeSignerKbaStart",
                            "OnDocumentSignerKbaComplete",
                            "OnEnvelopeSignerKbaComplete",
                            "OnEnvelopeStepStart",
                            "OnEnvelopeStepComplete",
                            "OnPaymentApproved",
                            "OnPaymentDeclined",
                            "OnPaymentRefunded",
                            "OnEnvelopeLandingVisit"
                        ],
                        "type": "string"
                    },
                    "emailDesignSetId": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "isSystem": {
                        "description": "",
                        "type": "boolean"
                    },
                    "isUsedByDefault": {
                        "description": "",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "subject": {
                        "description": "",
                        "type": "string"
                    },
                    "systemId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "listEmailDesignsResultDto": {
                "type": "object",
                "properties": {
                    "emailDesigns": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailDesignDto",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "emailDesignSetDto": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "format": "uuid",
                        "description": "Owner AccountID of email designset",
                        "type": "string"
                    },
                    "culture": {
                        "description": "Specified culture of designset",
                        "type": "string"
                    },
                    "dateCreated": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "dateModified": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "EmailDesignSet ID",
                        "type": "string"
                    },
                    "isAccountDefault": {
                        "description": "Specifies if email designset is used as the account default",
                        "type": "boolean"
                    },
                    "isSystem": {
                        "description": "Specifies if email designset is a built-in designset.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "Name of email designset",
                        "type": "string"
                    },
                    "systemId": {
                        "format": "uuid",
                        "description": "System ID of email designset",
                        "type": "string"
                    },
                    "originalID": {
                        "format": "uuid",
                        "description": "Original ID of email designset",
                        "type": "string"
                    }
                }
            },
            "listEmailDesignSetsResultDto": {
                "type": "object",
                "properties": {
                    "emailDesignSets": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailDesignSetDto",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "getAccessLinkResultDto": {
                "type": "object",
                "properties": {
                    "accessLink": {
                        "$ref": "#/components/schemas/accessLink",
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "accessLink": {
                "type": "object",
                "properties": {
                    "envelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "signerID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "signerEmail": {
                        "format": "email",
                        "description": "",
                        "type": "string"
                    },
                    "signerMobilePhone": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "expirationDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "documentType": {
                        "description": "",
                        "enum": [
                            "ORIGINAL",
                            "INTERIM",
                            "COMPLETED"
                        ],
                        "type": "string"
                    }
                }
            },
            "base64File": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "Specifies the actual file data a Base64-encoded string.",
                        "type": "string"
                    },
                    "fileName": {
                        "description": "Specifies the full file name and extension. Example: Policy.pdf",
                        "type": "string"
                    },
                    "parseDocument": {
                        "description": "Parse this document for dynamic jotblocks",
                        "type": "boolean"
                    },
                    "dynamicDocumentVersion": {
                        "description": "Parse the Document using V2 or V3 syntax. Only applicable if ParseDocument is set to true",
                        "enum": [
                            "V2"
                        ],
                        "type": "string"
                    }
                }
            },
            "savedFile": {
                "type": "object",
                "properties": {
                    "fileName": {
                        "description": "Specifies the full file name and extension for this previously uploaded file. Note that the filename should not contain any spaces or special characters.",
                        "type": "string"
                    },
                    "location": {
                        "description": "Specifies the storage location of this previously uploaded file.",
                        "type": "string"
                    },
                    "pages": {
                        "description": "Provides a list of the page images rendered for this previously uploaded file.",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "object",
                            "properties": {
                                "width": {
                                    "description": "Specifies the width (in pixels) of a page image.",
                                    "type": "string"
                                },
                                "height": {
                                    "description": "Specifies the height (in pixels) of a page image.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "envelopeApiModel": {
                "type": "object",
                "properties": {
                    "accountID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "",
                        "type": "string"
                    },
                    "cancelledDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "completionDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "declineBehavior": {
                        "description": "",
                        "enum": [
                            "DeclineAll",
                            "DeclineSingle"
                        ],
                        "type": "string"
                    },
                    "declinedDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "expiredDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "staledDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "staleDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "hasPassword": {
                        "description": "",
                        "type": "boolean"
                    },
                    "envelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "redirectUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "signerAuthFailureDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "userAccountID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "viewBehavior": {
                        "description": "",
                        "enum": [
                            "ViewSignatoryOnly",
                            "ViewAll"
                        ],
                        "type": "string"
                    },
                    "closedDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "envelopeStatusType": {
                        "description": "",
                        "enum": [
                            "CREATED",
                            "IN_PROGRESS",
                            "COMPLETED",
                            "EXPIRED",
                            "DECLINED",
                            "CANCELLED",
                            "STALED",
                            "SIGNER_AUTHENTICATION_FAILED"
                        ],
                        "type": "string"
                    },
                    "isFinalized": {
                        "description": "Once this Envelope has been completed, cancelled, failed auth, declined, or expired",
                        "type": "boolean"
                    }
                }
            },
            "documentApiModel": {
                "type": "object",
                "properties": {
                    "additionalAgreement": {
                        "description": "",
                        "type": "string"
                    },
                    "additionalDisclosures": {
                        "description": "",
                        "type": "string"
                    },
                    "additionalTerms": {
                        "description": "",
                        "type": "string"
                    },
                    "cultureType": {
                        "description": "",
                        "type": "string"
                    },
                    "documentID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "fileExtension": {
                        "description": "",
                        "type": "string"
                    },
                    "pageCount": {
                        "format": "int32",
                        "description": "",
                        "type": "integer"
                    },
                    "signingDeviceEnabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "isFinalized": {
                        "description": "",
                        "type": "boolean"
                    },
                    "completionDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "declinedDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "envelopeApiModelV3_5": {
                "type": "object",
                "properties": {
                    "accountID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "",
                        "type": "string"
                    },
                    "cancelledDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "completionDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "declineBehavior": {
                        "description": "",
                        "enum": [
                            "DeclineAll",
                            "DeclineSingle"
                        ],
                        "type": "string"
                    },
                    "declinedDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "expiredDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "staledDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "staleDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "hasPassword": {
                        "description": "",
                        "type": "boolean"
                    },
                    "evnelopeID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "redirectUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "signerAuthFailureDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "userAccountID": {
                        "format": "uuid",
                        "description": "",
                        "type": "string"
                    },
                    "viewBehavior": {
                        "description": "",
                        "enum": [
                            "ViewSignatoryOnly",
                            "ViewAll"
                        ],
                        "type": "string"
                    },
                    "closedDate": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "envelopeStatusType": {
                        "description": "",
                        "enum": [
                            "CREATED",
                            "IN_PROGRESS",
                            "COMPLETED",
                            "EXPIRED",
                            "DECLINED",
                            "CANCELLED",
                            "STALED",
                            "SIGNER_AUTHENTICATION_FAILED"
                        ],
                        "type": "string"
                    },
                    "isFinalized": {
                        "description": "Once this Envelope has been completed, cancelled, failed auth, declined, or expired",
                        "type": "boolean"
                    }
                }
            },
            "listEnvelopeApiModel": {
                "type": "object",
                "properties": {
                    "envelopeApiModel": {
                        "$ref": "#/components/schemas/envelopeApiModel",
                        "description": "",
                        "type": "object"
                    },
                    "documents": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentApiModel",
                            "format": "",
                            "type": "n/a"
                        }
                    }
                }
            },
            "renderedPage": {
                "type": "object",
                "properties": {
                    "width": {
                        "description": "Specifies the width (in pixels) of a page image.",
                        "type": "string"
                    },
                    "height": {
                        "description": "Specifies the height (in pixels) of a page image.",
                        "type": "string"
                    }
                }
            },
            "mergeResult": {
                "type": "object",
                "properties": {
                    "result": {
                        "description": "Provides the resulting merged object.",
                        "type": "string"
                    },
                    "trace": {
                        "description": "Provides a list of the merge operations that were applied to the object.",
                        "type": "string"
                    }
                }
            },
            "appError": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "description": "",
                        "type": "string"
                    },
                    "summary": {
                        "description": "",
                        "type": "string"
                    },
                    "details": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "format": "",
                            "type": "string"
                        }
                    }
                }
            },
            "createWebhookRequest": {
                "title": "The root schema",
                "description": "The root schema comprises the entire JSON document.",
                "default": {},
                "required": [
                    "request"
                ],
                "type": "object",
                "properties": {
                    "request": {
                        "$ref": "#/components/schemas/webhook"
                    }
                },
                "additionalProperties": true
            },
            "createWebhookRequestProperties": {
                "title": "The request schema",
                "description": "An explanation about the purpose of this instance.",
                "default": {},
                "type": "object",
                "properties": {
                    "username": {
                        "title": "The username schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "type": "string"
                    },
                    "password": {
                        "title": "The password schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "type": "string"
                    },
                    "domain": {
                        "title": "The domain schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "type": "string"
                    },
                    "name": {
                        "title": "The name schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "type": "string"
                    },
                    "endpoint": {
                        "title": "The endpoint schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "type": "string"
                    },
                    "headers": {
                        "title": "The headers schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/webhookHeader"
                        }
                    },
                    "authenticationType": {
                        "title": "The authenticationType schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "None",
                        "enum": [
                            "None",
                            "Basic",
                            "Bearer"
                        ],
                        "type": "string"
                    },
                    "httpMethod": {
                        "title": "The httpMethod schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "Get",
                        "enum": [
                            "Post",
                            "Put",
                            "Get",
                            "Patch"
                        ],
                        "type": "string"
                    },
                    "requestBody": {
                        "title": "The requestBody schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "type": "string"
                    },
                    "contentType": {
                        "title": "The contentType schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "enum": [
                            "application/json",
                            "text/xml",
                            "text/plain"
                        ],
                        "type": "string"
                    },
                    "validators": {
                        "title": "The validators schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/webhookValidator"
                        }
                    },
                    "responseValues": {
                        "title": "The responseValues schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/webhookResponseValue"
                        }
                    },
                    "notifyOnFailure": {
                        "title": "The notifyOnFailure schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "enum": [
                            "first",
                            "final",
                            "all"
                        ],
                        "type": "string"
                    },
                    "technicalContactEmailAddresses": {
                        "title": "The technicalContactEmailAddresses schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": true
            },
            "webhookValidatorXPath": {
                "title": "The first anyOf schema",
                "description": "An explanation about the purpose of this instance.",
                "default": {},
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "value",
                            "xPathQuery"
                        ],
                        "type": "object",
                        "properties": {
                            "value": {
                                "title": "The value schema",
                                "description": "The value that is compared in the conditional",
                                "default": "",
                                "type": "string"
                            },
                            "xPathQuery": {
                                "description": "The xPath to select the value from a valid XML or JSON response for comparison",
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/webhookValidator"
                    }
                ],
                "example": {
                    "validatorType": "StatusCode",
                    "value": "some text",
                    "validatorCondition": "DoesNotContain",
                    "xPathQuery": "some text"
                }
            },
            "webhookValidator": {
                "title": "The first anyOf schema",
                "description": "An explanation about the purpose of this instance.",
                "required": [
                    "validatorType",
                    "validatorCondition"
                ],
                "type": "object",
                "properties": {
                    "validatorType": {
                        "title": "The validatorType schema",
                        "description": "What type of value is being compared: Http Status Code, Reponse Body, or a JSON/XML xPath.",
                        "enum": [
                            "StatusCode",
                            "Body",
                            "XPath"
                        ],
                        "type": "string"
                    },
                    "validatorCondition": {
                        "title": "The validatorCondition schema",
                        "description": "This is a logical operator of Equals, Contains or Does not Contain",
                        "enum": [
                            "Equals",
                            "Contains",
                            "DoesNotContain"
                        ],
                        "type": "string"
                    }
                },
                "example": {
                    "validatorType": "Body",
                    "validatorCondition": "Contains"
                }
            },
            "webhookValidatorBody": {
                "title": "The first anyOf schema",
                "description": "An explanation about the purpose of this instance.",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "value"
                        ],
                        "type": "object",
                        "properties": {
                            "value": {
                                "title": "The value schema",
                                "description": "The value that is compared in the conditional",
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/webhookValidator"
                    }
                ],
                "example": {
                    "validatorType": "StatusCode",
                    "value": "some text",
                    "validatorCondition": "DoesNotContain"
                }
            },
            "webhookValidatorStatusCode": {
                "title": "Validates a webhook was successfully called based on the responses http status code",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "value"
                        ],
                        "type": "object",
                        "properties": {
                            "value": {
                                "title": "The value schema",
                                "description": "The value that is compared in the conditional",
                                "enum": [
                                    "200",
                                    "201",
                                    "202",
                                    "203",
                                    "204",
                                    "205",
                                    "206",
                                    "300",
                                    "301",
                                    "302",
                                    "303",
                                    "304",
                                    "305",
                                    "306",
                                    "307",
                                    "400",
                                    "401",
                                    "402",
                                    "403",
                                    "404",
                                    "405",
                                    "406",
                                    "407",
                                    "408",
                                    "409",
                                    "410",
                                    "411",
                                    "412",
                                    "413",
                                    "414",
                                    "415",
                                    "416",
                                    "417",
                                    "426",
                                    "500",
                                    "501",
                                    "502",
                                    "503",
                                    "504",
                                    "505"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/webhookValidator"
                    }
                ],
                "example": {
                    "validatorType": "StatusCode",
                    "value": "some text",
                    "validatorCondition": "DoesNotContain"
                }
            },
            "webhookResponseValue": {
                "title": "The first anyOf schema",
                "description": "An explanation about the purpose of this instance.",
                "required": [
                    "name",
                    "headerValue"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "The name schema",
                        "description": "An explanation about the purpose of this instance.",
                        "type": "string",
                        "example": "this.is.a.key"
                    },
                    "responseValueID": {
                        "title": "The name schema",
                        "description": "An explanation about the purpose of this instance.",
                        "type": "string",
                        "example": "webServiceResponseValueID4"
                    }
                },
                "example": {
                    "name": "some text",
                    "responseValueID": "some text"
                }
            },
            "webhookHeader": {
                "title": "The first anyOf schema",
                "required": [
                    "name",
                    "headerValue"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "The name schema",
                        "type": "string",
                        "example": "Content-Type"
                    },
                    "headerValue": {
                        "title": "The headerValue schema",
                        "type": "string",
                        "example": "application/json"
                    }
                },
                "example": {
                    "name": "Content-Type",
                    "headerValue": "application/json"
                }
            },
            "createWebhookResponse": {
                "title": "Root Type for createWebhookResponse",
                "description": "",
                "required": [
                    "result"
                ],
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {}
                    },
                    "result": {
                        "$ref": "#/components/schemas/createWebhookResponseResult",
                        "properties": {
                            "webHook": {
                                "$ref": "#/components/schemas/webhook",
                                "properties": {
                                    "webHookID": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "messages": [],
                    "result": {
                        "webHook": {
                            "webHookID": "some text",
                            "username": "some text",
                            "password": "some text",
                            "domain": "some text",
                            "name": "some text",
                            "endpoint": "some text",
                            "headers": [
                                {
                                    "name": "some text",
                                    "headerValue": "some text"
                                },
                                {
                                    "name": "some text",
                                    "headerValue": "some text"
                                }
                            ],
                            "authenticationType": "Bearer",
                            "httpMethod": "Put",
                            "requestBody": "some text",
                            "contentType": "text/plain",
                            "validators": [],
                            "responseValues": [
                                {
                                    "name": "some text",
                                    "responseValueID": "some text"
                                },
                                {
                                    "name": "some text",
                                    "responseValueID": "some text"
                                }
                            ],
                            "notifyOnFailure": "all",
                            "technicalContactEmailAddresses": [
                                "some text",
                                "some text"
                            ]
                        }
                    }
                }
            },
            "webhook": {
                "title": "The request schema",
                "description": "An explanation about the purpose of this instance.",
                "type": "object",
                "properties": {
                    "webHookID": {
                        "type": "string"
                    },
                    "username": {
                        "title": "The username schema",
                        "type": "string"
                    },
                    "password": {
                        "title": "The password schema",
                        "type": "string"
                    },
                    "domain": {
                        "title": "The domain schema",
                        "type": "string"
                    },
                    "name": {
                        "title": "The name schema",
                        "type": "string"
                    },
                    "endpoint": {
                        "title": "The endpoint schema",
                        "type": "string"
                    },
                    "headers": {
                        "title": "The headers schema",
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/webhookHeader"
                        }
                    },
                    "authenticationType": {
                        "title": "The authenticationType schema",
                        "default": "None",
                        "enum": [
                            "None",
                            "Basic",
                            "Bearer"
                        ],
                        "type": "string"
                    },
                    "httpMethod": {
                        "title": "The httpMethod schema",
                        "enum": [
                            "Post",
                            "Put",
                            "Get",
                            "Patch"
                        ],
                        "type": "string"
                    },
                    "requestBody": {
                        "title": "The requestBody schema",
                        "type": "string"
                    },
                    "contentType": {
                        "title": "The contentType schema",
                        "enum": [
                            "application/json",
                            "text/xml",
                            "text/plain"
                        ],
                        "type": "string"
                    },
                    "validators": {
                        "title": "The validators schema",
                        "default": [],
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/webhookValidatorBody"
                                },
                                {
                                    "$ref": "#/components/schemas/webhookValidatorStatusCode"
                                },
                                {
                                    "$ref": "#/components/schemas/webhookValidatorXPath"
                                }
                            ]
                        }
                    },
                    "responseValues": {
                        "title": "The responseValues schema",
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/webhookResponseValue"
                        }
                    },
                    "notifyOnFailure": {
                        "title": "The notifyOnFailure schema",
                        "enum": [
                            "first",
                            "final",
                            "all"
                        ],
                        "type": "string"
                    },
                    "technicalContactEmailAddresses": {
                        "title": "The technicalContactEmailAddresses schema",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "createWebhookResponseResult": {
                "title": "Root Type for createWebhookResponse",
                "description": "",
                "required": [
                    "result"
                ],
                "type": "object",
                "properties": {
                    "webHook": {
                        "$ref": "#/components/schemas/webhook"
                    }
                },
                "example": {
                    "webHook": {
                        "webHookID": "some text",
                        "username": "some text",
                        "password": "some text",
                        "domain": "some text",
                        "name": "some text",
                        "endpoint": "some text",
                        "headers": [
                            {
                                "name": "some text",
                                "headerValue": "some text"
                            },
                            {
                                "name": "some text",
                                "headerValue": "some text"
                            }
                        ],
                        "authenticationType": "Basic",
                        "httpMethod": "Post",
                        "requestBody": "some text",
                        "contentType": "application/json",
                        "validators": [],
                        "responseValues": [
                            {
                                "name": "some text",
                                "responseValueID": "some text"
                            },
                            {
                                "name": "some text",
                                "responseValueID": "some text"
                            }
                        ],
                        "notifyOnFailure": "final",
                        "technicalContactEmailAddresses": [
                            "some text",
                            "some text"
                        ]
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        }
    },
    "security": [
        {}
    ]
}