openapi: 3.0.0
info:
  title: AssureSign DocumentNOW API Documentation
  description: AssureSign DocumentNOW electronic signature APIs (envelopes and documents) For DocumentNOW user and account management APIs, go to [Account API](https://account.assuresign.net/api/v3.6/account)
  contact:
    name: Support
    url: 'https://support.assuresign.net'
  version: '3.6'
servers:
  - url: 'https://sb.assuresign.net/api/documentnow/v3.6/'
    description: SB
  - url: 'https://www.assuresign.net/api/documentnow/v3.6/'
    description: WWW
paths:
  /emaildesignsets:
    get:
      tags:
        - EmailDesignSets
      description: ''
      summary: Retrieve all email design sets for a given account
      operationId: GetEmailDesignSets
      responses:
        '200':
          description: A successful response for getting email design sets
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/listEmailDesignSetsResultDto'
      parameters:
        - name: culture
          in: query
          description: >-
            Specifies which culture to use when including system designs.
            Currently supported cultures are: en‑US (English - US), es‑US
            (Spanish - US), and fr‑CA (French - Canada)
          required: false
          schema:
            type: string
            format: ''
        - name: IncludeSystemDesignSets
          in: query
          description: >-
            Specifies whether or not to include built-in design sets. To query a
            specific built-in design set, include the culture
          required: false
          schema:
            type: boolean
            format: ''
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
  '/emaildesignsets/{emailDesignSetID}/emailDesigns':
    get:
      tags:
        - EmailDesignSets
      description: ''
      summary: Retrieve all email designs for a given email design set
      operationId: GetEmailDesigns
      responses:
        '200':
          description: A successful response for getting email designs
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/listEmailDesignsResultDto'
      parameters:
        - name: emailDesignSetID
          in: path
          description: Specifies the unique identifier of the email design set
          required: true
          schema:
            type: string
            format: ''
        - name: culture
          in: query
          description: >-
            Specifies which culture to use when including system designs.
            Currently supported cultures are: en‑US (English - US), es‑US
            (Spanish - US), and fr‑CA (French - Canada)
          required: false
          schema:
            type: string
            format: ''
        - name: IncludeSystemDesigns
          in: query
          description: ''
          required: false
          schema:
            type: boolean
            format: ''
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
  '/emaildesignsets/{emailDesignSetID}/defaultEmailNotifications/{culture}':
    get:
      tags:
        - EmailDesignSets
      description: ''
      summary: Retrieve all default notifications
      operationId: GetDefaultNotifications
      responses:
        '200':
          description: >-
            A successful response for getting default notifications for a given
            design set
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/getDefaultNotificationsResult'
      parameters:
        - name: emailDesignSetID
          in: path
          description: Specifies the unique identifier of the email design set
          required: true
          schema:
            type: string
            format: ''
        - name: culture
          in: path
          description: >-
            Specifies which culture to use when including system designs.
            Currently supported cultures are: en‑US (English - US), es‑US
            (Spanish - US), and fr‑CA (French - Canada)
          required: true
          schema:
            type: string
            format: ''
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
  '/users/{username}/accounts':
    get:
      tags:
        - Users
      description: ''
      summary: Lists accounts the specified user may access.
      operationId: GetUserAccounts
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/getUserAccountsResultDto'
        '400':
          description: ''
          content:
            application/json: {}
      parameters:
        - name: username
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
  /envelopes:
    get:
      tags:
        - Envelope
      description: ''
      summary: Get envelopes matching given criteria
      operationId: ListEnvelopes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/listEnvelopesResultDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: dateFilter
          in: query
          description: ''
          required: true
          schema:
            type: string
            format: ''
            enum:
              - ANY
              - CREATED
              - CLOSED
              - EXPIRED
              - COMPLETION
              - CANCELLED
              - DECLINED
              - STALED
        - name: envelopeName
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
        - name: signerName
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
        - name: orderID
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
        - name: emailAddress
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
        - name: mobilePhone
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
        - name: fromDate
          in: query
          description: >-
            Can include time in the following format(s). MM/dd/yyyy HH:mm (24
            hour clock) 12/01/2020 13:01 | MM/dd/yyyy hh:mm tt (12 hour clock)
            12/01/2020 01:01 PM | MM/dd/yyyy (No time specified will default to
            12 am) 12/01/2020
          required: false
          schema:
            type: string
            format: ''
        - name: toDate
          in: query
          description: >-
            Can include time in the following format(s). MM/dd/yyyy HH:mm (24
            hour clock) 12/01/2020 13:01 | MM/dd/yyyy hh:mm tt (12 hour clock)
            12/01/2020 01:01 PM | MM/dd/yyyy (No time specified will default to
            12 am) 12/01/2020
          required: false
          schema:
            type: string
            format: ''
        - name: queryChildAccounts
          in: query
          description: ''
          required: false
          schema:
            type: boolean
            format: ''
  '/envelopes/{envelopeID}':
    get:
      tags:
        - Envelope
      description: ''
      summary: Envelope data
      operationId: GetEnvelope
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/getEnvelopeResultDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
  '/envelope/{envelopeID}/signingLinks':
    get:
      tags:
        - Envelope
      description: >-
        Retrieve the signing links for the envelope identified by {envelopeID}.
        Note that bypassing authentication by setting isAuthenticated will fail
        should the account not be configured to allow customer provided
        authentication. Add includeOnlyCurrentSigners=true to the request to
        only include signers whose steps are currently active. You may specify a
        custom redirectUrl for signers by passing an HTML encoded URL. Set a
        date for the links to expire by passing a date in via
        linkExpirationDate. This date will always be interpreted as being in
        Coordinated Universal Time (UTC).
      summary: Get signing links for envelope signers
      operationId: GetSigningLinks
      responses:
        '200':
          description: signing links available for immediate presentment
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/getSigningLinksResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
        - name: includeOnlyCurrentSigners
          in: query
          description: ''
          required: false
          schema:
            type: boolean
            format: ''
        - name: isAuthenticated
          in: query
          description: ''
          required: false
          schema:
            type: boolean
            format: ''
        - name: redirectUrl
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
        - name: linkExpirationDate
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
  '/envelope/{envelopeID}/accessLinks/{documentType}':
    get:
      tags:
        - Envelope
      description: >-
        Retrieve a link to a particular version of an envelope identified by
        {envelopeID} for a given party to the document. Identify the party
        (signers, CC contacts, originating user) by their email address or
        mobile phone number; identifying the party to the document is important
        since different parties may have different view of the envelope
        collection, depending on how it was constructed.  Calling the method
        without indicating a party will return the access link intended for the
        document originator. Note that interim versions of envelopes are only
        preserved as long as an envelope is unsigned or has not been cancelled.
        The completed version of the document will only be available for signed
        envelopes.
      summary: Get access links for a specific user in an envelope
      operationId: GetAccessLinks
      responses:
        '200':
          description: 'Provides access links to an envelope '
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/getAccessLinkResultDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
        - name: documentType
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
            enum:
              - ORIGINAL
              - INTERIM
              - COMPLETED
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: signerEmail
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
        - name: signerMobilePhone
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
        - name: linkExpirationDate
          in: query
          description: ''
          required: false
          schema:
            type: string
            format: ''
  '/envelopes/{envelopeID}/cancel':
    put:
      tags:
        - Envelope
      description: >-
        Cancel an envelope identified by {envelopeID} and stop pending workflow.
        The envelope must not be completed already for the cancellation to be
        accepted.
      summary: Cancel an active envelope
      operationId: CancelEnvelope
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/cancelEnvelopeResultDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: object
                  $ref: '#/components/schemas/cancelEnvelopeRequestDto'
            example:
              request:
                remarks: Cancelling envelope because...
        required: true
  '/envelopes/{envelopeID}/download':
    post:
      tags:
        - Envelope
      description: >-
        Download the documents contained in the envelope identified by
        {envelopeID}. The document contents will be included in the response
        content as base64 encoded string data.
      summary: Download a completed envelope
      operationId: DownloadEnvelope
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/downloadEnvelopeResultDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: object
                  $ref: '#/components/schemas/downloadEnvelopeRequestDto'
            example:
              request:
                envelopePassword: TheEnvelopePassword1234
        required: true
  '/envelopes/{envelopeID}/delete': {}
  '/envelopes/{envelopeID}/history':
    get:
      tags:
        - Envelope
      description: >-
        Retrieve the history for an envelope identified by {envelopeID}. The
        history of the envelope container will be returned in addition to the
        histories of individual documents contained in the envelope.
      summary: Get envelope history
      operationId: EnvelopeHistory
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/envelopeHistoryResultDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
  '/envelopes/{envelopeID}/status':
    get:
      tags:
        - Envelope
      description: 'Retrieve the current status of the envelope identified by {envelopeID}.'
      summary: Get envelope status
      operationId: EnvelopeStatus
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                    $ref: '#/components/schemas/envelopeStatusResultDto'
              examples:
                envelope Status Response:
                  value:
                    messages: []
                    result:
                      status: completed
                      documentList:
                        - status:
                            statusDate: '2020-09-08T04:00:00+00:00'
                            statusDateSpecified: true
                            statusType: completed
                            statusTypeSpecified: true
                            statusDetails: Document details
                          name: TestDocument
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
  '/envelopes/{envelopeID}/signers/{envelopeSignerID}':
    put:
      tags:
        - Envelope
      description: ''
      summary: 'Update envelope signer name, email, mobile phone, and password'
      operationId: UpdateEnvelopeSigner
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/updateEnvelopeSignerResultDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
        - name: envelopeSignerID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: object
                  $ref: '#/components/schemas/updateEnvelopeSignerRequestDto'
            example:
              request:
                updateEnvelopeSigner:
                  name: FirstName LastName
                  emailAddress: FirstName@example.com
                  resendLastEmail: true
        required: true
  '/envelopes/{envelopeID}/values':
    get:
      tags:
        - Envelope
      description: >-
        Get a list containing all of the typed fields (JotBlocks) and associated
        values contained in the envelope identified by {envelopeID}. The
        envelope must be completed prior to calling this method in order for
        field (JotBlock) values to be available.
      summary: Get a list of field (JotBlock) values for an envelope
      operationId: GetEnvelopeValues
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/getEnvelopeValuesResultDto'
        '400':
          description: Bad Request
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
        '410':
          description: Deleted
          content:
            application/json: {}
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: envelopeID
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: ''
  /authentication/sso:
    post:
      tags:
        - SsoToken
      description: >-
        An API authenticated user may request an SSO token via
        /authentication/sso and add the token to the Simple Setup URL in the
        form ?ssoToken={ssoTokenValue} to redirect to a prepared envelope. For
        example, for a prepared envelope built at www.assuresign.net, append the
        preparedEnvelopeID to the address, along with the ssoToken, in the form
        https://www.assuresign.net/ui/simpleSetup/{preparedEnvelopeID}?ssoToken={ssoTokenValue}.
      summary: Obtain a token that can be applied as a query parameter to SimpleSetup
      operationId: GetWebTokenAsync
      responses:
        '200':
          description: A successful response for getting sso token
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/ssoResultDto'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: object
                  $ref: '#/components/schemas/ssoRequestDto'
            example: {}
        required: false
  /submit/prepare:
    post:
      tags:
        - PreparedEnvelope
      description: >-
        Preparing an envelope allows for further modification, either via
        additional API calls or by continuing to edit the envelope in the
        AssureSign UI. Ad hoc data may be submitted, or Simple Setup template
        information may be provided. The prepared envelope may be finalized by
        calling /submit/{preparedEnvelopeID}. Additional modifications may be
        made to the prepared envelope by performing a PUT to
        /submit/prepare/{preparedEnvelopeID}. An API authenticated user may
        request an SSO token via /authentication/sso and add the token to the
        Simple Setup URL in the form ?ssoToken={ssoTokenValue} to redirect to
        the prepared envelope. For example, for a prepared envelope built at
        www.assuresign.net, append the preparedEnvelopeID to the address, along
        with the ssoToken, in the form
        https://www.assuresign.net/ui/simpleSetup/{preparedEnvelopeID}?ssoToken={ssoTokenValue}.
        Additional examples are available on the [AssureSign support
        portal](https://support.assuresign.net/hc/en-us/articles/360011225593)
      summary: >-
        Prepare an envelope for additional operations, including manual review
        and adding documents
      operationId: CreatePreparedEnvelope
      responses:
        '200':
          description: A successful response for creating a prepared envelope
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/preparedEnvelopeUpsertResponse'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: object
                  $ref: '#/components/schemas/preparedEnvelopeParsed'
            example:
              request:
                content:
                  addendums: []
                  documents:
                    - attachments:
                        - allowMultipleUploads: true
                          instructions: Check this out
                          label: ''
                          required: true
                          signer: First Signer
                      fields:
                        - borderSides: {}
                          certified: true
                          fieldType: signature
                          inputType: signatory
                          instructions: Please sign by entering your full name.
                          name: Signature JotBlock
                          position:
                            x: 0.27
                            'y': 0.32
                          required: true
                          signer: First Signer
                          size:
                            height: 0.05
                            width: 0.7
                          sourceGroup: SIGNATURE
                          signatureStyle: drawn
                          fontSize: 10
                          horizontalAlignment: center
                          signerInputType: free_Text
                          verticalAlignment: middle
                      file:
                        fileToUpload:
                          data: '[File data must be converted to Base64]'
                          fileName: Example.pdf
                        extension: pdf
                      name: document 1
                  emailNotifications: []
                  envelope:
                    cultureType: en-US
                    expirationDate: '2020-10-08'
                    name: Example Envelope
                    templatesApplied: []
                    senderInputs: []
                    notificationSettings:
                      enableNotifications: true
                      addCustomRecipientsToEnvelopeComplete: true
                  notificationRecipients: []
                  signers:
                    - email: example@asd.com
                      label: First Signer
                      name: Signer one
                      signatureStyle: drawn
                  signerPayments:
                    - label: Signer one payment
                      signer: Signer one
                      paymentConfiguration:
                        signerPaymentChargeCard:
                          amount: '1.99'
                        orderNumber: ANYORDERNUMBER001
                      failureBehavior:
                        allowPaymentFailure: true
                  smsNotifications: []
                  steps: []
                  conditionalLogicItems: []
                  webHookNotifications: []
                  documentTransmissions: []
        required: true
  '/submit/prepare/{preparedEnvelopeID}':
    put:
      tags:
        - PreparedEnvelope
      description: >-
        Make additional modifications to the prepared envelope referenced by the
        {preparedEnvelopeID} that was returned from a /submit/prepare operation.
        This may be useful, for example, in cases where an envelope contains
        multiple documents and needs to be split up into multiple submissions.
      summary: Perform additional operations on a previously created prepared envelope
      operationId: UpdatePreparedEnvelope
      responses:
        '200':
          description: A successful response for updating a prepared envelope
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/preparedEnvelopeUpsertResponse'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: preparedEnvelopeID
          in: path
          description: ID of Prepared envelope
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: object
                  $ref: '#/components/schemas/preparedEnvelopeParsed'
            example:
              request:
                content:
                  addendums: []
                  documents:
                    - attachments:
                        - allowMultipleUploads: true
                          instructions: Check this out
                          label: ''
                          required: true
                          signer: First Signer
                      fields:
                        - borderSides: {}
                          certified: true
                          fieldType: signature
                          inputType: signatory
                          instructions: Please sign by entering your full name.
                          name: Signature JotBlock
                          position:
                            x: 0.27
                            'y': 0.32
                          required: true
                          signer: First Signer
                          size:
                            height: 0.05
                            width: 0.7
                          sourceGroup: SIGNATURE
                          signatureStyle: drawn
                          fontSize: 10
                          horizontalAlignment: center
                          signerInputType: free_Text
                          verticalAlignment: middle
                      file:
                        fileToUpload:
                          data: '[File data must be converted to Base64]'
                          fileName: Example.pdf
                        extension: pdf
                      name: document 1
                  emailNotifications: []
                  envelope:
                    cultureType: en-US
                    expirationDate: '2020-10-08'
                    name: Example Envelope
                    templatesApplied: []
                    senderInputs: []
                    notificationSettings:
                      enableNotifications: true
                      addCustomRecipientsToEnvelopeComplete: true
                  notificationRecipients: []
                  signers:
                    - email: example@asd.com
                      label: First Signer
                      name: Signer one
                      signatureStyle: drawn
                  signerPayments:
                    - label: Signer one payment
                      signer: Signer one
                      paymentConfiguration:
                        signerPaymentChargeCard:
                          amount: '1.99'
                        orderNumber: ANYORDERNUMBER001
                      failureBehavior:
                        allowPaymentFailure: true
                  smsNotifications: []
                  steps: []
                  conditionalLogicItems: []
                  webHookNotifications: []
                  documentTransmissions: []
        required: true
  /submit:
    post:
      tags:
        - Submit
      description: >-
        Submit a complete envelope to begin the envelope's workflow,
        operating in the context of the the account indicated in the
        X-AS-UserContext header. Simple Setup templates may be used, a complete
        ad hoc envelope may be submitted, or a combination of ad hoc and
        templated information may be submitted. The messages section should be
        parsed for any warnings. A successful submit will return back an ID of
        the envelope that may be used in method calls requiring {envelopeID}.
        Additional examples are available on the [AssureSign support
        portal](https://support.assuresign.net/hc/en-us/articles/360011128574)
      summary: >-
        Submit a complete envelope via a combination of ad hoc data and/or
        Simple Setup templates.
      operationId: SubmitRequest
      responses:
        '200':
          description: A successful response for submit
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/submitResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: object
                  $ref: '#/components/schemas/templateParsed'
            examples:
              submit template example:
                value:
                  request:
                    placeholders: []
                    templates:
                      - templateID: 9562851d-7c22-415c-b373-6f49f72fdd53
                        values:
                          - name: 'Envelope Name 2 '
                            value: My New Envelope
                          - name: Envelope Order number 2
                            value: Account_Order_123
                          - name: Expiration Date 2
                            value: 06/17/2019
                          - name: Language
                            value: en-US
                          - name: Signer 1 Name
                            value: John Doe
                          - name: Signer 1 Email
                            value: john.doe@example.com
                          - name: Signer 1 Mobile Phone
                            value: ''
                          - name: DocumentFile
                            files:
                              - fileToUpload:
                                  data: Base64DataHere
                                  fileName: ExampleFileName.pdf
                                extension: pdf
                            overlayStartPage: 0
                description: >-
                  Pass the templateID of the Simple Setup template (you can
                  perform a GET to /templates to see all available templates),
                  and a values array of name/value pairs for the sender inputs.
                  You control the names of the sender inputs, so any submit
                  needs to be adjusted to match what your template requires be
                  sent in.
              submit Ad-hoc example:
                value:
                  request:
                    content:
                      addendums: []
                      documents:
                        - attachments:
                            - allowMultipleUploads: true
                              instructions: Check this out
                              label: ''
                              required: true
                              signer: First Signer
                          fields:
                            - borderSides: {}
                              certified: true
                              fieldType: signature
                              inputType: signatory
                              instructions: Please sign by entering your full name.
                              name: Signature JotBlock
                              position:
                                x: 0.27
                                'y': 0.32
                              required: true
                              signer: First Signer
                              size:
                                height: 0.05
                                width: 0.7
                              sourceGroup: SIGNATURE
                              signatureStyle: drawn
                              fontSize: 10
                              horizontalAlignment: center
                              signerInputType: free_Text
                              verticalAlignment: middle
                          file:
                            fileToUpload:
                              data: '[File data must be converted to Base64]'
                              fileName: Example.pdf
                            extension: pdf
                          name: document 1
                      emailNotifications: []
                      envelope:
                        cultureType: en-US
                        expirationDate: '2020-10-08'
                        name: Env1
                        templatesApplied: []
                        senderInputs: []
                        notificationSettings:
                          enableNotifications: true
                          addCustomRecipientsToEnvelopeComplete: true
                      notificationRecipients: []
                      signers:
                        - email: example@asd.com
                          label: First Signer
                          name: Signer one
                          signatureStyle: drawn
                      signerPayments: []
                      smsNotifications: []
                      steps: []
                      conditionalLogicItems: []
                      webHookNotifications: []
                      documentTransmissions: []
                    placeholders: []
                description: >-
                  Illustrates some of the possible configurations that could be
                  used to perform a submit of an ad-hoc document. It is also
                  possible to combine ad-hoc and template request information in
                  a single operation. 
        required: true
  /submit/validate:
    post:
      tags:
        - Submit
      description: >-
        Passing in the same JSON request structure as /submit, this method will
        validate the content of the request without completing the submission
        process.
      summary: Submit an envelope and contained documents for content validation only
      operationId: ValidateSubmit
      responses:
        '200':
          description: A successful response for preview
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/mergeResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/appError'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: object
                  $ref: '#/components/schemas/templateParsed'
            examples:
              validate template submission:
                value:
                  request:
                    placeholders: []
                    templates:
                      - templateID: 27b0b997-7f5a-4b11-a069-c0472b424718
                        values:
                          - name: 'Envelope Name 2 '
                            value: My New Envelope
                          - name: Envelope Order number 2
                            value: Account_Order_123
                          - name: Expiration Date 2
                            value: 06/17/2019
                          - name: Language
                            value: en-US
                          - name: Signer 1 Name
                            value: John Doe
                          - name: Signer 1 Email
                            value: john.doe@example.com
                          - name: Signer 1 Mobile Phone
                            value: ''
                          - name: DocumentFile
                            files:
                              - fileToUpload:
                                  data: Base64DataHere
                                  fileName: ExampleFileName.pdf
                                extension: pdf
                            overlayStartPage: 0
                description: >-
                  Pass the templateID of the Simple Setup template (you can
                  perform a GET to /templates to see all available templates),
                  and a values array of name/value pairs for the sender inputs.
                  You control the names of the sender inputs, so any submit
                  needs to be adjusted to match what your template requires be
                  sent in.
              validate Ad-hoc submission example:
                value:
                  request:
                    content:
                      addendums: []
                      documents:
                        - attachments:
                            - allowMultipleUploads: true
                              instructions: Check this out
                              label: ''
                              required: true
                              signer: First Signer
                          fields:
                            - borderSides: {}
                              certified: true
                              fieldType: signature
                              inputType: signatory
                              instructions: Please sign by entering your full name.
                              name: Signature JotBlock
                              position:
                                x: 0.27
                                'y': 0.32
                              required: true
                              signer: First Signer
                              size:
                                height: 0.05
                                width: 0.7
                              sourceGroup: SIGNATURE
                              signatureStyle: drawn
                              fontSize: 10
                              horizontalAlignment: center
                              signerInputType: free_Text
                              verticalAlignment: middle
                          file:
                            fileToUpload:
                              data: '[File data must be converted to Base64]'
                              fileName: Example.pdf
                            extension: pdf
                          name: document 1
                      emailNotifications: []
                      envelope:
                        cultureType: en-US
                        expirationDate: '2020-10-08'
                        name: Env1
                        templatesApplied: []
                        senderInputs: []
                        notificationSettings:
                          enableNotifications: true
                          addCustomRecipientsToEnvelopeComplete: true
                      notificationRecipients: []
                      signers:
                        - email: example@asd.com
                          label: First Signer
                          name: Signer one
                          signatureStyle: drawn
                      signerPayments: []
                      smsNotifications: []
                      steps: []
                      conditionalLogicItems: []
                      webHookNotifications: []
                      documentTransmissions: []
                    placeholders: []
                description: >-
                  Illustrates some of the possible configurations that could be
                  used to perform a submit of an ad-hoc document. It is also
                  possible to combine ad-hoc and template request information in
                  a single operation. 
        required: true
  '/submit/{preparedEnvelopeID}':
    post:
      tags:
        - Submit
      description: >-
        Finalize a submit of a prepared envelope previously created via a
        /submit/prepare operation. This closes the envelope and begins the
        envelope's workflow.
      summary: Finalize the submission of a previously prepared envelope.
      operationId: PreparedEnvelope
      responses:
        '200':
          description: A successful response for prepare
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/submitResult'
      parameters:
        - name: preparedEnvelopeID
          in: path
          description: ID of Prepared envelope
          required: true
          schema:
            type: string
            format: ''
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
  /templates:
    get:
      tags:
        - Templates
      description: >-
        List Simple Setup templates available to the user, operating in the
        context of the the account indicated in the X-AS-UserContext header.
        Detailed information for any given template may be retrieved by using
        the returned templateID in a call to templates/{templateID}. The
        messages section should be parsed for any warnings.
      summary: >-
        Retrieve a list of all of the Simple Setup templates available to the
        current user.
      operationId: GetAllTemplates
      responses:
        '200':
          description: A successful response for GetAllTemplates
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/templateList'
      parameters:
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
        - name: includeArchived
          in: query
          description: Include archived templates with the GetAll operation
          required: false
          schema:
            type: boolean
            format: ''
  '/templates/{templateID}':
    get:
      tags:
        - Templates
      description: >-
        Retrieve a Simple Setup envelope JSON structure. The messages section
        should be parsed for any warnings.
      summary: Retrieve all of the data for the specified Simple Setup template.
      operationId: GetTemplate
      responses:
        '200':
          description: A successful response for getting a template
          content:
            application/json:
              schema:
                properties:
                  messages:
                    type: array
                    description: ''
                    items:
                      type: n/a
                      format: ''
                      $ref: '#/components/schemas/responseMessageDto'
                  result:
                    $ref: '#/components/schemas/templateParsed'
      parameters:
        - name: templateID
          in: path
          description: Specifies the unique identifier of the template.
          required: true
          schema:
            type: string
            format: ''
        - name: X-AS-UserContext
          in: header
          description: '{username}:{DocumentNOW Account Context Identifier}'
          required: false
          schema:
            type: string
            format: ''
  /webHooks:
    post:
      summary: Create a new DocumentTrack Webhook
      description: Creates a new DocumentTrack Webhook
      parameters:
        - name: X-AS-UserContext
          in: header
          required: false
          schema:
            type: string
          description: '{username}:{DocumentNOW Account Context Identifier}'
        - name: newParam
          in: query
          required: false
          schema:
            type: string
      operationId: CreateWebhook
      responses:
        '200':
          description: A successful response for creating a prepared envelope
          content:
            application/json:
              schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSchema'
components:
  schemas:
    actionSuccessResultDto:
      type: object
      properties:
        success:
          type: boolean
          description: ''
    responseMessageDto:
      type: object
      properties:
        details:
          type: string
          description: ''
        messageType:
          type: string
          description: ''
          enum:
            - Information
            - Verbose
            - Warning
            - Error
    ssoResultDto:
      type: object
      properties:
        ssoToken:
          type: string
          description: ''
    ssoRequestDto:
      type: object
      properties: {}
    apiFile:
      type: object
      properties:
        saved:
          type: object
          description: Specifies the metadata for a previously uploaded file.
          properties:
            fileName:
              type: string
              description: >-
                Specifies the full file name and extension for this previously
                uploaded file. Note that the filename should not contain any
                spaces or special characters.
            location:
              type: string
              description: Specifies the storage location of this previously uploaded file.
            pages:
              type: array
              description: >-
                Provides a list of the page images rendered for this previously
                uploaded file.
              items:
                type: object
                format: ''
                properties:
                  width:
                    type: string
                    description: Specifies the width (in pixels) of a page image.
                  height:
                    type: string
                    description: Specifies the height (in pixels) of a page image.
        fileToUpload:
          type: object
          description: Specifies the file metadata and file contents for a new file upload.
          properties:
            data:
              type: string
              description: Specifies the actual file data a Base64-encoded string.
            fileName:
              type: string
              description: 'Specifies the full file name and extension. Example: Policy.pdf'
            parseDocument:
              type: boolean
              description: Parse this document for dynamic jotblocks
            dynamicDocumentVersion:
              type: string
              description: >-
                Parse the Document using V2 or V3 syntax. Only applicable if
                ParseDocument is set to true
              enum:
                - V2
    prepareEnvelopeDto:
      type: object
      properties:
        name:
          type: string
          description: ''
        documents:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/prepareDocumentDto'
        signers:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/prepareSignerDto'
        customRecipients:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/prepareCustomRecipientDto'
        notifications:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/preparedNotificationDto'
    prepareDocumentDto:
      type: object
      properties:
        name:
          type: string
          description: ''
        data:
          type: string
          description: ''
        dataType:
          type: string
          description: ''
        extracted:
          type: object
          description: ''
          $ref: '#/components/schemas/prepareExtractedDocumentDto'
    prepareExtractedDocumentDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ''
        pages:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/prepareExtractedPageDto'
    prepareExtractedPageDto:
      type: object
      properties:
        width:
          type: integer
          format: int32
          description: ''
        height:
          type: integer
          format: int32
          description: ''
    prepareSignerDto:
      type: object
      properties:
        label:
          type: string
          description: ''
        fullName:
          type: string
          description: ''
        emailAddress:
          type: string
          description: ''
        mobilePhone:
          type: string
          description: ''
        authentication:
          type: object
          description: ''
          $ref: '#/components/schemas/prepareSignerAuthenticationDto'
        signatureStyle:
          type: string
          description: ''
          enum:
            - SELECTABLE
            - DRAWN
            - TYPED
            - CLASSIC
    prepareSignerAuthenticationDto:
      type: object
      properties:
        password:
          type: string
          description: ''
        passwordPrompt:
          type: string
          description: ''
    prepareCustomRecipientDto:
      type: object
      properties:
        label:
          type: string
          description: ''
        fullName:
          type: string
          description: ''
        emailAddress:
          type: string
          description: ''
    preparedNotificationDto:
      type: object
      properties:
        type:
          type: string
          description: ''
        name:
          type: string
          description: ''
        subject:
          type: string
          description: ''
        body:
          type: string
          description: ''
        stage:
          type: string
          description: ''
          enum:
            - EnvelopeStart
            - EnvelopePreExpire
            - EnvelopeExpire
            - EnvelopeComplete
            - EnvelopeCancel
            - EnvelopeDecline
            - SignerFeedback
            - SignerAuthFailure
            - SignerKbaStart
            - SignerKbaComplete
            - StepStart
            - StepComplete
            - OnPaymentApproved
            - OnPaymentDeclined
            - OnPaymentRefunded
        step:
          type: integer
          format: int32
          description: ''
        recipients:
          type: array
          description: ''
          items:
            type: string
            format: ''
    preparedEnvelopeUpsertResponseV3_1:
      type: object
      properties:
        preparedEnvelopeId:
          type: string
          format: uuid
          description: Specifies the unique identifier of a prepared envelope.
    preparedEnvelopeUpsertResponse:
      type: object
      properties:
        preparedEnvelopeID:
          type: string
          format: uuid
          description: Specifies the unique identifier of a prepared envelope.
    submitResultV3_1:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ''
        authToken:
          type: string
          format: uuid
          description: ''
    submitResult:
      type: object
      properties:
        envelopeID:
          type: string
          format: uuid
          description: ''
        authToken:
          type: string
          format: uuid
          description: ''
    preparedEnvelopeRequestDto3_0:
      type: object
      properties:
        envelope:
          type: object
          description: ''
          $ref: '#/components/schemas/prepareEnvelopeDto'
    conditionalLogicItem:
      type: object
      properties:
        andOrType:
          type: string
          description: ''
          enum:
            - And
            - Or
        conditions:
          type: array
          description: ''
          items:
            type: object
            format: ''
            properties:
              objectEntityID:
                type: string
                description: ''
              objectEntityType:
                type: string
                description: ''
                enum:
                  - Field
                  - SignerAttachment
                  - SignerPayment
              regex:
                type: string
                description: ''
              compareType:
                type: string
                description: ''
                enum:
                  - Anything
                  - EqualTo
                  - NotEqualTo
                  - GreaterThan
                  - LessThan
                  - Skipped
                  - Enabled
                  - Regex
              conditionalValue:
                type: string
                description: ''
              isCaseSensitive:
                type: string
                description: ''
              trim:
                type: boolean
                description: ''
        actions:
          type: array
          description: ''
          items:
            type: object
            format: ''
            properties:
              objectEntityID:
                type: string
                description: links action to field
              objectEntityType:
                type: string
                description: ''
                enum:
                  - Field
                  - SignerAttachment
                  - SignerPayment
              requireSignerAttachment:
                type: boolean
                description: ''
              isHidden:
                type: boolean
                description: ''
              isShown:
                type: boolean
                description: ''
              isRequired:
                type: boolean
                description: ''
              requirePayment:
                type: boolean
                description: ''
    conditionalLogicCondition:
      type: object
      properties:
        objectEntityID:
          type: string
          description: ''
        objectEntityType:
          type: string
          description: ''
          enum:
            - Field
            - SignerAttachment
            - SignerPayment
        regex:
          type: string
          description: ''
        compareType:
          type: string
          description: ''
          enum:
            - Anything
            - EqualTo
            - NotEqualTo
            - GreaterThan
            - LessThan
            - Skipped
            - Enabled
            - Regex
        conditionalValue:
          type: string
          description: ''
        isCaseSensitive:
          type: string
          description: ''
        trim:
          type: boolean
          description: ''
    conditionalLogicAction:
      type: object
      properties:
        objectEntityID:
          type: string
          description: links action to field
        objectEntityType:
          type: string
          description: ''
          enum:
            - Field
            - SignerAttachment
            - SignerPayment
        requireSignerAttachment:
          type: boolean
          description: ''
        isHidden:
          type: boolean
          description: ''
        isShown:
          type: boolean
          description: ''
        isRequired:
          type: boolean
          description: ''
        requirePayment:
          type: boolean
          description: ''
    preparedEnvelopeParsedV3_2:
      type: object
      properties:
        content:
          type: object
          description: Provides the data required for submitting an envelope.
          $ref: '#/components/schemas/submissionV3_2'
    preparedEnvelopeParsed:
      type: object
      properties:
        content:
          type: object
          description: Provides the data required for submitting an envelope.
          properties:
            addendums:
              type: array
              description: >-
                Provides a list of non-signable addendums associated with the
                envelope.
              items:
                type: object
                format: ''
                properties:
                  file:
                    type: object
                    description: Provides the file metadata and contents for the addendum.
                    properties:
                      saved:
                        type: object
                        description: Specifies the metadata for a previously uploaded file.
                        properties:
                          fileName:
                            type: string
                            description: >-
                              Specifies the full file name and extension for
                              this previously uploaded file. Note that the
                              filename should not contain any spaces or special
                              characters.
                          location:
                            type: string
                            description: >-
                              Specifies the storage location of this previously
                              uploaded file.
                          pages:
                            type: array
                            description: >-
                              Provides a list of the page images rendered for
                              this previously uploaded file.
                            items:
                              type: object
                              format: ''
                              properties:
                                width:
                                  type: string
                                  description: >-
                                    Specifies the width (in pixels) of a page
                                    image.
                                height:
                                  type: string
                                  description: >-
                                    Specifies the height (in pixels) of a page
                                    image.
                      fileToUpload:
                        type: object
                        description: >-
                          Specifies the file metadata and file contents for a
                          new file upload.
                        properties:
                          data:
                            type: string
                            description: >-
                              Specifies the actual file data a Base64-encoded
                              string.
                          fileName:
                            type: string
                            description: >-
                              Specifies the full file name and extension.
                              Example: Policy.pdf
                          parseDocument:
                            type: boolean
                            description: Parse this document for dynamic jotblocks
                          dynamicDocumentVersion:
                            type: string
                            description: >-
                              Parse the Document using V2 or V3 syntax. Only
                              applicable if ParseDocument is set to true
                            enum:
                              - V2
                  name:
                    type: string
                    description: Specifies the name of the addendum.
            documents:
              type: array
              description: Provides a list of the documents included in the envelope.
              items:
                type: object
                format: ''
                properties:
                  attachments:
                    type: array
                    description: >-
                      Provides a list of the signer attachments that will be
                      collected and applied to the document.
                    items:
                      type: object
                      format: ''
                      properties:
                        allowMultipleUploads:
                          type: boolean
                          description: >-
                            Specifies whether or not signers will be allowed to
                            upload more than one file for the requested
                            attachment.
                        instructions:
                          type: string
                          description: >-
                            Specifies the instructions that will be presented to
                            the signer when they are prompted to upload the
                            attachment during signing.
                        label:
                          type: string
                          description: Specifies a label for the signer attachment.
                        required:
                          type: boolean
                          description: >-
                            Specifies whether or not signers will be required to
                            upload a file for the requested attachment.
                        signer:
                          type: string
                          description: >-
                            Specifies the 'Label' of the signer that
                            will be prompted to upload the attachement.
                  fields:
                    type: array
                    description: >-
                      Provides a list of the fields (JotBlocks) that will be
                      applied to the document.
                    items:
                      type: object
                      format: ''
                      properties:
                        borderSides:
                          type: object
                          description: >-
                            Specifies the borders that should be drawn around
                            the field (if any).
                          properties:
                            bottom:
                              type: boolean
                              description: >-
                                Specifies whether or not a border should be
                                rendered on the bottom of the field.
                            left:
                              type: boolean
                              description: >-
                                Specifies whether or not a border should be
                                rendered on the left side of the field.
                            right:
                              type: boolean
                              description: >-
                                Specifies whether or not a border should be
                                rendered on the right side of the field.
                            top:
                              type: boolean
                              description: >-
                                Specifies whether or not a border should be
                                rendered on the top of the field.
                        certified:
                          type: boolean
                          description: >-
                            Specifies whether or not printed metadata uniquely
                            identifying the field should be rendered around it
                            to visually distinguish it from other data on the
                            containing page.
                        fieldType:
                          type: string
                          description: >-
                            Specifies the type of input required for the field:
                            signature/initials or text.
                          enum:
                            - Typed
                            - Signature
                        inputType:
                          type: string
                          description: >-
                            Specifies the source of the input for the field.
                            Possible values include 'Signer' and
                            'Fixed'.
                          enum:
                            - Signer
                            - Fixed
                            - Signatory
                        instructions:
                          type: string
                          description: >-
                            Specifies the instructions that will be presented to
                            the signer when they are prompted to provide input
                            for the field.
                        name:
                          type: string
                          description: Specifies the name of the field.
                        pageIndex:
                          type: integer
                          format: int32
                          description: Specifies the 0-based index of the containing page.
                        position:
                          type: object
                          description: >-
                            Specifies the position of the field relative to the
                            upper-left corner of the containing page. For
                            example: a field with an 'X Coordinate' of
                            '0.2' and a 'Y Coordinate' of
                            '0.4' would be positioned with its upper
                            left corner 20% of the way across the page
                            horizontally and 40% down the page vertically.
                          properties:
                            x:
                              type: number
                              format: float
                              description: >-
                                Specifies the horizontal position of the field
                                or option relative to the left side of the
                                containing page. For example: a field with an
                                'X Coordinate' of '0.2'
                                would be positioned with its left side 20% of
                                the way across the page horizontally.
                            'y':
                              type: number
                              format: float
                              description: >-
                                Specifies the vertical position of the field or
                                option relative to the top of the containing
                                page. For example: a field with a 'Y
                                Coordinate' of '0.4' would be
                                positioned with its top 40% of the way down the
                                page vertically.
                        required:
                          type: boolean
                          description: >-
                            Specifies whether or not signer input is required
                            for the field.
                        hidden:
                          type: boolean
                          description: Specifies whether or not the field is hidden.
                        signer:
                          type: string
                          description: >-
                            Specifies the label identifying the intended signer
                            for fields that require signer input (signature or
                            text).
                        size:
                          type: object
                          description: >-
                            Specifies the size of the field relative to the size
                            of the containing page. For example: a field with a
                            'Height' of '0.1' and a
                            'Width' of '0.3' would be sized
                            10% of total page height and 30% of total page
                            width.
                          properties:
                            height:
                              type: number
                              format: float
                              description: >-
                                Specifies the height of the field or option
                                relative to the height of the containing page.
                                For example: a field with a 'Height'
                                of '0.1' would be sized 10% of total
                                page height.
                            width:
                              type: number
                              format: float
                              description: >-
                                Specifies the width of the field or option
                                relative to the width of the containing page.
                                For example: a field with a 'Width' of
                                '0.3' would be sized 30% of total page
                                width.
                        sourceGroup:
                          type: string
                          description: >-
                            Optionally specifies a common identifier for a group
                            of fields in an envelope that should share a value.
                        tag:
                          type: string
                          description: >-
                            A generic holder of any information you would like
                            to provide
                        fixedText:
                          type: string
                          description: >-
                            Specifies the text contents for the field for fields
                            with a 'FieldType' of 'Typed'
                            and an 'InputType' of 'Fixed'.
                            Note: content may include merge fields.
                        timing:
                          type: string
                          description: >-
                            Specifies the timing for when the contents of the
                            field will be rendered to the containing document
                            for fields with a 'FieldType' of
                            'Typed' and an 'InputType' of
                            'Fixed'.
                          enum:
                            - On_Document_Start
                            - On_Document_Complete
                        options:
                          type: array
                          description: >-
                            Provides the list of options to present to the
                            signer for fields with a 'FieldType' of
                            'Typed' and one of the 'Multiple
                            Choice' signatory input types.
                          items:
                            type: object
                            format: ''
                            properties:
                              graphicRenderType:
                                type: string
                                description: >-
                                  Specifies how the option will be rendered to
                                  the document if selected. Possible values
                                  include: Empty = 0, Check = 1, X = 2,
                                  No_Box_Empty = 3, No_Box_Check = 4, No_Box_X =
                                  5, Text = 6
                                enum:
                                  - Empty
                                  - Check
                                  - X
                                  - No_Box_Empty
                                  - No_Box_Check
                                  - No_Box_X
                                  - Text
                                  - None
                              selected:
                                type: boolean
                                description: >-
                                  Specifies whether or not the option will be
                                  selected by default.
                              text:
                                type: string
                                description: >-
                                  Specifies the text for the option that will be
                                  presented to the signer.
                              value:
                                type: string
                                description: >-
                                  Specifies the value of the option (may be
                                  different than the displayed text).
                              pageIndex:
                                type: integer
                                format: int32
                                description: >-
                                  Specifies the 0-based index of the containing
                                  page.
                              position:
                                type: object
                                description: >-
                                  Specifies the position of the option relative
                                  to the upper-left corner of the containing
                                  page for radio button or checkbox options. For
                                  example: an option with an 'X
                                  Coordinate' of '0.2' and a
                                  'Y Coordinate' of '0.4'
                                  would be positioned with its upper left corner
                                  20% of the way across the page horizontally
                                  and 40% down the page vertically.
                                properties:
                                  x:
                                    type: number
                                    format: float
                                    description: >-
                                      Specifies the horizontal position of the
                                      field or option relative to the left side
                                      of the containing page. For example: a
                                      field with an 'X Coordinate' of
                                      '0.2' would be positioned with
                                      its left side 20% of the way across the
                                      page horizontally.
                                  'y':
                                    type: number
                                    format: float
                                    description: >-
                                      Specifies the vertical position of the
                                      field or option relative to the top of the
                                      containing page. For example: a field with
                                      a 'Y Coordinate' of
                                      '0.4' would be positioned with
                                      its top 40% of the way down the page
                                      vertically.
                              size:
                                type: object
                                description: >-
                                  Specifies the size of the option relative to
                                  the size of the containing page for radio
                                  button or checkbox options. For example: an
                                  option with a 'Height' of
                                  '0.1' and a 'Width' of
                                  '0.3' would be sized 10% of total
                                  page height and 30% of total page width.
                                properties:
                                  height:
                                    type: number
                                    format: float
                                    description: >-
                                      Specifies the height of the field or
                                      option relative to the height of the
                                      containing page. For example: a field with
                                      a 'Height' of '0.1'
                                      would be sized 10% of total page height.
                                  width:
                                    type: number
                                    format: float
                                    description: >-
                                      Specifies the width of the field or option
                                      relative to the width of the containing
                                      page. For example: a field with a
                                      'Width' of '0.3' would
                                      be sized 30% of total page width.
                        multipleChoiceDefaultValues:
                          type: array
                          description: >-
                            Specify list of values that will be automatically
                            selected upon signing.
                          items:
                            type: string
                            format: ''
                        penColor:
                          type: string
                          description: >-
                            Specifies the color of 'ink' used to
                            render the signature for fields with a
                            'FieldType' of 'Signature'.
                          enum:
                            - Black
                            - Blue
                        signatureType:
                          type: string
                          description: >-
                            Specifies the type of signature (initials or
                            signature) the signer will be prompted to provide
                            for fields with a 'FieldType' of
                            'Signature'.
                          enum:
                            - Signature
                            - Initials
                        signatureStyle:
                          type: string
                          description: >-
                            Specifies the style of signature the signer will
                            adopt for fields with a 'FieldType' of
                            'Signature'.
                          enum:
                            - Selectable
                            - Drawn
                            - Typed
                            - Classic
                        fontDecoration:
                          type: object
                          description: >-
                            Specifies the font styles that should be applied for
                            fields with a 'FieldType' of
                            'Typed'.
                          properties:
                            bold:
                              type: boolean
                              description: >-
                                Specifies whether or not text content for the
                                field will be rendered in Bold.
                            italic:
                              type: boolean
                              description: >-
                                Specifies whether or not text content for the
                                field will be rendered in Italics.
                            underline:
                              type: boolean
                              description: >-
                                Specifies whether or not text content for the
                                field will be underlined.
                        fontName:
                          type: string
                          description: >-
                            Specifies the name of the supported font that should
                            be used to render the contents of the field for
                            fields with a 'FieldType' of
                            'Typed'.
                          enum:
                            - Arial
                            - Bradley_Hand_ITC
                            - Brush_Script_BT
                            - Courier_New
                            - Times_New_Roman
                            - My_Handwriting
                            - Otto
                        fontSize:
                          type: integer
                          description: >-
                            Specifies the size of the font that should be used
                            to render the contents of the field for fields with
                            a 'FieldType' of 'Typed'.
                            Possible values include: 6, 8, 10, 12, 14
                        horizontalAlignment:
                          type: string
                          description: >-
                            Specifies the horizontal alignment of the field
                            contents for fields with a 'FieldType' of
                            'Typed'.
                          enum:
                            - Left
                            - Center
                            - Right
                        signerInputType:
                          type: string
                          description: >-
                            Specifies the type of input required from the signer
                            for fields with a 'FieldType' of
                            'Typed'.
                          enum:
                            - Free_Text
                            - Prefill
                            - Multiple_Choice_Text
                            - Multiple_Choice_Graphic
                            - Timestamp
                            - Custom_Validation
                            - Multiple_Choice_Radio
                            - Multiple_Choice_Checkbox
                            - Undefined
                        verticalAlignment:
                          type: string
                          description: >-
                            Specifies the vertical alignment of the field
                            contents for fields with a 'FieldType' of
                            'Typed'.
                          enum:
                            - Top
                            - Middle
                            - Bottom
                        wordWrap:
                          type: boolean
                          description: >-
                            Specifies whether or not the contents of the field
                            should be automatically wrapped to a new line for
                            fields with a 'FieldType' of
                            'Typed'.
                        formatterType:
                          type: string
                          description: >-
                            Specifies the text mask to apply for fields with a
                            'FieldType' of 'Typed'.
                          enum:
                            - ALPHANUMERIC
                            - CREDITCARD
                            - SSN
                            - CUSTOM
                        formatterCode:
                          type: string
                          description: >-
                            Specifies the custom text mask to apply for fields
                            with a 'FieldType' of 'Typed'
                            and a 'FormatterType' of
                            'Fixed'.
                  file:
                    type: object
                    description: Provides the file metadata and contents for the document.
                    properties:
                      saved:
                        type: object
                        description: Specifies the metadata for a previously uploaded file.
                        properties:
                          fileName:
                            type: string
                            description: >-
                              Specifies the full file name and extension for
                              this previously uploaded file. Note that the
                              filename should not contain any spaces or special
                              characters.
                          location:
                            type: string
                            description: >-
                              Specifies the storage location of this previously
                              uploaded file.
                          pages:
                            type: array
                            description: >-
                              Provides a list of the page images rendered for
                              this previously uploaded file.
                            items:
                              type: object
                              format: ''
                              properties:
                                width:
                                  type: string
                                  description: >-
                                    Specifies the width (in pixels) of a page
                                    image.
                                height:
                                  type: string
                                  description: >-
                                    Specifies the height (in pixels) of a page
                                    image.
                      fileToUpload:
                        type: object
                        description: >-
                          Specifies the file metadata and file contents for a
                          new file upload.
                        properties:
                          data:
                            type: string
                            description: >-
                              Specifies the actual file data a Base64-encoded
                              string.
                          fileName:
                            type: string
                            description: >-
                              Specifies the full file name and extension.
                              Example: Policy.pdf
                          parseDocument:
                            type: boolean
                            description: Parse this document for dynamic jotblocks
                          dynamicDocumentVersion:
                            type: string
                            description: >-
                              Parse the Document using V2 or V3 syntax. Only
                              applicable if ParseDocument is set to true
                            enum:
                              - V2
                  name:
                    type: string
                    description: Specifies a name for the document.
                  orderID:
                    type: string
                    description: >-
                      Optionally specifies an order ID or order number to help
                      identify the document.
            emailNotifications:
              type: array
              description: >-
                Provides a list of email notifications that will be sent
                throughout the envelope life-cycle.
              items:
                type: object
                format: ''
                properties:
                  body:
                    type: string
                    description: >-
                      Specifies the body of the email notification. Note:
                      content may include merge fields.
                  name:
                    type: string
                    description: Specifies the name of the email notification.
                  recipients:
                    type: array
                    description: >-
                      Provides a list of intended recipients for the email
                      notification. Specify a signer or recipient label to send
                      specific recipients. Specify 'Originator' to
                      send to the envelope originator. Specify
                      'All_Signers' to send to all signers on this
                      envelope. Specify 'All_Signers_In_Step' to send
                      to all signers that part of the current signing step.
                    items:
                      type: string
                      format: email
                  stage:
                    type: string
                    description: >-
                      Specifies the stage in the envelope signing process during
                      which the email notification will be sent.
                    enum:
                      - Envelope_Start
                      - Envelope_PreExpire
                      - Envelope_Expire
                      - Envelope_Complete
                      - Envelope_Cancel
                      - Envelope_Decline
                      - Signer_Feedback
                      - Signer_Auth_Failure
                      - Signer_Kba_Start
                      - Signer_Kba_Complete
                      - Step_Start
                      - Step_Complete
                      - On_Payment_Approved
                      - On_Payment_Declined
                      - On_Payment_Refunded
                      - On_Envelope_Landing_Visit
                  step:
                    type: integer
                    description: >-
                      Specifies the 0-based index of the signing step with which
                      the email notification is associated for email
                      notifications with a 'Stage' of
                      'StepStart' or 'StepComplete'.
                  subject:
                    type: string
                    description: >-
                      Specifies the subject of the email notification. Note:
                      content may include merge fields.
                  customMessage:
                    type: string
                    description: >-
                      Specifies a custom message to add at the end of the email
                      notification
                  preExpirationDays:
                    type: integer
                    description: >-
                      Specifies the amount of days to send a pre-expiration
                      notification. (only applicable to Pre-Expire)
            envelope:
              type: object
              description: Provides envelope metadata and defines envelope behaviors.
              properties:
                cultureType:
                  type: string
                  description: >-
                    Specifies the target culture for the signing session.
                    Possible values include 'en-US' (English - US),
                    'es-US' (Spanish - US), and 'fr-CA'
                    (French - Canada). Note that specifying a culture here will
                    control the language displayed to signers and the language
                    of default email and SMS notifications. It will not,
                    however, provide automatic translation of the contents of
                    the documents within the envelope or for any adhoc
                    notifications provided in the submission.
                declineBehaviorType:
                  type: string
                  description: >-
                    Specifies whether signers will be given the option to
                    decline signing for individual documents within the envelope
                    or just to decline the envelope as a whole.
                  enum:
                    - Decline_All
                    - Decline_Single
                downloadPassword:
                  type: string
                  description: >-
                    Specifies a password that users or notification recipients
                    will be prompted to enter in order to access downloads for
                    the envelope.
                expirationDate:
                  type: string
                  description: >-
                    Optionally specifies the date when the envelope will expire
                    if not completed. If an expiration date is not provided, the
                    expiration date will be automatically set based on the
                    expiration policy configured for the account.
                name:
                  type: string
                  description: Specifies the name of the envelope.
                orderID:
                  type: string
                  description: >-
                    Optionally specifies an order ID or order number to help
                    identify the document.
                signingDeviceEnabled:
                  type: boolean
                  description: >-
                    Specifies whether or not support for external signing
                    devices should be enabled for the envelope.
                viewBehaviorType:
                  type: string
                  description: >-
                    Specifies whether signers will be able to see all documents
                    within the envelope or just documents for which they are a
                    signing party.
                  enum:
                    - View_Signer_Only
                    - View_All
                workflowType:
                  type: string
                  description: >-
                    Specifies whether the workflow for the envelope will make
                    signing available to all signers at the same time or if
                    signing will be made available to signers one at a time.
                  enum:
                    - Sequential
                    - Parallel
                    - Custom
                allowInPersonSigning:
                  type: boolean
                  description: >-
                    Specifies whether or not in person signing should be enabled
                    for the envelope.
                redirectUrl:
                  type: string
                  description: >-
                    Optionally specifies a fully qualified domain name that
                    signers will be redirected to after signing when they have
                    no other documents in the envelope they can currently sign.
                    If a URL is specified here, it will supersede any other
                    redirect URLs specified elsewhere in the application (such
                    as a default account redirect URL)
                termsAndConditions:
                  type: object
                  description: >-
                    Specifies additional terms and conditions to be presented to
                    the signer. Your account must be configured to allow
                    customization of the standard terms and conditions.
                  properties:
                    additionalComplianceStatement:
                      type: string
                      description: >-
                        Optional information that will be appended to any
                        default system or account terms.
                    additionalAgreementStatement:
                      type: string
                      description: >-
                        Optional information that will be appended to any
                        default system or account agreement terms.
                    additionalExtendedDisclosures:
                      type: string
                      description: >-
                        Optional information that will be appended to any
                        default system or account disclosures terms.
            notificationRecipients:
              type: array
              description: Provides a list of additional recipients for notifications.
              items:
                type: object
                format: ''
                properties:
                  email:
                    type: string
                    format: email
                    description: Specifies the email address of the recipient.
                  label:
                    type: string
                    description: >-
                      Specifies a label for the recipient. This label can be
                      referenced when specifying recipients for an email
                      notification.
                  name:
                    type: string
                    description: Specifies the full name of the recipient.
            signers:
              type: array
              description: Provides a list of signers defined for the envelope.
              items:
                type: object
                format: ''
                properties:
                  email:
                    type: string
                    format: email
                    description: Specifies the email address for the signer.
                  label:
                    type: string
                    description: >-
                      Specifies a label for the signer. This label can be
                      referenced when specifying the signer for a field or when
                      specifying recipients for an email or SMS notification.
                  mobilePhone:
                    type: string
                    description: Specifies the mobile phone number for the signer.
                  name:
                    type: string
                    description: Specifies the full name for the signer.
                  password:
                    type: string
                    description: >-
                      Specifies a password for the signer that will need to be
                      provided in order to access signing or envelope downloads.
                  passwordPrompt:
                    type: string
                    description: >-
                      Specifies the prompt that will be presented to the signer
                      indicating what to enter as a password. For example:
                      'For security purposes, please enter the last 4
                      digits of your account number.'
                  signatureStyle:
                    type: string
                    description: >-
                      Specifies the style of signature the signer will adopt for
                      fields with a 'FieldType' of
                      'Signature'.
                    enum:
                      - Selectable
                      - Drawn
                      - Typed
                      - Classic
                  smsAuthPhone:
                    type: string
                    description: >-
                      Specifies the phone number that SMS Two-Factor
                      authentication should use to authenticate the signer for
                      signing or envelope downloads.
                  enableKba:
                    type: boolean
                    description: 'When set to true, KBA property must be populated'
                  kba:
                    type: object
                    description: >-
                      Specifies Knowledge-Based Authentication details used when
                      EnableKba is set to true
                    properties:
                      firstName:
                        type: string
                        description: >-
                          Specifies the first name used for KBA. 40 character
                          limit
                      lastName:
                        type: string
                        description: >-
                          Specifies the last name used for KBA. 40 character
                          limit
                      address:
                        type: string
                        description: Specifies the address used for KBA. 40 character limit
                      city:
                        type: string
                        description: Specifies the city used for KBA. 40 character limit
                      state:
                        type: string
                        description: >-
                          Specifies the state used for KBA. Must be in State
                          abbreviation format
                      zip:
                        type: string
                        description: >-
                          Specifies the zip code used for KBA. 5 character
                          number format
                      ssn:
                        type: string
                        description: >-
                          Specifies the SSN used for KBA. 9 digit SSN (no
                          dashes) or last 4 digits
                      dobYear:
                        type: string
                        description: Specifies the year used for KBA. YYYY format
                      dobMonth:
                        type: string
                        description: Specifies the month used for KBA. M or MM format
                      dobDay:
                        type: string
                        description: Specifies the day used for KBA. D or DD format
            smsNotifications:
              type: array
              description: >-
                Provides a list of SMS notifications that will be sent
                throughout the envelope life-cycle.
              items:
                type: object
                format: ''
                properties:
                  body:
                    type: string
                    description: >-
                      Specifies the body of the SMS notification. Note: content
                      may include merge fields.
                  name:
                    type: string
                    description: Specifies the name of the SMS notification.
                  recipients:
                    type: array
                    description: >-
                      Provides a list of intended recipients for the email
                      notification. Specify a signer or recipient label to send
                      specific recipients. Specify 'Originator' to
                      send to the envelope originator. Specify
                      'All_Signers' to send to all signers on this
                      envelope. Specify 'All_Signers_In_Step' to send
                      to all signers that part of the current signing step.
                    items:
                      type: string
                      format: ''
                  stage:
                    type: string
                    description: >-
                      Specifies the stage in the envelope signing process during
                      which the email notification will be sent.
                    enum:
                      - Envelope_Start
                      - Envelope_PreExpire
                      - Envelope_Expire
                      - Envelope_Complete
                      - Envelope_Cancel
                      - Envelope_Decline
                      - Signer_Feedback
                      - Signer_Auth_Failure
                      - Signer_Kba_Start
                      - Signer_Kba_Complete
                      - Step_Start
                      - Step_Complete
                      - On_Payment_Approved
                      - On_Payment_Declined
                      - On_Payment_Refunded
                      - On_Envelope_Landing_Visit
                  step:
                    type: integer
                    description: >-
                      Specifies the 0-based index of the signing step with which
                      the email notification is associated for email
                      notifications with a 'Stage' of
                      'StepStart' or 'StepComplete'.
                  preExpirationDays:
                    type: integer
                    description: >-
                      Specifies the amount of days to send a pre-expiration
                      notification. (only applicable to Pre-Expire)
            steps:
              type: array
              description: >-
                Provides a list of workflow steps to be used when using a Custom
                envelope workflow type.
              items:
                type: object
                format: ''
                properties:
                  name:
                    type: string
                    description: Specifies the name of the workflow step.
                  signers:
                    type: array
                    description: >-
                      Specifies a list of signers that are included in the step.
                      Any fields defined in other steps will take precedence
                      over signers included in a step.
                    items:
                      type: string
                      format: ''
                  fields:
                    type: array
                    description: >-
                      Specifies a list of fields that are included in the step.
                      This will override fields included based on their signer
                      in other steps.
                    items:
                      type: string
                      format: ''
                  workflowStepDelay:
                    type: object
                    description: Specifies durations for the workflow step to be delayed.
                    properties:
                      days:
                        type: integer
                        description: The number of days the step will be delayed.
                      hours:
                        type: integer
                        description: The number of hours the step will be delayed.
            conditionalLogicItems:
              type: array
              description: >-
                Conditional logic allows you to create rules that test
                conditions during signing to change elements of the signing
                process.
              items:
                type: object
                format: ''
                properties:
                  andOrType:
                    type: string
                    description: ''
                    enum:
                      - And
                      - Or
                  conditions:
                    type: array
                    description: ''
                    items:
                      type: object
                      format: ''
                      properties:
                        objectEntityID:
                          type: string
                          description: ''
                        objectEntityType:
                          type: string
                          description: ''
                          enum:
                            - Field
                            - SignerAttachment
                            - SignerPayment
                        regex:
                          type: string
                          description: ''
                        compareType:
                          type: string
                          description: ''
                          enum:
                            - Anything
                            - EqualTo
                            - NotEqualTo
                            - GreaterThan
                            - LessThan
                            - Skipped
                            - Enabled
                            - Regex
                        conditionalValue:
                          type: string
                          description: ''
                        isCaseSensitive:
                          type: string
                          description: ''
                        trim:
                          type: boolean
                          description: ''
                  actions:
                    type: array
                    description: ''
                    items:
                      type: object
                      format: ''
                      properties:
                        objectEntityID:
                          type: string
                          description: links action to field
                        objectEntityType:
                          type: string
                          description: ''
                          enum:
                            - Field
                            - SignerAttachment
                            - SignerPayment
                        requireSignerAttachment:
                          type: boolean
                          description: ''
                        isHidden:
                          type: boolean
                          description: ''
                        isShown:
                          type: boolean
                          description: ''
                        isRequired:
                          type: boolean
                          description: ''
                        requirePayment:
                          type: boolean
                          description: ''
            webHookNotifications:
              type: array
              description: Provides a list of webhooks in a given stage
              items:
                type: object
                format: ''
                properties:
                  designName:
                    type: string
                    description: Specifies the design name of the webhook.
                  timing:
                    type: string
                    description: >-
                      Specifies the stage in the envelope signing process during
                      which the webhook will be executed.
                    enum:
                      - Envelope_Start
                      - Envelope_PreExpire
                      - Envelope_Expire
                      - Envelope_Complete
                      - Envelope_Cancel
                      - Envelope_Decline
                      - Signer_Feedback
                      - Signer_Auth_Failure
                      - Signer_Kba_Start
                      - Signer_Kba_Complete
                      - Step_Start
                      - Step_Complete
                      - On_Payment_Approved
                      - On_Payment_Declined
                      - On_Payment_Refunded
                      - On_Envelope_Landing_Visit
                  step:
                    type: integer
                    description: >-
                      Specifies the 0-based index of the signing step with which
                      the webhook is associated (StepStart, StepComplete)
            documentTransmissions:
              type: array
              description: >-
                Provides a list of document transmissions to be executed at
                Envelope Complete
              items:
                type: object
                format: ''
                properties:
                  designName:
                    type: string
                    description: Specifies the design name of the Document Transmission.
    submissionSource:
      type: object
      properties: {}
    submissionV3_2:
      type: object
      properties:
        addendums:
          type: array
          description: >-
            Provides a list of non-signable addendums associated with the
            envelope.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/addendum'
        documents:
          type: array
          description: Provides a list of the documents included in the envelope.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/document'
        emailNotifications:
          type: array
          description: >-
            Provides a list of email notifications that will be sent throughout
            the envelope life-cycle.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/emailNotification'
        emailRecipients:
          type: array
          description: Provides a list of additional recipients for notifications.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/notificationRecipient'
        envelope:
          type: object
          description: Provides envelope metadata and defines envelope behaviors.
          $ref: '#/components/schemas/envelope'
        signers:
          type: array
          description: Provides a list of signers defined for the envelope.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/signerV3_2'
        smsNotifications:
          type: array
          description: >-
            Provides a list of SMS notifications that will be sent throughout
            the envelope life-cycle.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/smsNotificationSubmission'
    documentV3_2:
      type: object
      properties:
        attachments:
          type: array
          description: >-
            Provides a list of the signer attachments that will be collected and
            applied to the document.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/attachment'
        fields:
          type: array
          description: >-
            Provides a list of the fields (JotBlocks) that will be applied to
            the document.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/field'
        file:
          type: object
          description: Provides the file metadata and contents for the document.
          $ref: '#/components/schemas/apiFile'
        name:
          type: string
          description: Specifies a name for the document.
        orderId:
          type: string
          description: >-
            Optionally specifies an order ID or order number to help identify
            the document.
    emailNotificationV3_2:
      type: object
      properties:
        body:
          type: string
          description: >-
            Specifies the body of the email notification. Note: content may
            include merge fields.
        name:
          type: string
          description: Specifies the name of the email notification.
        recipients:
          type: array
          description: >-
            Provides a list of intended recipients for the email notification.
            Specify a signer or recipient label to send specific recipients.
            Specify 'Originator' to send to the envelope originator.
            Specific 'AllSigners' to send to all signers on this
            envelope. Specify 'SignersInStep' to send to all signers
            that part of the current signing step.
          items:
            type: string
            format: email
        stage:
          type: string
          description: >-
            Specifies the stage in the envelope signing process during which the
            email notification will be sent.
          enum:
            - EnvelopeStart
            - EnvelopePreExpire
            - EnvelopeExpire
            - EnvelopeComplete
            - EnvelopeCancel
            - EnvelopeDecline
            - SignerFeedback
            - SignerAuthFailure
            - SignerKbaStart
            - SignerKbaComplete
            - StepStart
            - StepComplete
            - OnPaymentApproved
            - OnPaymentDeclined
            - OnPaymentRefunded
        step:
          type: integer
          description: >-
            Specifies the 0-based index of the signing step with which the email
            notification is associated for email notifications with a
            'Stage' of 'StepStart' or
            'StepComplete'.
        subject:
          type: string
          description: >-
            Specifies the subject of the email notification. Note: content may
            include merge fields.
    envelopeV3_2:
      type: object
      properties:
        cultureType:
          type: string
          description: >-
            Specifies the target culture for the signing session. Possible
            values include 'en-US' (English - US), 'es-US'
            (Spanish - US), and 'fr-CA' (French - Canada). Note that
            specifying a culture here will control the language displayed to
            signers and the language of default email and SMS notifications. It
            will not, however, provide automatic translation of the contents of
            the documents within the envelope or for any adhoc notifications
            provided in the submission.
        declineBehaviorType:
          type: string
          description: >-
            Specifies whether signers will be given the option to decline
            signing for individual documents within the envelope or just to
            decline the envelope as a whole.
          enum:
            - DeclineAll
            - DeclineSingle
        downloadPassword:
          type: string
          description: >-
            Specifies a password that users or notification recipients will be
            prompted to enter in order to access downloads for the envelope.
        expirationDate:
          type: string
          description: >-
            Optionally specifies the date when the envelope will expire if not
            completed. If an expiration date is not provided, the expiration
            date will be automatically set based on the expiration policy
            configured for the account.
        name:
          type: string
          description: Specifies the name of the envelope.
        orderId:
          type: string
          description: >-
            Optionally specifies an order ID or order number to help identify
            the document.
        signingDeviceEnabled:
          type: boolean
          description: >-
            Specifies whether or not support for external signing devices should
            be enabled for the envelope.
        viewBehaviorType:
          type: string
          description: >-
            Specifies whether signers will be able to see all documents within
            the envelope or just documents for which they are a signing party.
          enum:
            - ViewSignatoryOnly
            - ViewAll
        workflowType:
          type: string
          description: >-
            Specifies whether the workflow for the envelope will make signing
            available to all signers at the same time or if signing will be made
            available to signers one at a time.
          enum:
            - Sequential
            - Parallel
            - Custom
    emailRecipientV3_2:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Specifies the email address of the recipient.
        label:
          type: string
          description: >-
            Specifies a label for the recipient. This label can be referenced
            when specifying recipients for an email notification.
        name:
          type: string
          description: Specifies the full name of the recipient.
    fieldV3_2:
      type: object
      properties:
        borderSides:
          type: integer
          description: >-
            Specifies the borders that should be drawn around the field (if any)
            as integer representation of a bitwise operator. For Example: None =
            0, Top = 1, Right = 2, Bottom = 4, Left = 8, All = 15
        certified:
          type: boolean
          description: >-
            Specifies whether or not printed metadata uniquely identifying the
            field should be rendered around it to visually distinguish it from
            other data on the containing page.
        fieldType:
          type: string
          description: >-
            Specifies the type of input required for the field:
            signature/initials or text.
          enum:
            - TYPED
            - SIGNATURE
        inputType:
          type: string
          description: >-
            Specifies the source of the input for the field. Possible values
            include 'Signer' and 'Fixed'.
          enum:
            - SIGNER
            - PARAMETER
            - FIXED
            - SIGNATORY
        instructions:
          type: string
          description: >-
            Specifies the instructions that will be presented to the signer when
            they are prompted to provide input for the field.
        name:
          type: string
          description: Specifies the name of the field.
        pageIndex:
          type: integer
          format: int32
          description: Specifies the 0-based index of the containing page.
        position:
          type: object
          description: >-
            Specifies the position of the field relative to the upper-left
            corner of the containing page. For example: a field with an 'X
            Coordinate' of '0.2' and a 'Y Coordinate'
            of '0.4' would be positioned with its upper left corner
            20% of the way across the page horizontally and 40% down the page
            vertically.
          $ref: '#/components/schemas/coordinate'
        required:
          type: boolean
          description: Specifies whether or not signer input is required for the field.
        signer:
          type: string
          description: >-
            Specifies the label identifying the intended signer for fields that
            require signer input (signature or text).
        size:
          type: object
          description: >-
            Specifies the size of the field relative to the size of the
            containing page. For example: a field with a 'Height' of
            '0.1' and a 'Width' of '0.3' would be
            sized 10% of total page height and 30% of total page width.
          $ref: '#/components/schemas/fieldSize'
        sourceGroup:
          type: string
          description: >-
            Optionally specifies a common identifier for a group of fields in an
            envelope that should share a value.
        fixedText:
          type: string
          description: >-
            Specifies the text contents for the field for fields with a
            'FieldType' of 'Typed' and an
            'InputType' of 'Fixed'. Note: content may
            include merge fields.
        timing:
          type: string
          description: >-
            Specifies the timing for when the contents of the field will be
            rendered to the containing document for fields with a
            'FieldType' of 'Typed' and an
            'InputType' of 'Fixed'.
          enum:
            - ON_DOCUMENT_START
            - ON_DOCUMENT_COMPLETE
        options:
          type: array
          description: >-
            Provides the list of options to present to the signer for fields
            with a 'FieldType' of 'Typed' and one of the
            'Multiple Choice' signatory input types.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/fieldOption'
        penColor:
          type: string
          description: >-
            Specifies the color of 'ink' used to render the signature
            for fields with a 'FieldType' of 'Signature'.
          enum:
            - BLACK
            - BLUE
        signatoryInputType:
          type: integer
          description: >-
            Specifies the type of input required from the signer for fields with
            a 'FieldType' of 'Typed'. Possible values
            include: Free_Text = 0, Prefill = 1, Multiple_Choice_Text = 2,
            Multiple_Choice_Graphic = 3, Timestamp = 4, Custom_Validation = 5,
            Multiple_Choice_Radio = 6, Multiple_Choice_Checkbox = 7
        signatureType:
          type: string
          description: >-
            Specifies the type of signature (initials or signature) the signer
            will be prompted to provide for fields with a 'FieldType'
            of 'Signature'.
          enum:
            - SIGNATURE
            - INITIALS
        signatureStyle:
          type: string
          description: >-
            Specifies the style of signature the signer will adopt for fields
            with a 'FieldType' of 'Signature'.
          enum:
            - SELECTABLE
            - DRAWN
            - TYPED
            - CLASSIC
        fontDecoration:
          type: integer
          description: >-
            Specifies the font styles that should be applied for fields with a
            'FieldType' of 'Typed' as an integer
            representation of a bitwise operator. For Example: Regular = 0, Bold
            = 1, Italic = 2, Underline = 4, Bold + Italic + Underline = 7
        fontName:
          type: string
          description: >-
            Specifies the name of the supported font that should be used to
            render the contents of the field for fields with a
            'FieldType' of 'Typed'.
          enum:
            - Arial
            - Bradley_Hand_ITC
            - Brush_Script_BT
            - Courier_New
            - Times_New_Roman
            - My_Handwriting
            - Otto
        fontSize:
          type: integer
          description: >-
            Specifies the size of the font that should be used to render the
            contents of the field for fields with a 'FieldType' of
            'Typed'. Possible values include: 6, 8, 10, 12, 14
        horizontalAlignment:
          type: string
          description: >-
            Specifies the horizontal alignment of the field contents for fields
            with a 'FieldType' of 'Typed'.
          enum:
            - LEFT
            - CENTER
            - RIGHT
        verticalAlignment:
          type: string
          description: >-
            Specifies the vertical alignment of the field contents for fields
            with a 'FieldType' of 'Typed'.
          enum:
            - TOP
            - MIDDLE
            - BOTTOM
        wordWrap:
          type: boolean
          description: >-
            Specifies whether or not the contents of the field should be
            automatically wrapped to a new line for fields with a
            'FieldType' of 'Typed'.
        formatterType:
          type: string
          description: >-
            Specifies the text mask to apply for fields with a
            'FieldType' of 'Typed'.
          enum:
            - ALPHANUMERIC
            - CREDITCARD
            - SSN
            - CUSTOM
        formatterCode:
          type: string
          description: >-
            Specifies the custom text mask to apply for fields with a
            'FieldType' of 'Typed' and a
            'FormatterType' of 'Fixed'.
    fieldOptionV3_2:
      type: object
      properties:
        graphicRenderType:
          type: integer
          description: >-
            Specifies how the option will be rendered to the document if
            selected. Possible values include: Empty = 0, Check = 1, X = 2,
            No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6
        selected:
          type: boolean
          description: Specifies whether or not the option will be selected by default.
        text:
          type: string
          description: >-
            Specifies the text for the option that will be presented to the
            signer.
        value:
          type: string
          description: >-
            Specifies the value of the option (may be different than the
            displayed text).
        position:
          type: object
          description: >-
            Specifies the position of the option relative to the upper-left
            corner of the containing page for radio button or checkbox options.
            For example: an option with an 'X Coordinate' of
            '0.2' and a 'Y Coordinate' of '0.4'
            would be positioned with its upper left corner 20% of the way across
            the page horizontally and 40% down the page vertically.
          $ref: '#/components/schemas/coordinate'
        pageIndex:
          type: integer
          format: int32
          description: Specifies the 0-based index of the containing page.
        size:
          type: object
          description: >-
            Specifies the size of the option relative to the size of the
            containing page for radio button or checkbox options. For example:
            an option with a 'Height' of '0.1' and a
            'Width' of '0.3' would be sized 10% of total
            page height and 30% of total page width.
          $ref: '#/components/schemas/fieldSize'
    signerV3_2:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Specifies the email address for the signer.
        label:
          type: string
          description: >-
            Specifies a label for the signer. This label can be referenced when
            specifying the signer for a field or when specifying recipients for
            an email or SMS notification.
        mobilePhone:
          type: string
          description: Specifies the mobile phone number for the signer.
        name:
          type: string
          description: Specifies the full name for the signer.
        password:
          type: string
          description: >-
            Specifies a password for the signer that will need to be provided in
            order to access signing or envelope downloads.
        passwordPrompt:
          type: string
          description: >-
            Specifies the prompt that will be presented to the signer indicating
            what to enter as a password. For example: 'For security
            purposes, please enter the last 4 digits of your account
            number.'
        signatureStyle:
          type: string
          description: >-
            Specifies the style of signature the signer will adopt for fields
            with a 'FieldType' of 'Signature'.
          enum:
            - SELECTABLE
            - DRAWN
            - TYPED
            - CLASSIC
    smsNotificationSubmissionV3_2:
      type: object
      properties:
        body:
          type: string
          description: >-
            Specifies the body of the SMS notification. Note: content may
            include merge fields.
        name:
          type: string
          description: Specifies the name of the SMS notification.
        recipients:
          type: array
          description: >-
            Provides a list of intended recipients for the email notification.
            Specify a signer or recipient label to send specific recipients.
            Specify 'Originator' to send to the envelope originator.
            Specific 'AllSigners' to send to all signers on this
            envelope. Specify 'SignersInStep' to send to all signers
            that part of the current signing step.
          items:
            type: string
            format: ''
        stage:
          type: string
          description: >-
            Specifies the stage in the envelope signing process during which the
            email notification will be sent.
          enum:
            - EnvelopeStart
            - EnvelopePreExpire
            - EnvelopeExpire
            - EnvelopeComplete
            - EnvelopeCancel
            - EnvelopeDecline
            - SignerFeedback
            - SignerAuthFailure
            - SignerKbaStart
            - SignerKbaComplete
            - StepStart
            - StepComplete
            - OnPaymentApproved
            - OnPaymentDeclined
            - OnPaymentRefunded
        step:
          type: integer
          description: >-
            Specifies the 0-based index of the signing step with which the email
            notification is associated for email notifications with a
            'Stage' of 'StepStart' or
            'StepComplete'.
    submission:
      type: object
      properties:
        addendums:
          type: array
          description: >-
            Provides a list of non-signable addendums associated with the
            envelope.
          items:
            type: object
            format: ''
            properties:
              file:
                type: object
                description: Provides the file metadata and contents for the addendum.
                properties:
                  saved:
                    type: object
                    description: Specifies the metadata for a previously uploaded file.
                    properties:
                      fileName:
                        type: string
                        description: >-
                          Specifies the full file name and extension for this
                          previously uploaded file. Note that the filename
                          should not contain any spaces or special characters.
                      location:
                        type: string
                        description: >-
                          Specifies the storage location of this previously
                          uploaded file.
                      pages:
                        type: array
                        description: >-
                          Provides a list of the page images rendered for this
                          previously uploaded file.
                        items:
                          type: object
                          format: ''
                          properties:
                            width:
                              type: string
                              description: Specifies the width (in pixels) of a page image.
                            height:
                              type: string
                              description: >-
                                Specifies the height (in pixels) of a page
                                image.
                  fileToUpload:
                    type: object
                    description: >-
                      Specifies the file metadata and file contents for a new
                      file upload.
                    properties:
                      data:
                        type: string
                        description: >-
                          Specifies the actual file data a Base64-encoded
                          string.
                      fileName:
                        type: string
                        description: >-
                          Specifies the full file name and extension. Example:
                          Policy.pdf
                      parseDocument:
                        type: boolean
                        description: Parse this document for dynamic jotblocks
                      dynamicDocumentVersion:
                        type: string
                        description: >-
                          Parse the Document using V2 or V3 syntax. Only
                          applicable if ParseDocument is set to true
                        enum:
                          - V2
              name:
                type: string
                description: Specifies the name of the addendum.
        documents:
          type: array
          description: Provides a list of the documents included in the envelope.
          items:
            type: object
            format: ''
            properties:
              attachments:
                type: array
                description: >-
                  Provides a list of the signer attachments that will be
                  collected and applied to the document.
                items:
                  type: object
                  format: ''
                  properties:
                    allowMultipleUploads:
                      type: boolean
                      description: >-
                        Specifies whether or not signers will be allowed to
                        upload more than one file for the requested attachment.
                    instructions:
                      type: string
                      description: >-
                        Specifies the instructions that will be presented to the
                        signer when they are prompted to upload the attachment
                        during signing.
                    label:
                      type: string
                      description: Specifies a label for the signer attachment.
                    required:
                      type: boolean
                      description: >-
                        Specifies whether or not signers will be required to
                        upload a file for the requested attachment.
                    signer:
                      type: string
                      description: >-
                        Specifies the 'Label' of the signer that will
                        be prompted to upload the attachement.
              fields:
                type: array
                description: >-
                  Provides a list of the fields (JotBlocks) that will be applied
                  to the document.
                items:
                  type: object
                  format: ''
                  properties:
                    borderSides:
                      type: object
                      description: >-
                        Specifies the borders that should be drawn around the
                        field (if any).
                      properties:
                        bottom:
                          type: boolean
                          description: >-
                            Specifies whether or not a border should be rendered
                            on the bottom of the field.
                        left:
                          type: boolean
                          description: >-
                            Specifies whether or not a border should be rendered
                            on the left side of the field.
                        right:
                          type: boolean
                          description: >-
                            Specifies whether or not a border should be rendered
                            on the right side of the field.
                        top:
                          type: boolean
                          description: >-
                            Specifies whether or not a border should be rendered
                            on the top of the field.
                    certified:
                      type: boolean
                      description: >-
                        Specifies whether or not printed metadata uniquely
                        identifying the field should be rendered around it to
                        visually distinguish it from other data on the
                        containing page.
                    fieldType:
                      type: string
                      description: >-
                        Specifies the type of input required for the field:
                        signature/initials or text.
                      enum:
                        - Typed
                        - Signature
                    inputType:
                      type: string
                      description: >-
                        Specifies the source of the input for the field.
                        Possible values include 'Signer' and
                        'Fixed'.
                      enum:
                        - Signer
                        - Fixed
                        - Signatory
                    instructions:
                      type: string
                      description: >-
                        Specifies the instructions that will be presented to the
                        signer when they are prompted to provide input for the
                        field.
                    name:
                      type: string
                      description: Specifies the name of the field.
                    pageIndex:
                      type: integer
                      format: int32
                      description: Specifies the 0-based index of the containing page.
                    position:
                      type: object
                      description: >-
                        Specifies the position of the field relative to the
                        upper-left corner of the containing page. For example: a
                        field with an 'X Coordinate' of
                        '0.2' and a 'Y Coordinate' of
                        '0.4' would be positioned with its upper left
                        corner 20% of the way across the page horizontally and
                        40% down the page vertically.
                      properties:
                        x:
                          type: number
                          format: float
                          description: >-
                            Specifies the horizontal position of the field or
                            option relative to the left side of the containing
                            page. For example: a field with an 'X
                            Coordinate' of '0.2' would be
                            positioned with its left side 20% of the way across
                            the page horizontally.
                        'y':
                          type: number
                          format: float
                          description: >-
                            Specifies the vertical position of the field or
                            option relative to the top of the containing page.
                            For example: a field with a 'Y Coordinate'
                            of '0.4' would be positioned with its top
                            40% of the way down the page vertically.
                    required:
                      type: boolean
                      description: >-
                        Specifies whether or not signer input is required for
                        the field.
                    hidden:
                      type: boolean
                      description: Specifies whether or not the field is hidden.
                    signer:
                      type: string
                      description: >-
                        Specifies the label identifying the intended signer for
                        fields that require signer input (signature or text).
                    size:
                      type: object
                      description: >-
                        Specifies the size of the field relative to the size of
                        the containing page. For example: a field with a
                        'Height' of '0.1' and a
                        'Width' of '0.3' would be sized 10%
                        of total page height and 30% of total page width.
                      properties:
                        height:
                          type: number
                          format: float
                          description: >-
                            Specifies the height of the field or option relative
                            to the height of the containing page. For example: a
                            field with a 'Height' of '0.1'
                            would be sized 10% of total page height.
                        width:
                          type: number
                          format: float
                          description: >-
                            Specifies the width of the field or option relative
                            to the width of the containing page. For example: a
                            field with a 'Width' of '0.3'
                            would be sized 30% of total page width.
                    sourceGroup:
                      type: string
                      description: >-
                        Optionally specifies a common identifier for a group of
                        fields in an envelope that should share a value.
                    tag:
                      type: string
                      description: >-
                        A generic holder of any information you would like to
                        provide
                    fixedText:
                      type: string
                      description: >-
                        Specifies the text contents for the field for fields
                        with a 'FieldType' of 'Typed' and an
                        'InputType' of 'Fixed'. Note:
                        content may include merge fields.
                    timing:
                      type: string
                      description: >-
                        Specifies the timing for when the contents of the field
                        will be rendered to the containing document for fields
                        with a 'FieldType' of 'Typed' and an
                        'InputType' of 'Fixed'.
                      enum:
                        - On_Document_Start
                        - On_Document_Complete
                    options:
                      type: array
                      description: >-
                        Provides the list of options to present to the signer
                        for fields with a 'FieldType' of
                        'Typed' and one of the 'Multiple
                        Choice' signatory input types.
                      items:
                        type: object
                        format: ''
                        properties:
                          graphicRenderType:
                            type: string
                            description: >-
                              Specifies how the option will be rendered to the
                              document if selected. Possible values include:
                              Empty = 0, Check = 1, X = 2, No_Box_Empty = 3,
                              No_Box_Check = 4, No_Box_X = 5, Text = 6
                            enum:
                              - Empty
                              - Check
                              - X
                              - No_Box_Empty
                              - No_Box_Check
                              - No_Box_X
                              - Text
                              - None
                          selected:
                            type: boolean
                            description: >-
                              Specifies whether or not the option will be
                              selected by default.
                          text:
                            type: string
                            description: >-
                              Specifies the text for the option that will be
                              presented to the signer.
                          value:
                            type: string
                            description: >-
                              Specifies the value of the option (may be
                              different than the displayed text).
                          pageIndex:
                            type: integer
                            format: int32
                            description: >-
                              Specifies the 0-based index of the containing
                              page.
                          position:
                            type: object
                            description: >-
                              Specifies the position of the option relative to
                              the upper-left corner of the containing page for
                              radio button or checkbox options. For example: an
                              option with an 'X Coordinate' of
                              '0.2' and a 'Y Coordinate' of
                              '0.4' would be positioned with its upper
                              left corner 20% of the way across the page
                              horizontally and 40% down the page vertically.
                            properties:
                              x:
                                type: number
                                format: float
                                description: >-
                                  Specifies the horizontal position of the field
                                  or option relative to the left side of the
                                  containing page. For example: a field with an
                                  'X Coordinate' of '0.2'
                                  would be positioned with its left side 20% of
                                  the way across the page horizontally.
                              'y':
                                type: number
                                format: float
                                description: >-
                                  Specifies the vertical position of the field
                                  or option relative to the top of the
                                  containing page. For example: a field with a
                                  'Y Coordinate' of '0.4'
                                  would be positioned with its top 40% of the
                                  way down the page vertically.
                          size:
                            type: object
                            description: >-
                              Specifies the size of the option relative to the
                              size of the containing page for radio button or
                              checkbox options. For example: an option with a
                              'Height' of '0.1' and a
                              'Width' of '0.3' would be
                              sized 10% of total page height and 30% of total
                              page width.
                            properties:
                              height:
                                type: number
                                format: float
                                description: >-
                                  Specifies the height of the field or option
                                  relative to the height of the containing page.
                                  For example: a field with a 'Height'
                                  of '0.1' would be sized 10% of total
                                  page height.
                              width:
                                type: number
                                format: float
                                description: >-
                                  Specifies the width of the field or option
                                  relative to the width of the containing page.
                                  For example: a field with a 'Width'
                                  of '0.3' would be sized 30% of total
                                  page width.
                    multipleChoiceDefaultValues:
                      type: array
                      description: >-
                        Specify list of values that will be automatically
                        selected upon signing.
                      items:
                        type: string
                        format: ''
                    penColor:
                      type: string
                      description: >-
                        Specifies the color of 'ink' used to render
                        the signature for fields with a 'FieldType' of
                        'Signature'.
                      enum:
                        - Black
                        - Blue
                    signatureType:
                      type: string
                      description: >-
                        Specifies the type of signature (initials or signature)
                        the signer will be prompted to provide for fields with a
                        'FieldType' of 'Signature'.
                      enum:
                        - Signature
                        - Initials
                    signatureStyle:
                      type: string
                      description: >-
                        Specifies the style of signature the signer will adopt
                        for fields with a 'FieldType' of
                        'Signature'.
                      enum:
                        - Selectable
                        - Drawn
                        - Typed
                        - Classic
                    fontDecoration:
                      type: object
                      description: >-
                        Specifies the font styles that should be applied for
                        fields with a 'FieldType' of
                        'Typed'.
                      properties:
                        bold:
                          type: boolean
                          description: >-
                            Specifies whether or not text content for the field
                            will be rendered in Bold.
                        italic:
                          type: boolean
                          description: >-
                            Specifies whether or not text content for the field
                            will be rendered in Italics.
                        underline:
                          type: boolean
                          description: >-
                            Specifies whether or not text content for the field
                            will be underlined.
                    fontName:
                      type: string
                      description: >-
                        Specifies the name of the supported font that should be
                        used to render the contents of the field for fields with
                        a 'FieldType' of 'Typed'.
                      enum:
                        - Arial
                        - Bradley_Hand_ITC
                        - Brush_Script_BT
                        - Courier_New
                        - Times_New_Roman
                        - My_Handwriting
                        - Otto
                    fontSize:
                      type: integer
                      description: >-
                        Specifies the size of the font that should be used to
                        render the contents of the field for fields with a
                        'FieldType' of 'Typed'. Possible
                        values include: 6, 8, 10, 12, 14
                    horizontalAlignment:
                      type: string
                      description: >-
                        Specifies the horizontal alignment of the field contents
                        for fields with a 'FieldType' of
                        'Typed'.
                      enum:
                        - Left
                        - Center
                        - Right
                    signerInputType:
                      type: string
                      description: >-
                        Specifies the type of input required from the signer for
                        fields with a 'FieldType' of
                        'Typed'.
                      enum:
                        - Free_Text
                        - Prefill
                        - Multiple_Choice_Text
                        - Multiple_Choice_Graphic
                        - Timestamp
                        - Custom_Validation
                        - Multiple_Choice_Radio
                        - Multiple_Choice_Checkbox
                        - Undefined
                    verticalAlignment:
                      type: string
                      description: >-
                        Specifies the vertical alignment of the field contents
                        for fields with a 'FieldType' of
                        'Typed'.
                      enum:
                        - Top
                        - Middle
                        - Bottom
                    wordWrap:
                      type: boolean
                      description: >-
                        Specifies whether or not the contents of the field
                        should be automatically wrapped to a new line for fields
                        with a 'FieldType' of 'Typed'.
                    formatterType:
                      type: string
                      description: >-
                        Specifies the text mask to apply for fields with a
                        'FieldType' of 'Typed'.
                      enum:
                        - ALPHANUMERIC
                        - CREDITCARD
                        - SSN
                        - CUSTOM
                    formatterCode:
                      type: string
                      description: >-
                        Specifies the custom text mask to apply for fields with
                        a 'FieldType' of 'Typed' and a
                        'FormatterType' of 'Fixed'.
              file:
                type: object
                description: Provides the file metadata and contents for the document.
                properties:
                  saved:
                    type: object
                    description: Specifies the metadata for a previously uploaded file.
                    properties:
                      fileName:
                        type: string
                        description: >-
                          Specifies the full file name and extension for this
                          previously uploaded file. Note that the filename
                          should not contain any spaces or special characters.
                      location:
                        type: string
                        description: >-
                          Specifies the storage location of this previously
                          uploaded file.
                      pages:
                        type: array
                        description: >-
                          Provides a list of the page images rendered for this
                          previously uploaded file.
                        items:
                          type: object
                          format: ''
                          properties:
                            width:
                              type: string
                              description: Specifies the width (in pixels) of a page image.
                            height:
                              type: string
                              description: >-
                                Specifies the height (in pixels) of a page
                                image.
                  fileToUpload:
                    type: object
                    description: >-
                      Specifies the file metadata and file contents for a new
                      file upload.
                    properties:
                      data:
                        type: string
                        description: >-
                          Specifies the actual file data a Base64-encoded
                          string.
                      fileName:
                        type: string
                        description: >-
                          Specifies the full file name and extension. Example:
                          Policy.pdf
                      parseDocument:
                        type: boolean
                        description: Parse this document for dynamic jotblocks
                      dynamicDocumentVersion:
                        type: string
                        description: >-
                          Parse the Document using V2 or V3 syntax. Only
                          applicable if ParseDocument is set to true
                        enum:
                          - V2
              name:
                type: string
                description: Specifies a name for the document.
              orderID:
                type: string
                description: >-
                  Optionally specifies an order ID or order number to help
                  identify the document.
        emailNotifications:
          type: array
          description: >-
            Provides a list of email notifications that will be sent throughout
            the envelope life-cycle.
          items:
            type: object
            format: ''
            properties:
              body:
                type: string
                description: >-
                  Specifies the body of the email notification. Note: content
                  may include merge fields.
              name:
                type: string
                description: Specifies the name of the email notification.
              recipients:
                type: array
                description: >-
                  Provides a list of intended recipients for the email
                  notification. Specify a signer or recipient label to send
                  specific recipients. Specify 'Originator' to send to
                  the envelope originator. Specify 'All_Signers' to
                  send to all signers on this envelope. Specify
                  'All_Signers_In_Step' to send to all signers that
                  part of the current signing step.
                items:
                  type: string
                  format: email
              stage:
                type: string
                description: >-
                  Specifies the stage in the envelope signing process during
                  which the email notification will be sent.
                enum:
                  - Envelope_Start
                  - Envelope_PreExpire
                  - Envelope_Expire
                  - Envelope_Complete
                  - Envelope_Cancel
                  - Envelope_Decline
                  - Signer_Feedback
                  - Signer_Auth_Failure
                  - Signer_Kba_Start
                  - Signer_Kba_Complete
                  - Step_Start
                  - Step_Complete
                  - On_Payment_Approved
                  - On_Payment_Declined
                  - On_Payment_Refunded
                  - On_Envelope_Landing_Visit
              step:
                type: integer
                description: >-
                  Specifies the 0-based index of the signing step with which the
                  email notification is associated for email notifications with
                  a 'Stage' of 'StepStart' or
                  'StepComplete'.
              subject:
                type: string
                description: >-
                  Specifies the subject of the email notification. Note: content
                  may include merge fields.
              customMessage:
                type: string
                description: >-
                  Specifies a custom message to add at the end of the email
                  notification
              preExpirationDays:
                type: integer
                description: >-
                  Specifies the amount of days to send a pre-expiration
                  notification. (only applicable to Pre-Expire)
        envelope:
          type: object
          description: Provides envelope metadata and defines envelope behaviors.
          properties:
            cultureType:
              type: string
              description: >-
                Specifies the target culture for the signing session. Possible
                values include 'en-US' (English - US),
                'es-US' (Spanish - US), and 'fr-CA' (French
                - Canada). Note that specifying a culture here will control the
                language displayed to signers and the language of default email
                and SMS notifications. It will not, however, provide automatic
                translation of the contents of the documents within the envelope
                or for any adhoc notifications provided in the submission.
            declineBehaviorType:
              type: string
              description: >-
                Specifies whether signers will be given the option to decline
                signing for individual documents within the envelope or just to
                decline the envelope as a whole.
              enum:
                - Decline_All
                - Decline_Single
            downloadPassword:
              type: string
              description: >-
                Specifies a password that users or notification recipients will
                be prompted to enter in order to access downloads for the
                envelope.
            expirationDate:
              type: string
              description: >-
                Optionally specifies the date when the envelope will expire if
                not completed. If an expiration date is not provided, the
                expiration date will be automatically set based on the
                expiration policy configured for the account.
            name:
              type: string
              description: Specifies the name of the envelope.
            orderID:
              type: string
              description: >-
                Optionally specifies an order ID or order number to help
                identify the document.
            signingDeviceEnabled:
              type: boolean
              description: >-
                Specifies whether or not support for external signing devices
                should be enabled for the envelope.
            viewBehaviorType:
              type: string
              description: >-
                Specifies whether signers will be able to see all documents
                within the envelope or just documents for which they are a
                signing party.
              enum:
                - View_Signer_Only
                - View_All
            workflowType:
              type: string
              description: >-
                Specifies whether the workflow for the envelope will make
                signing available to all signers at the same time or if signing
                will be made available to signers one at a time.
              enum:
                - Sequential
                - Parallel
                - Custom
            allowInPersonSigning:
              type: boolean
              description: >-
                Specifies whether or not in person signing should be enabled for
                the envelope.
            redirectUrl:
              type: string
              description: >-
                Optionally specifies a fully qualified domain name that signers
                will be redirected to after signing when they have no other
                documents in the envelope they can currently sign. If a URL is
                specified here, it will supersede any other redirect URLs
                specified elsewhere in the application (such as a default
                account redirect URL)
            termsAndConditions:
              type: object
              description: >-
                Specifies additional terms and conditions to be presented to the
                signer. Your account must be configured to allow customization
                of the standard terms and conditions.
              properties:
                additionalComplianceStatement:
                  type: string
                  description: >-
                    Optional information that will be appended to any default
                    system or account terms.
                additionalAgreementStatement:
                  type: string
                  description: >-
                    Optional information that will be appended to any default
                    system or account agreement terms.
                additionalExtendedDisclosures:
                  type: string
                  description: >-
                    Optional information that will be appended to any default
                    system or account disclosures terms.
        notificationRecipients:
          type: array
          description: Provides a list of additional recipients for notifications.
          items:
            type: object
            format: ''
            properties:
              email:
                type: string
                format: email
                description: Specifies the email address of the recipient.
              label:
                type: string
                description: >-
                  Specifies a label for the recipient. This label can be
                  referenced when specifying recipients for an email
                  notification.
              name:
                type: string
                description: Specifies the full name of the recipient.
        signers:
          type: array
          description: Provides a list of signers defined for the envelope.
          items:
            type: object
            format: ''
            properties:
              email:
                type: string
                format: email
                description: Specifies the email address for the signer.
              label:
                type: string
                description: >-
                  Specifies a label for the signer. This label can be referenced
                  when specifying the signer for a field or when specifying
                  recipients for an email or SMS notification.
              mobilePhone:
                type: string
                description: Specifies the mobile phone number for the signer.
              name:
                type: string
                description: Specifies the full name for the signer.
              password:
                type: string
                description: >-
                  Specifies a password for the signer that will need to be
                  provided in order to access signing or envelope downloads.
              passwordPrompt:
                type: string
                description: >-
                  Specifies the prompt that will be presented to the signer
                  indicating what to enter as a password. For example: 'For
                  security purposes, please enter the last 4 digits of your
                  account number.'
              signatureStyle:
                type: string
                description: >-
                  Specifies the style of signature the signer will adopt for
                  fields with a 'FieldType' of 'Signature'.
                enum:
                  - Selectable
                  - Drawn
                  - Typed
                  - Classic
              smsAuthPhone:
                type: string
                description: >-
                  Specifies the phone number that SMS Two-Factor authentication
                  should use to authenticate the signer for signing or envelope
                  downloads.
              enableKba:
                type: boolean
                description: 'When set to true, KBA property must be populated'
              kba:
                type: object
                description: >-
                  Specifies Knowledge-Based Authentication details used when
                  EnableKba is set to true
                properties:
                  firstName:
                    type: string
                    description: Specifies the first name used for KBA. 40 character limit
                  lastName:
                    type: string
                    description: Specifies the last name used for KBA. 40 character limit
                  address:
                    type: string
                    description: Specifies the address used for KBA. 40 character limit
                  city:
                    type: string
                    description: Specifies the city used for KBA. 40 character limit
                  state:
                    type: string
                    description: >-
                      Specifies the state used for KBA. Must be in State
                      abbreviation format
                  zip:
                    type: string
                    description: >-
                      Specifies the zip code used for KBA. 5 character number
                      format
                  ssn:
                    type: string
                    description: >-
                      Specifies the SSN used for KBA. 9 digit SSN (no dashes) or
                      last 4 digits
                  dobYear:
                    type: string
                    description: Specifies the year used for KBA. YYYY format
                  dobMonth:
                    type: string
                    description: Specifies the month used for KBA. M or MM format
                  dobDay:
                    type: string
                    description: Specifies the day used for KBA. D or DD format
        smsNotifications:
          type: array
          description: >-
            Provides a list of SMS notifications that will be sent throughout
            the envelope life-cycle.
          items:
            type: object
            format: ''
            properties:
              body:
                type: string
                description: >-
                  Specifies the body of the SMS notification. Note: content may
                  include merge fields.
              name:
                type: string
                description: Specifies the name of the SMS notification.
              recipients:
                type: array
                description: >-
                  Provides a list of intended recipients for the email
                  notification. Specify a signer or recipient label to send
                  specific recipients. Specify 'Originator' to send to
                  the envelope originator. Specify 'All_Signers' to
                  send to all signers on this envelope. Specify
                  'All_Signers_In_Step' to send to all signers that
                  part of the current signing step.
                items:
                  type: string
                  format: ''
              stage:
                type: string
                description: >-
                  Specifies the stage in the envelope signing process during
                  which the email notification will be sent.
                enum:
                  - Envelope_Start
                  - Envelope_PreExpire
                  - Envelope_Expire
                  - Envelope_Complete
                  - Envelope_Cancel
                  - Envelope_Decline
                  - Signer_Feedback
                  - Signer_Auth_Failure
                  - Signer_Kba_Start
                  - Signer_Kba_Complete
                  - Step_Start
                  - Step_Complete
                  - On_Payment_Approved
                  - On_Payment_Declined
                  - On_Payment_Refunded
                  - On_Envelope_Landing_Visit
              step:
                type: integer
                description: >-
                  Specifies the 0-based index of the signing step with which the
                  email notification is associated for email notifications with
                  a 'Stage' of 'StepStart' or
                  'StepComplete'.
              preExpirationDays:
                type: integer
                description: >-
                  Specifies the amount of days to send a pre-expiration
                  notification. (only applicable to Pre-Expire)
        steps:
          type: array
          description: >-
            Provides a list of workflow steps to be used when using a Custom
            envelope workflow type.
          items:
            type: object
            format: ''
            properties:
              name:
                type: string
                description: Specifies the name of the workflow step.
              signers:
                type: array
                description: >-
                  Specifies a list of signers that are included in the step. Any
                  fields defined in other steps will take precedence over
                  signers included in a step.
                items:
                  type: string
                  format: ''
              fields:
                type: array
                description: >-
                  Specifies a list of fields that are included in the step. This
                  will override fields included based on their signer in other
                  steps.
                items:
                  type: string
                  format: ''
              workflowStepDelay:
                type: object
                description: Specifies durations for the workflow step to be delayed.
                properties:
                  days:
                    type: integer
                    description: The number of days the step will be delayed.
                  hours:
                    type: integer
                    description: The number of hours the step will be delayed.
        conditionalLogicItems:
          type: array
          description: >-
            Conditional logic allows you to create rules that test conditions
            during signing to change elements of the signing process.
          items:
            type: object
            format: ''
            properties:
              andOrType:
                type: string
                description: ''
                enum:
                  - And
                  - Or
              conditions:
                type: array
                description: ''
                items:
                  type: object
                  format: ''
                  properties:
                    objectEntityID:
                      type: string
                      description: ''
                    objectEntityType:
                      type: string
                      description: ''
                      enum:
                        - Field
                        - SignerAttachment
                        - SignerPayment
                    regex:
                      type: string
                      description: ''
                    compareType:
                      type: string
                      description: ''
                      enum:
                        - Anything
                        - EqualTo
                        - NotEqualTo
                        - GreaterThan
                        - LessThan
                        - Skipped
                        - Enabled
                        - Regex
                    conditionalValue:
                      type: string
                      description: ''
                    isCaseSensitive:
                      type: string
                      description: ''
                    trim:
                      type: boolean
                      description: ''
              actions:
                type: array
                description: ''
                items:
                  type: object
                  format: ''
                  properties:
                    objectEntityID:
                      type: string
                      description: links action to field
                    objectEntityType:
                      type: string
                      description: ''
                      enum:
                        - Field
                        - SignerAttachment
                        - SignerPayment
                    requireSignerAttachment:
                      type: boolean
                      description: ''
                    isHidden:
                      type: boolean
                      description: ''
                    isShown:
                      type: boolean
                      description: ''
                    isRequired:
                      type: boolean
                      description: ''
                    requirePayment:
                      type: boolean
                      description: ''
        webHookNotifications:
          type: array
          description: Provides a list of webhooks in a given stage
          items:
            type: object
            format: ''
            properties:
              designName:
                type: string
                description: Specifies the design name of the webhook.
              timing:
                type: string
                description: >-
                  Specifies the stage in the envelope signing process during
                  which the webhook will be executed.
                enum:
                  - Envelope_Start
                  - Envelope_PreExpire
                  - Envelope_Expire
                  - Envelope_Complete
                  - Envelope_Cancel
                  - Envelope_Decline
                  - Signer_Feedback
                  - Signer_Auth_Failure
                  - Signer_Kba_Start
                  - Signer_Kba_Complete
                  - Step_Start
                  - Step_Complete
                  - On_Payment_Approved
                  - On_Payment_Declined
                  - On_Payment_Refunded
                  - On_Envelope_Landing_Visit
              step:
                type: integer
                description: >-
                  Specifies the 0-based index of the signing step with which the
                  webhook is associated (StepStart, StepComplete)
        documentTransmissions:
          type: array
          description: >-
            Provides a list of document transmissions to be executed at Envelope
            Complete
          items:
            type: object
            format: ''
            properties:
              designName:
                type: string
                description: Specifies the design name of the Document Transmission.
    addendum:
      type: object
      properties:
        file:
          type: object
          description: Provides the file metadata and contents for the addendum.
          properties:
            saved:
              type: object
              description: Specifies the metadata for a previously uploaded file.
              properties:
                fileName:
                  type: string
                  description: >-
                    Specifies the full file name and extension for this
                    previously uploaded file. Note that the filename should not
                    contain any spaces or special characters.
                location:
                  type: string
                  description: >-
                    Specifies the storage location of this previously uploaded
                    file.
                pages:
                  type: array
                  description: >-
                    Provides a list of the page images rendered for this
                    previously uploaded file.
                  items:
                    type: object
                    format: ''
                    properties:
                      width:
                        type: string
                        description: Specifies the width (in pixels) of a page image.
                      height:
                        type: string
                        description: Specifies the height (in pixels) of a page image.
            fileToUpload:
              type: object
              description: >-
                Specifies the file metadata and file contents for a new file
                upload.
              properties:
                data:
                  type: string
                  description: Specifies the actual file data a Base64-encoded string.
                fileName:
                  type: string
                  description: >-
                    Specifies the full file name and extension. Example:
                    Policy.pdf
                parseDocument:
                  type: boolean
                  description: Parse this document for dynamic jotblocks
                dynamicDocumentVersion:
                  type: string
                  description: >-
                    Parse the Document using V2 or V3 syntax. Only applicable if
                    ParseDocument is set to true
                  enum:
                    - V2
        name:
          type: string
          description: Specifies the name of the addendum.
    attachment:
      type: object
      properties:
        allowMultipleUploads:
          type: boolean
          description: >-
            Specifies whether or not signers will be allowed to upload more than
            one file for the requested attachment.
        instructions:
          type: string
          description: >-
            Specifies the instructions that will be presented to the signer when
            they are prompted to upload the attachment during signing.
        label:
          type: string
          description: Specifies a label for the signer attachment.
        required:
          type: boolean
          description: >-
            Specifies whether or not signers will be required to upload a file
            for the requested attachment.
        signer:
          type: string
          description: >-
            Specifies the 'Label' of the signer that will be prompted
            to upload the attachement.
    coordinate:
      type: object
      properties:
        x:
          type: number
          format: float
          description: >-
            Specifies the horizontal position of the field or option relative to
            the left side of the containing page. For example: a field with an
            'X Coordinate' of '0.2' would be positioned with
            its left side 20% of the way across the page horizontally.
        'y':
          type: number
          format: float
          description: >-
            Specifies the vertical position of the field or option relative to
            the top of the containing page. For example: a field with a 'Y
            Coordinate' of '0.4' would be positioned with its top
            40% of the way down the page vertically.
    document:
      type: object
      properties:
        attachments:
          type: array
          description: >-
            Provides a list of the signer attachments that will be collected and
            applied to the document.
          items:
            type: object
            format: ''
            properties:
              allowMultipleUploads:
                type: boolean
                description: >-
                  Specifies whether or not signers will be allowed to upload
                  more than one file for the requested attachment.
              instructions:
                type: string
                description: >-
                  Specifies the instructions that will be presented to the
                  signer when they are prompted to upload the attachment during
                  signing.
              label:
                type: string
                description: Specifies a label for the signer attachment.
              required:
                type: boolean
                description: >-
                  Specifies whether or not signers will be required to upload a
                  file for the requested attachment.
              signer:
                type: string
                description: >-
                  Specifies the 'Label' of the signer that will be
                  prompted to upload the attachement.
        fields:
          type: array
          description: >-
            Provides a list of the fields (JotBlocks) that will be applied to
            the document.
          items:
            type: object
            format: ''
            properties:
              borderSides:
                type: object
                description: >-
                  Specifies the borders that should be drawn around the field
                  (if any).
                properties:
                  bottom:
                    type: boolean
                    description: >-
                      Specifies whether or not a border should be rendered on
                      the bottom of the field.
                  left:
                    type: boolean
                    description: >-
                      Specifies whether or not a border should be rendered on
                      the left side of the field.
                  right:
                    type: boolean
                    description: >-
                      Specifies whether or not a border should be rendered on
                      the right side of the field.
                  top:
                    type: boolean
                    description: >-
                      Specifies whether or not a border should be rendered on
                      the top of the field.
              certified:
                type: boolean
                description: >-
                  Specifies whether or not printed metadata uniquely identifying
                  the field should be rendered around it to visually distinguish
                  it from other data on the containing page.
              fieldType:
                type: string
                description: >-
                  Specifies the type of input required for the field:
                  signature/initials or text.
                enum:
                  - Typed
                  - Signature
              inputType:
                type: string
                description: >-
                  Specifies the source of the input for the field. Possible
                  values include 'Signer' and 'Fixed'.
                enum:
                  - Signer
                  - Fixed
                  - Signatory
              instructions:
                type: string
                description: >-
                  Specifies the instructions that will be presented to the
                  signer when they are prompted to provide input for the field.
              name:
                type: string
                description: Specifies the name of the field.
              pageIndex:
                type: integer
                format: int32
                description: Specifies the 0-based index of the containing page.
              position:
                type: object
                description: >-
                  Specifies the position of the field relative to the upper-left
                  corner of the containing page. For example: a field with an
                  'X Coordinate' of '0.2' and a 'Y
                  Coordinate' of '0.4' would be positioned with
                  its upper left corner 20% of the way across the page
                  horizontally and 40% down the page vertically.
                properties:
                  x:
                    type: number
                    format: float
                    description: >-
                      Specifies the horizontal position of the field or option
                      relative to the left side of the containing page. For
                      example: a field with an 'X Coordinate' of
                      '0.2' would be positioned with its left side 20%
                      of the way across the page horizontally.
                  'y':
                    type: number
                    format: float
                    description: >-
                      Specifies the vertical position of the field or option
                      relative to the top of the containing page. For example: a
                      field with a 'Y Coordinate' of '0.4'
                      would be positioned with its top 40% of the way down the
                      page vertically.
              required:
                type: boolean
                description: >-
                  Specifies whether or not signer input is required for the
                  field.
              hidden:
                type: boolean
                description: Specifies whether or not the field is hidden.
              signer:
                type: string
                description: >-
                  Specifies the label identifying the intended signer for fields
                  that require signer input (signature or text).
              size:
                type: object
                description: >-
                  Specifies the size of the field relative to the size of the
                  containing page. For example: a field with a
                  'Height' of '0.1' and a 'Width'
                  of '0.3' would be sized 10% of total page height and
                  30% of total page width.
                properties:
                  height:
                    type: number
                    format: float
                    description: >-
                      Specifies the height of the field or option relative to
                      the height of the containing page. For example: a field
                      with a 'Height' of '0.1' would be
                      sized 10% of total page height.
                  width:
                    type: number
                    format: float
                    description: >-
                      Specifies the width of the field or option relative to the
                      width of the containing page. For example: a field with a
                      'Width' of '0.3' would be sized 30% of
                      total page width.
              sourceGroup:
                type: string
                description: >-
                  Optionally specifies a common identifier for a group of fields
                  in an envelope that should share a value.
              tag:
                type: string
                description: A generic holder of any information you would like to provide
              fixedText:
                type: string
                description: >-
                  Specifies the text contents for the field for fields with a
                  'FieldType' of 'Typed' and an
                  'InputType' of 'Fixed'. Note: content may
                  include merge fields.
              timing:
                type: string
                description: >-
                  Specifies the timing for when the contents of the field will
                  be rendered to the containing document for fields with a
                  'FieldType' of 'Typed' and an
                  'InputType' of 'Fixed'.
                enum:
                  - On_Document_Start
                  - On_Document_Complete
              options:
                type: array
                description: >-
                  Provides the list of options to present to the signer for
                  fields with a 'FieldType' of 'Typed' and
                  one of the 'Multiple Choice' signatory input types.
                items:
                  type: object
                  format: ''
                  properties:
                    graphicRenderType:
                      type: string
                      description: >-
                        Specifies how the option will be rendered to the
                        document if selected. Possible values include: Empty =
                        0, Check = 1, X = 2, No_Box_Empty = 3, No_Box_Check = 4,
                        No_Box_X = 5, Text = 6
                      enum:
                        - Empty
                        - Check
                        - X
                        - No_Box_Empty
                        - No_Box_Check
                        - No_Box_X
                        - Text
                        - None
                    selected:
                      type: boolean
                      description: >-
                        Specifies whether or not the option will be selected by
                        default.
                    text:
                      type: string
                      description: >-
                        Specifies the text for the option that will be presented
                        to the signer.
                    value:
                      type: string
                      description: >-
                        Specifies the value of the option (may be different than
                        the displayed text).
                    pageIndex:
                      type: integer
                      format: int32
                      description: Specifies the 0-based index of the containing page.
                    position:
                      type: object
                      description: >-
                        Specifies the position of the option relative to the
                        upper-left corner of the containing page for radio
                        button or checkbox options. For example: an option with
                        an 'X Coordinate' of '0.2' and a
                        'Y Coordinate' of '0.4' would be
                        positioned with its upper left corner 20% of the way
                        across the page horizontally and 40% down the page
                        vertically.
                      properties:
                        x:
                          type: number
                          format: float
                          description: >-
                            Specifies the horizontal position of the field or
                            option relative to the left side of the containing
                            page. For example: a field with an 'X
                            Coordinate' of '0.2' would be
                            positioned with its left side 20% of the way across
                            the page horizontally.
                        'y':
                          type: number
                          format: float
                          description: >-
                            Specifies the vertical position of the field or
                            option relative to the top of the containing page.
                            For example: a field with a 'Y Coordinate'
                            of '0.4' would be positioned with its top
                            40% of the way down the page vertically.
                    size:
                      type: object
                      description: >-
                        Specifies the size of the option relative to the size of
                        the containing page for radio button or checkbox
                        options. For example: an option with a
                        'Height' of '0.1' and a
                        'Width' of '0.3' would be sized 10%
                        of total page height and 30% of total page width.
                      properties:
                        height:
                          type: number
                          format: float
                          description: >-
                            Specifies the height of the field or option relative
                            to the height of the containing page. For example: a
                            field with a 'Height' of '0.1'
                            would be sized 10% of total page height.
                        width:
                          type: number
                          format: float
                          description: >-
                            Specifies the width of the field or option relative
                            to the width of the containing page. For example: a
                            field with a 'Width' of '0.3'
                            would be sized 30% of total page width.
              multipleChoiceDefaultValues:
                type: array
                description: >-
                  Specify list of values that will be automatically selected
                  upon signing.
                items:
                  type: string
                  format: ''
              penColor:
                type: string
                description: >-
                  Specifies the color of 'ink' used to render the
                  signature for fields with a 'FieldType' of
                  'Signature'.
                enum:
                  - Black
                  - Blue
              signatureType:
                type: string
                description: >-
                  Specifies the type of signature (initials or signature) the
                  signer will be prompted to provide for fields with a
                  'FieldType' of 'Signature'.
                enum:
                  - Signature
                  - Initials
              signatureStyle:
                type: string
                description: >-
                  Specifies the style of signature the signer will adopt for
                  fields with a 'FieldType' of 'Signature'.
                enum:
                  - Selectable
                  - Drawn
                  - Typed
                  - Classic
              fontDecoration:
                type: object
                description: >-
                  Specifies the font styles that should be applied for fields
                  with a 'FieldType' of 'Typed'.
                properties:
                  bold:
                    type: boolean
                    description: >-
                      Specifies whether or not text content for the field will
                      be rendered in Bold.
                  italic:
                    type: boolean
                    description: >-
                      Specifies whether or not text content for the field will
                      be rendered in Italics.
                  underline:
                    type: boolean
                    description: >-
                      Specifies whether or not text content for the field will
                      be underlined.
              fontName:
                type: string
                description: >-
                  Specifies the name of the supported font that should be used
                  to render the contents of the field for fields with a
                  'FieldType' of 'Typed'.
                enum:
                  - Arial
                  - Bradley_Hand_ITC
                  - Brush_Script_BT
                  - Courier_New
                  - Times_New_Roman
                  - My_Handwriting
                  - Otto
              fontSize:
                type: integer
                description: >-
                  Specifies the size of the font that should be used to render
                  the contents of the field for fields with a
                  'FieldType' of 'Typed'. Possible values
                  include: 6, 8, 10, 12, 14
              horizontalAlignment:
                type: string
                description: >-
                  Specifies the horizontal alignment of the field contents for
                  fields with a 'FieldType' of 'Typed'.
                enum:
                  - Left
                  - Center
                  - Right
              signerInputType:
                type: string
                description: >-
                  Specifies the type of input required from the signer for
                  fields with a 'FieldType' of 'Typed'.
                enum:
                  - Free_Text
                  - Prefill
                  - Multiple_Choice_Text
                  - Multiple_Choice_Graphic
                  - Timestamp
                  - Custom_Validation
                  - Multiple_Choice_Radio
                  - Multiple_Choice_Checkbox
                  - Undefined
              verticalAlignment:
                type: string
                description: >-
                  Specifies the vertical alignment of the field contents for
                  fields with a 'FieldType' of 'Typed'.
                enum:
                  - Top
                  - Middle
                  - Bottom
              wordWrap:
                type: boolean
                description: >-
                  Specifies whether or not the contents of the field should be
                  automatically wrapped to a new line for fields with a
                  'FieldType' of 'Typed'.
              formatterType:
                type: string
                description: >-
                  Specifies the text mask to apply for fields with a
                  'FieldType' of 'Typed'.
                enum:
                  - ALPHANUMERIC
                  - CREDITCARD
                  - SSN
                  - CUSTOM
              formatterCode:
                type: string
                description: >-
                  Specifies the custom text mask to apply for fields with a
                  'FieldType' of 'Typed' and a
                  'FormatterType' of 'Fixed'.
        file:
          type: object
          description: Provides the file metadata and contents for the document.
          properties:
            saved:
              type: object
              description: Specifies the metadata for a previously uploaded file.
              properties:
                fileName:
                  type: string
                  description: >-
                    Specifies the full file name and extension for this
                    previously uploaded file. Note that the filename should not
                    contain any spaces or special characters.
                location:
                  type: string
                  description: >-
                    Specifies the storage location of this previously uploaded
                    file.
                pages:
                  type: array
                  description: >-
                    Provides a list of the page images rendered for this
                    previously uploaded file.
                  items:
                    type: object
                    format: ''
                    properties:
                      width:
                        type: string
                        description: Specifies the width (in pixels) of a page image.
                      height:
                        type: string
                        description: Specifies the height (in pixels) of a page image.
            fileToUpload:
              type: object
              description: >-
                Specifies the file metadata and file contents for a new file
                upload.
              properties:
                data:
                  type: string
                  description: Specifies the actual file data a Base64-encoded string.
                fileName:
                  type: string
                  description: >-
                    Specifies the full file name and extension. Example:
                    Policy.pdf
                parseDocument:
                  type: boolean
                  description: Parse this document for dynamic jotblocks
                dynamicDocumentVersion:
                  type: string
                  description: >-
                    Parse the Document using V2 or V3 syntax. Only applicable if
                    ParseDocument is set to true
                  enum:
                    - V2
        name:
          type: string
          description: Specifies a name for the document.
        orderID:
          type: string
          description: >-
            Optionally specifies an order ID or order number to help identify
            the document.
    emailNotification:
      type: object
      properties:
        body:
          type: string
          description: >-
            Specifies the body of the email notification. Note: content may
            include merge fields.
        name:
          type: string
          description: Specifies the name of the email notification.
        recipients:
          type: array
          description: >-
            Provides a list of intended recipients for the email notification.
            Specify a signer or recipient label to send specific recipients.
            Specify 'Originator' to send to the envelope originator.
            Specify 'All_Signers' to send to all signers on this
            envelope. Specify 'All_Signers_In_Step' to send to all
            signers that part of the current signing step.
          items:
            type: string
            format: email
        stage:
          type: string
          description: >-
            Specifies the stage in the envelope signing process during which the
            email notification will be sent.
          enum:
            - Envelope_Start
            - Envelope_PreExpire
            - Envelope_Expire
            - Envelope_Complete
            - Envelope_Cancel
            - Envelope_Decline
            - Signer_Feedback
            - Signer_Auth_Failure
            - Signer_Kba_Start
            - Signer_Kba_Complete
            - Step_Start
            - Step_Complete
            - On_Payment_Approved
            - On_Payment_Declined
            - On_Payment_Refunded
            - On_Envelope_Landing_Visit
        step:
          type: integer
          description: >-
            Specifies the 0-based index of the signing step with which the email
            notification is associated for email notifications with a
            'Stage' of 'StepStart' or
            'StepComplete'.
        subject:
          type: string
          description: >-
            Specifies the subject of the email notification. Note: content may
            include merge fields.
        customMessage:
          type: string
          description: >-
            Specifies a custom message to add at the end of the email
            notification
        preExpirationDays:
          type: integer
          description: >-
            Specifies the amount of days to send a pre-expiration notification.
            (only applicable to Pre-Expire)
    envelope:
      type: object
      properties:
        cultureType:
          type: string
          description: >-
            Specifies the target culture for the signing session. Possible
            values include 'en-US' (English - US), 'es-US'
            (Spanish - US), and 'fr-CA' (French - Canada). Note that
            specifying a culture here will control the language displayed to
            signers and the language of default email and SMS notifications. It
            will not, however, provide automatic translation of the contents of
            the documents within the envelope or for any adhoc notifications
            provided in the submission.
        declineBehaviorType:
          type: string
          description: >-
            Specifies whether signers will be given the option to decline
            signing for individual documents within the envelope or just to
            decline the envelope as a whole.
          enum:
            - Decline_All
            - Decline_Single
        downloadPassword:
          type: string
          description: >-
            Specifies a password that users or notification recipients will be
            prompted to enter in order to access downloads for the envelope.
        expirationDate:
          type: string
          description: >-
            Optionally specifies the date when the envelope will expire if not
            completed. If an expiration date is not provided, the expiration
            date will be automatically set based on the expiration policy
            configured for the account.
        name:
          type: string
          description: Specifies the name of the envelope.
        orderID:
          type: string
          description: >-
            Optionally specifies an order ID or order number to help identify
            the document.
        signingDeviceEnabled:
          type: boolean
          description: >-
            Specifies whether or not support for external signing devices should
            be enabled for the envelope.
        viewBehaviorType:
          type: string
          description: >-
            Specifies whether signers will be able to see all documents within
            the envelope or just documents for which they are a signing party.
          enum:
            - View_Signer_Only
            - View_All
        workflowType:
          type: string
          description: >-
            Specifies whether the workflow for the envelope will make signing
            available to all signers at the same time or if signing will be made
            available to signers one at a time.
          enum:
            - Sequential
            - Parallel
            - Custom
        allowInPersonSigning:
          type: boolean
          description: >-
            Specifies whether or not in person signing should be enabled for the
            envelope.
        redirectUrl:
          type: string
          description: >-
            Optionally specifies a fully qualified domain name that signers will
            be redirected to after signing when they have no other documents in
            the envelope they can currently sign. If a URL is specified here, it
            will supersede any other redirect URLs specified elsewhere in the
            application (such as a default account redirect URL)
        termsAndConditions:
          type: object
          description: >-
            Specifies additional terms and conditions to be presented to the
            signer. Your account must be configured to allow customization of
            the standard terms and conditions.
          properties:
            additionalComplianceStatement:
              type: string
              description: >-
                Optional information that will be appended to any default system
                or account terms.
            additionalAgreementStatement:
              type: string
              description: >-
                Optional information that will be appended to any default system
                or account agreement terms.
            additionalExtendedDisclosures:
              type: string
              description: >-
                Optional information that will be appended to any default system
                or account disclosures terms.
    termsAndConditions:
      type: object
      properties:
        additionalComplianceStatement:
          type: string
          description: >-
            Optional information that will be appended to any default system or
            account terms.
        additionalAgreementStatement:
          type: string
          description: >-
            Optional information that will be appended to any default system or
            account agreement terms.
        additionalExtendedDisclosures:
          type: string
          description: >-
            Optional information that will be appended to any default system or
            account disclosures terms.
    field:
      type: object
      properties:
        borderSides:
          type: object
          description: >-
            Specifies the borders that should be drawn around the field (if
            any).
          properties:
            bottom:
              type: boolean
              description: >-
                Specifies whether or not a border should be rendered on the
                bottom of the field.
            left:
              type: boolean
              description: >-
                Specifies whether or not a border should be rendered on the left
                side of the field.
            right:
              type: boolean
              description: >-
                Specifies whether or not a border should be rendered on the
                right side of the field.
            top:
              type: boolean
              description: >-
                Specifies whether or not a border should be rendered on the top
                of the field.
        certified:
          type: boolean
          description: >-
            Specifies whether or not printed metadata uniquely identifying the
            field should be rendered around it to visually distinguish it from
            other data on the containing page.
        fieldType:
          type: string
          description: >-
            Specifies the type of input required for the field:
            signature/initials or text.
          enum:
            - Typed
            - Signature
        inputType:
          type: string
          description: >-
            Specifies the source of the input for the field. Possible values
            include 'Signer' and 'Fixed'.
          enum:
            - Signer
            - Fixed
            - Signatory
        instructions:
          type: string
          description: >-
            Specifies the instructions that will be presented to the signer when
            they are prompted to provide input for the field.
        name:
          type: string
          description: Specifies the name of the field.
        pageIndex:
          type: integer
          format: int32
          description: Specifies the 0-based index of the containing page.
        position:
          type: object
          description: >-
            Specifies the position of the field relative to the upper-left
            corner of the containing page. For example: a field with an 'X
            Coordinate' of '0.2' and a 'Y Coordinate'
            of '0.4' would be positioned with its upper left corner
            20% of the way across the page horizontally and 40% down the page
            vertically.
          properties:
            x:
              type: number
              format: float
              description: >-
                Specifies the horizontal position of the field or option
                relative to the left side of the containing page. For example: a
                field with an 'X Coordinate' of '0.2' would
                be positioned with its left side 20% of the way across the page
                horizontally.
            'y':
              type: number
              format: float
              description: >-
                Specifies the vertical position of the field or option relative
                to the top of the containing page. For example: a field with a
                'Y Coordinate' of '0.4' would be positioned
                with its top 40% of the way down the page vertically.
        required:
          type: boolean
          description: Specifies whether or not signer input is required for the field.
        hidden:
          type: boolean
          description: Specifies whether or not the field is hidden.
        signer:
          type: string
          description: >-
            Specifies the label identifying the intended signer for fields that
            require signer input (signature or text).
        size:
          type: object
          description: >-
            Specifies the size of the field relative to the size of the
            containing page. For example: a field with a 'Height' of
            '0.1' and a 'Width' of '0.3' would be
            sized 10% of total page height and 30% of total page width.
          properties:
            height:
              type: number
              format: float
              description: >-
                Specifies the height of the field or option relative to the
                height of the containing page. For example: a field with a
                'Height' of '0.1' would be sized 10% of
                total page height.
            width:
              type: number
              format: float
              description: >-
                Specifies the width of the field or option relative to the width
                of the containing page. For example: a field with a
                'Width' of '0.3' would be sized 30% of total
                page width.
        sourceGroup:
          type: string
          description: >-
            Optionally specifies a common identifier for a group of fields in an
            envelope that should share a value.
        tag:
          type: string
          description: A generic holder of any information you would like to provide
        fixedText:
          type: string
          description: >-
            Specifies the text contents for the field for fields with a
            'FieldType' of 'Typed' and an
            'InputType' of 'Fixed'. Note: content may
            include merge fields.
        timing:
          type: string
          description: >-
            Specifies the timing for when the contents of the field will be
            rendered to the containing document for fields with a
            'FieldType' of 'Typed' and an
            'InputType' of 'Fixed'.
          enum:
            - On_Document_Start
            - On_Document_Complete
        options:
          type: array
          description: >-
            Provides the list of options to present to the signer for fields
            with a 'FieldType' of 'Typed' and one of the
            'Multiple Choice' signatory input types.
          items:
            type: object
            format: ''
            properties:
              graphicRenderType:
                type: string
                description: >-
                  Specifies how the option will be rendered to the document if
                  selected. Possible values include: Empty = 0, Check = 1, X =
                  2, No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6
                enum:
                  - Empty
                  - Check
                  - X
                  - No_Box_Empty
                  - No_Box_Check
                  - No_Box_X
                  - Text
                  - None
              selected:
                type: boolean
                description: >-
                  Specifies whether or not the option will be selected by
                  default.
              text:
                type: string
                description: >-
                  Specifies the text for the option that will be presented to
                  the signer.
              value:
                type: string
                description: >-
                  Specifies the value of the option (may be different than the
                  displayed text).
              pageIndex:
                type: integer
                format: int32
                description: Specifies the 0-based index of the containing page.
              position:
                type: object
                description: >-
                  Specifies the position of the option relative to the
                  upper-left corner of the containing page for radio button or
                  checkbox options. For example: an option with an 'X
                  Coordinate' of '0.2' and a 'Y
                  Coordinate' of '0.4' would be positioned with
                  its upper left corner 20% of the way across the page
                  horizontally and 40% down the page vertically.
                properties:
                  x:
                    type: number
                    format: float
                    description: >-
                      Specifies the horizontal position of the field or option
                      relative to the left side of the containing page. For
                      example: a field with an 'X Coordinate' of
                      '0.2' would be positioned with its left side 20%
                      of the way across the page horizontally.
                  'y':
                    type: number
                    format: float
                    description: >-
                      Specifies the vertical position of the field or option
                      relative to the top of the containing page. For example: a
                      field with a 'Y Coordinate' of '0.4'
                      would be positioned with its top 40% of the way down the
                      page vertically.
              size:
                type: object
                description: >-
                  Specifies the size of the option relative to the size of the
                  containing page for radio button or checkbox options. For
                  example: an option with a 'Height' of
                  '0.1' and a 'Width' of '0.3'
                  would be sized 10% of total page height and 30% of total page
                  width.
                properties:
                  height:
                    type: number
                    format: float
                    description: >-
                      Specifies the height of the field or option relative to
                      the height of the containing page. For example: a field
                      with a 'Height' of '0.1' would be
                      sized 10% of total page height.
                  width:
                    type: number
                    format: float
                    description: >-
                      Specifies the width of the field or option relative to the
                      width of the containing page. For example: a field with a
                      'Width' of '0.3' would be sized 30% of
                      total page width.
        multipleChoiceDefaultValues:
          type: array
          description: >-
            Specify list of values that will be automatically selected upon
            signing.
          items:
            type: string
            format: ''
        penColor:
          type: string
          description: >-
            Specifies the color of 'ink' used to render the signature
            for fields with a 'FieldType' of 'Signature'.
          enum:
            - Black
            - Blue
        signatureType:
          type: string
          description: >-
            Specifies the type of signature (initials or signature) the signer
            will be prompted to provide for fields with a 'FieldType'
            of 'Signature'.
          enum:
            - Signature
            - Initials
        signatureStyle:
          type: string
          description: >-
            Specifies the style of signature the signer will adopt for fields
            with a 'FieldType' of 'Signature'.
          enum:
            - Selectable
            - Drawn
            - Typed
            - Classic
        fontDecoration:
          type: object
          description: >-
            Specifies the font styles that should be applied for fields with a
            'FieldType' of 'Typed'.
          properties:
            bold:
              type: boolean
              description: >-
                Specifies whether or not text content for the field will be
                rendered in Bold.
            italic:
              type: boolean
              description: >-
                Specifies whether or not text content for the field will be
                rendered in Italics.
            underline:
              type: boolean
              description: >-
                Specifies whether or not text content for the field will be
                underlined.
        fontName:
          type: string
          description: >-
            Specifies the name of the supported font that should be used to
            render the contents of the field for fields with a
            'FieldType' of 'Typed'.
          enum:
            - Arial
            - Bradley_Hand_ITC
            - Brush_Script_BT
            - Courier_New
            - Times_New_Roman
            - My_Handwriting
            - Otto
        fontSize:
          type: integer
          description: >-
            Specifies the size of the font that should be used to render the
            contents of the field for fields with a 'FieldType' of
            'Typed'. Possible values include: 6, 8, 10, 12, 14
        horizontalAlignment:
          type: string
          description: >-
            Specifies the horizontal alignment of the field contents for fields
            with a 'FieldType' of 'Typed'.
          enum:
            - Left
            - Center
            - Right
        signerInputType:
          type: string
          description: >-
            Specifies the type of input required from the signer for fields with
            a 'FieldType' of 'Typed'.
          enum:
            - Free_Text
            - Prefill
            - Multiple_Choice_Text
            - Multiple_Choice_Graphic
            - Timestamp
            - Custom_Validation
            - Multiple_Choice_Radio
            - Multiple_Choice_Checkbox
            - Undefined
        verticalAlignment:
          type: string
          description: >-
            Specifies the vertical alignment of the field contents for fields
            with a 'FieldType' of 'Typed'.
          enum:
            - Top
            - Middle
            - Bottom
        wordWrap:
          type: boolean
          description: >-
            Specifies whether or not the contents of the field should be
            automatically wrapped to a new line for fields with a
            'FieldType' of 'Typed'.
        formatterType:
          type: string
          description: >-
            Specifies the text mask to apply for fields with a
            'FieldType' of 'Typed'.
          enum:
            - ALPHANUMERIC
            - CREDITCARD
            - SSN
            - CUSTOM
        formatterCode:
          type: string
          description: >-
            Specifies the custom text mask to apply for fields with a
            'FieldType' of 'Typed' and a
            'FormatterType' of 'Fixed'.
    fieldBorderSides:
      type: object
      properties:
        bottom:
          type: boolean
          description: >-
            Specifies whether or not a border should be rendered on the bottom
            of the field.
        left:
          type: boolean
          description: >-
            Specifies whether or not a border should be rendered on the left
            side of the field.
        right:
          type: boolean
          description: >-
            Specifies whether or not a border should be rendered on the right
            side of the field.
        top:
          type: boolean
          description: >-
            Specifies whether or not a border should be rendered on the top of
            the field.
    fieldFontDecoration:
      type: object
      properties:
        bold:
          type: boolean
          description: >-
            Specifies whether or not text content for the field will be rendered
            in Bold.
        italic:
          type: boolean
          description: >-
            Specifies whether or not text content for the field will be rendered
            in Italics.
        underline:
          type: boolean
          description: >-
            Specifies whether or not text content for the field will be
            underlined.
    fieldOption:
      type: object
      properties:
        graphicRenderType:
          type: string
          description: >-
            Specifies how the option will be rendered to the document if
            selected. Possible values include: Empty = 0, Check = 1, X = 2,
            No_Box_Empty = 3, No_Box_Check = 4, No_Box_X = 5, Text = 6
          enum:
            - Empty
            - Check
            - X
            - No_Box_Empty
            - No_Box_Check
            - No_Box_X
            - Text
            - None
        selected:
          type: boolean
          description: Specifies whether or not the option will be selected by default.
        text:
          type: string
          description: >-
            Specifies the text for the option that will be presented to the
            signer.
        value:
          type: string
          description: >-
            Specifies the value of the option (may be different than the
            displayed text).
        pageIndex:
          type: integer
          format: int32
          description: Specifies the 0-based index of the containing page.
        position:
          type: object
          description: >-
            Specifies the position of the option relative to the upper-left
            corner of the containing page for radio button or checkbox options.
            For example: an option with an 'X Coordinate' of
            '0.2' and a 'Y Coordinate' of '0.4'
            would be positioned with its upper left corner 20% of the way across
            the page horizontally and 40% down the page vertically.
          properties:
            x:
              type: number
              format: float
              description: >-
                Specifies the horizontal position of the field or option
                relative to the left side of the containing page. For example: a
                field with an 'X Coordinate' of '0.2' would
                be positioned with its left side 20% of the way across the page
                horizontally.
            'y':
              type: number
              format: float
              description: >-
                Specifies the vertical position of the field or option relative
                to the top of the containing page. For example: a field with a
                'Y Coordinate' of '0.4' would be positioned
                with its top 40% of the way down the page vertically.
        size:
          type: object
          description: >-
            Specifies the size of the option relative to the size of the
            containing page for radio button or checkbox options. For example:
            an option with a 'Height' of '0.1' and a
            'Width' of '0.3' would be sized 10% of total
            page height and 30% of total page width.
          properties:
            height:
              type: number
              format: float
              description: >-
                Specifies the height of the field or option relative to the
                height of the containing page. For example: a field with a
                'Height' of '0.1' would be sized 10% of
                total page height.
            width:
              type: number
              format: float
              description: >-
                Specifies the width of the field or option relative to the width
                of the containing page. For example: a field with a
                'Width' of '0.3' would be sized 30% of total
                page width.
    fieldSize:
      type: object
      properties:
        height:
          type: number
          format: float
          description: >-
            Specifies the height of the field or option relative to the height
            of the containing page. For example: a field with a
            'Height' of '0.1' would be sized 10% of total
            page height.
        width:
          type: number
          format: float
          description: >-
            Specifies the width of the field or option relative to the width of
            the containing page. For example: a field with a 'Width'
            of '0.3' would be sized 30% of total page width.
    notificationRecipient:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Specifies the email address of the recipient.
        label:
          type: string
          description: >-
            Specifies a label for the recipient. This label can be referenced
            when specifying recipients for an email notification.
        name:
          type: string
          description: Specifies the full name of the recipient.
    notificationSettings:
      type: object
      properties:
        enableNotifications:
          type: boolean
          description: >-
            When EnableNotifications is set to false, no email/sms notifications
            will be sent
        addCustomRecipientsToEnvelopeComplete:
          type: boolean
          description: >-
            When custom recipients are added to an envelope, automaticlly add
            them to Envelope Complete Emails
    signer:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Specifies the email address for the signer.
        label:
          type: string
          description: >-
            Specifies a label for the signer. This label can be referenced when
            specifying the signer for a field or when specifying recipients for
            an email or SMS notification.
        mobilePhone:
          type: string
          description: Specifies the mobile phone number for the signer.
        name:
          type: string
          description: Specifies the full name for the signer.
        password:
          type: string
          description: >-
            Specifies a password for the signer that will need to be provided in
            order to access signing or envelope downloads.
        passwordPrompt:
          type: string
          description: >-
            Specifies the prompt that will be presented to the signer indicating
            what to enter as a password. For example: 'For security
            purposes, please enter the last 4 digits of your account
            number.'
        signatureStyle:
          type: string
          description: >-
            Specifies the style of signature the signer will adopt for fields
            with a 'FieldType' of 'Signature'.
          enum:
            - Selectable
            - Drawn
            - Typed
            - Classic
        smsAuthPhone:
          type: string
          description: >-
            Specifies the phone number that SMS Two-Factor authentication should
            use to authenticate the signer for signing or envelope downloads.
        enableKba:
          type: boolean
          description: 'When set to true, KBA property must be populated'
        kba:
          type: object
          description: >-
            Specifies Knowledge-Based Authentication details used when EnableKba
            is set to true
          properties:
            firstName:
              type: string
              description: Specifies the first name used for KBA. 40 character limit
            lastName:
              type: string
              description: Specifies the last name used for KBA. 40 character limit
            address:
              type: string
              description: Specifies the address used for KBA. 40 character limit
            city:
              type: string
              description: Specifies the city used for KBA. 40 character limit
            state:
              type: string
              description: >-
                Specifies the state used for KBA. Must be in State abbreviation
                format
            zip:
              type: string
              description: Specifies the zip code used for KBA. 5 character number format
            ssn:
              type: string
              description: >-
                Specifies the SSN used for KBA. 9 digit SSN (no dashes) or last
                4 digits
            dobYear:
              type: string
              description: Specifies the year used for KBA. YYYY format
            dobMonth:
              type: string
              description: Specifies the month used for KBA. M or MM format
            dobDay:
              type: string
              description: Specifies the day used for KBA. D or DD format
    signerKBA:
      type: object
      properties:
        firstName:
          type: string
          description: Specifies the first name used for KBA. 40 character limit
        lastName:
          type: string
          description: Specifies the last name used for KBA. 40 character limit
        address:
          type: string
          description: Specifies the address used for KBA. 40 character limit
        city:
          type: string
          description: Specifies the city used for KBA. 40 character limit
        state:
          type: string
          description: >-
            Specifies the state used for KBA. Must be in State abbreviation
            format
        zip:
          type: string
          description: Specifies the zip code used for KBA. 5 character number format
        ssn:
          type: string
          description: >-
            Specifies the SSN used for KBA. 9 digit SSN (no dashes) or last 4
            digits
        dobYear:
          type: string
          description: Specifies the year used for KBA. YYYY format
        dobMonth:
          type: string
          description: Specifies the month used for KBA. M or MM format
        dobDay:
          type: string
          description: Specifies the day used for KBA. D or DD format
    smsNotificationSubmission:
      type: object
      properties:
        body:
          type: string
          description: >-
            Specifies the body of the SMS notification. Note: content may
            include merge fields.
        name:
          type: string
          description: Specifies the name of the SMS notification.
        recipients:
          type: array
          description: >-
            Provides a list of intended recipients for the email notification.
            Specify a signer or recipient label to send specific recipients.
            Specify 'Originator' to send to the envelope originator.
            Specify 'All_Signers' to send to all signers on this
            envelope. Specify 'All_Signers_In_Step' to send to all
            signers that part of the current signing step.
          items:
            type: string
            format: ''
        stage:
          type: string
          description: >-
            Specifies the stage in the envelope signing process during which the
            email notification will be sent.
          enum:
            - Envelope_Start
            - Envelope_PreExpire
            - Envelope_Expire
            - Envelope_Complete
            - Envelope_Cancel
            - Envelope_Decline
            - Signer_Feedback
            - Signer_Auth_Failure
            - Signer_Kba_Start
            - Signer_Kba_Complete
            - Step_Start
            - Step_Complete
            - On_Payment_Approved
            - On_Payment_Declined
            - On_Payment_Refunded
            - On_Envelope_Landing_Visit
        step:
          type: integer
          description: >-
            Specifies the 0-based index of the signing step with which the email
            notification is associated for email notifications with a
            'Stage' of 'StepStart' or
            'StepComplete'.
        preExpirationDays:
          type: integer
          description: >-
            Specifies the amount of days to send a pre-expiration notification.
            (only applicable to Pre-Expire)
    submissionWebHook:
      type: object
      properties:
        designName:
          type: string
          description: Specifies the design name of the webhook.
        timing:
          type: string
          description: >-
            Specifies the stage in the envelope signing process during which the
            webhook will be executed.
          enum:
            - Envelope_Start
            - Envelope_PreExpire
            - Envelope_Expire
            - Envelope_Complete
            - Envelope_Cancel
            - Envelope_Decline
            - Signer_Feedback
            - Signer_Auth_Failure
            - Signer_Kba_Start
            - Signer_Kba_Complete
            - Step_Start
            - Step_Complete
            - On_Payment_Approved
            - On_Payment_Declined
            - On_Payment_Refunded
            - On_Envelope_Landing_Visit
        step:
          type: integer
          description: >-
            Specifies the 0-based index of the signing step with which the
            webhook is associated (StepStart, StepComplete)
    submissionDocumentTransmission:
      type: object
      properties:
        designName:
          type: string
          description: Specifies the design name of the Document Transmission.
    workflowStep:
      type: object
      properties:
        name:
          type: string
          description: Specifies the name of the workflow step.
        signers:
          type: array
          description: >-
            Specifies a list of signers that are included in the step. Any
            fields defined in other steps will take precedence over signers
            included in a step.
          items:
            type: string
            format: ''
        fields:
          type: array
          description: >-
            Specifies a list of fields that are included in the step. This will
            override fields included based on their signer in other steps.
          items:
            type: string
            format: ''
        workflowStepDelay:
          type: object
          description: Specifies durations for the workflow step to be delayed.
          properties:
            days:
              type: integer
              description: The number of days the step will be delayed.
            hours:
              type: integer
              description: The number of hours the step will be delayed.
    workflowStepDelay:
      type: object
      properties:
        days:
          type: integer
          description: The number of days the step will be delayed.
        hours:
          type: integer
          description: The number of hours the step will be delayed.
    templateOwner:
      type: object
      properties:
        emailAddress:
          type: string
          description: ''
        fullName:
          type: string
          description: ''
    userAccount:
      type: object
      properties:
        accountID:
          type: string
          format: uuid
          description: >-
            Specifies the unique identifier for the account. This can be
            referenced in place of the 'Context Identifier' when
            setting the 'X-AS-UserContext' property.
        accountName:
          type: string
          description: >-
            Specifies the name of the account. If the name of the account varies
            from it's display name (as specified in account settings), this
            property will be specified in the form '{Account Name}
            ({Account Display Name})'.
        isDefault:
          type: boolean
          description: >-
            Specifies whether or not this is the primary / default account for
            the specified user.
        isDisabled:
          type: boolean
          description: >-
            Specifies whether or not access to this account is currently
            disabled for the specified user.
    getUserAccountsResultDto:
      type: object
      properties:
        userAccounts:
          type: array
          description: A list of the accounts to which the specified user has access.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/userAccount'
    getDefaultNotificationsResult:
      type: object
      properties:
        defaultEmailNotifications:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/emailNotification'
        defaultSmsNotifications:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/smsNotificationSubmission'
    signingLink:
      type: object
      properties:
        envelopeID:
          type: string
          format: uuid
          description: ''
        signatoryEmail:
          type: string
          format: email
          description: ''
        signatoryMobilePhone:
          type: string
          description: ''
        url:
          type: string
          description: ''
        expirationDate:
          type: string
          format: date-time
          description: ''
    getSigningLinksResponseDto:
      type: object
      properties:
        signingLinks:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/signingLink'
    getSigningLinksRequestDto:
      type: object
      properties:
        envelopeID:
          type: string
          format: uuid
          description: ''
        linkExpirationDate:
          type: string
          format: date-time
          description: ''
        includeOnlyCurrentSigners:
          type: boolean
          description: ''
        redirectUrl:
          type: string
          description: ''
        isAuthenticated:
          type: boolean
          description: ''
        suppressHeader:
          type: boolean
          description: ''
    getEnvelopeValuesResultDto:
      type: object
      properties:
        fieldValues:
          type: array
          description: >-
            A list containing all of the typed fields (JotBlocks) and associated
            values contained in the specified envelope
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/fieldValue'
        senderInputValues:
          type: array
          description: >-
            A list containing all of the sender input values contained in the
            specified envelope
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/senderInputValue'
    updateEnvelopeSignerResultDto:
      type: object
      properties:
        updateSignerResult:
          type: object
          description: ''
          $ref: '#/components/schemas/updateEnvelopeSignerResult'
    cancelEnvelopeResultDto:
      type: object
      properties:
        success:
          type: boolean
          description: ''
    deleteEnvelopeResultDto:
      type: object
      properties:
        envelopeID:
          type: string
          format: uuid
          description: ''
        success:
          type: boolean
          description: ''
    downloadEnvelopeResultDto:
      type: object
      properties:
        mergedDocument:
          type: array
          description: ''
          items:
            type: string
            format: ''
        completionReport:
          type: array
          description: ''
          items:
            type: string
            format: ''
        documents:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/envelopeDocument'
    envelopeHistoryResultDto:
      type: object
      properties:
        envelopeID:
          type: string
          format: uuid
          description: ''
        envelopeHistoryEvents:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/envelopeHistoryEvent'
        documentList:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/envelopeDocumentWithHistory'
    envelopeStatusResultDto:
      type: object
      properties:
        envelopeID:
          type: string
          format: uuid
          description: ''
        status:
          type: string
          description: ''
          enum:
            - CREATED
            - IN_PROGRESS
            - COMPLETED
            - EXPIRED
            - DECLINED
            - CANCELLED
            - STALED
            - SIGNER_AUTHENTICATION_FAILED
        documentList:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/envelopeDocumentWithStatus'
    getEnvelopeResultDto:
      type: object
      properties:
        envelope:
          type: object
          description: ''
          $ref: '#/components/schemas/envelopeApiModel'
        documents:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/documentApiModel'
    listEnvelopesResultDto:
      type: object
      properties:
        envelopes:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/listEnvelopeApiModel'
    updateEnvelopeSignerRequestDto:
      type: object
      properties:
        updateEnvelopeSigner:
          type: object
          description: ''
          $ref: '#/components/schemas/updateEnvelopeSigner'
    cancelEnvelopeRequestDto:
      type: object
      properties:
        remarks:
          type: string
          description: Reason for cancellation
    downloadEnvelopeRequestDto:
      type: object
      properties:
        mergeCompletedDocuments:
          type: boolean
          description: ''
        envelopePassword:
          type: string
          description: ''
    fieldValue:
      type: object
      properties:
        documentID:
          type: string
          format: uuid
          description: >-
            Specifies the unique identifier of the document with which the field
            (JotBlock) is associated.
        name:
          type: string
          description: Specifies the name of the field (JotBlock)
        tag:
          type: string
          description: 'If present, specifies the user-defined tag for the field (JotBlock)'
        value:
          type: string
          description: Specifies the value of the field (JotBlock)
    senderInputValue:
      type: object
      properties:
        name:
          type: string
          description: Specifies the sender input name.
        value:
          type: string
          description: Specifies the sender input value.
        tag:
          type: string
          description: Specifies the sender input tag.
    envelopeDocument:
      type: object
      properties:
        documentID:
          type: string
          format: uuid
          description: ''
        name:
          type: string
          description: ''
        orderID:
          type: string
          description: ''
        completedDocument:
          type: array
          description: ''
          items:
            type: string
            format: ''
    envelopeDocumentWithStatus:
      type: object
      properties:
        status:
          type: object
          description: ''
          $ref: '#/components/schemas/envelopeDocumentStatus'
        documentID:
          type: string
          format: uuid
          description: ''
        name:
          type: string
          description: ''
        orderID:
          type: string
          description: ''
        completedDocument:
          type: array
          description: ''
          items:
            type: string
            format: ''
    envelopeDocumentWithHistory:
      type: object
      properties:
        history:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/envelopeDocumentHistoryEvent'
        documentID:
          type: string
          format: uuid
          description: ''
        name:
          type: string
          description: ''
        orderID:
          type: string
          description: ''
        completedDocument:
          type: array
          description: ''
          items:
            type: string
            format: ''
    envelopeDocumentHistoryEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ''
        date:
          type: string
          format: date-time
          description: ''
        details:
          type: string
          description: ''
    envelopeDocumentStatus:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ''
        statusDate:
          type: string
          format: date-time
          description: ''
        statusType:
          type: string
          description: ''
          enum:
            - CREATED
            - SIGNING_STEP_PROGRESS
            - COMPLETED
            - EXPIRED
            - DECLINED
            - CANCELLED
            - SIGNER_AUTHENTICATION_FAILED
        statusDetails:
          type: string
          description: ''
    envelopeHistoryEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ''
        date:
          type: string
          format: date-time
          description: ''
        details:
          type: string
          description: ''
    updateEnvelopeSigner:
      type: object
      properties:
        name:
          type: string
          description: ''
        emailAddress:
          type: string
          description: ''
        mobilePhone:
          type: string
          description: ''
        password:
          type: string
          description: ''
        resendLastEmail:
          type: boolean
          description: ''
        resendLastSMS:
          type: boolean
          description: ''
    updateEnvelopeSignerResult:
      type: object
      properties:
        success:
          type: boolean
          description: ''
        name:
          type: string
          description: ''
        emailAddress:
          type: string
          description: ''
        mobilePhone:
          type: string
          description: ''
    placeholder:
      type: object
      properties:
        name:
          type: string
          description: ''
        description:
          type: string
          description: ''
        regex:
          type: string
          description: ''
        required:
          type: boolean
          description: ''
        prompt:
          type: string
          description: ''
        errorMessage:
          type: string
          description: ''
        type:
          type: string
          description: ''
          enum:
            - String
            - File_Addendum
            - File_Document
            - Signature
            - Date
            - Email
            - PhoneNumber
            - Number
            - Currency
            - MultipleStrings
        defaultValue:
          type: string
          description: ''
        defaultValues:
          type: string
          description: Values used when given Type is set to MultipleStrings
        tag:
          type: string
          description: A generic holder of any information you would like to provide
        inherited:
          type: boolean
          description: placeholder belongs to a referenced template
    placeholderValue:
      type: object
      properties:
        inherited:
          type: boolean
          description: >-
            Specifies that the placeholder value was inherited from a referenced
            template.
        value:
          type: string
          description: Specifies the value of the placeholder.
        values:
          type: array
          description: >-
            Specifies the values of the placeholder when Placeholder type is
            'MultipleStrings'
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/apiFile'
        files:
          type: array
          description: >-
            Specifies one or more files that will be used to populate a file
            placeholder.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/apiFile'
        overlayStartPage:
          type: integer
          format: int32
          description: >-
            Specifies the 0-based index of the page on which to start overlaying
            JotBlocks when using a file document placeholder.
    placeholderValuePair:
      type: object
      properties:
        name:
          type: string
          description: Specifies the name of the placeholder.
        inherited:
          type: boolean
          description: >-
            Specifies that the placeholder value was inherited from a referenced
            template.
        value:
          type: string
          description: Specifies the value of the placeholder.
        values:
          type: array
          description: >-
            Specifies the values of the placeholder when Placeholder type is
            'MultipleStrings'
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/apiFile'
        files:
          type: array
          description: >-
            Specifies one or more files that will be used to populate a file
            placeholder.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/apiFile'
        overlayStartPage:
          type: integer
          format: int32
          description: >-
            Specifies the 0-based index of the page on which to start overlaying
            JotBlocks when using a file document placeholder.
    templatePlaceholderValuesV3_2:
      type: object
      properties:
        templateId:
          type: string
          description: Template Id
        values:
          type: array
          description: Template Data
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/placeholderValuePair'
    templatePlaceholderValues:
      type: object
      properties:
        templateID:
          type: string
          description: Specifies the unique identifier of the template.
        values:
          type: array
          description: >-
            Provides a list of placeholder values that will be used to populate
            the template.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/placeholderValuePair'
    template:
      type: object
      properties:
        description:
          type: string
          description: >-
            Specifies the user provided description for the template. This is
            typically used to provide additional detail about the intended use
            case.
        isLocked:
          type: boolean
          description: Specifies whether or not the template is locked to prevent editing.
        isPartial:
          type: boolean
          description: >-
            Specifies whether or not the template contains only a partial
            definition. If true, additional data beyond placeholder values must
            be provided as part of the submission. If false, the template can be
            submitted with only placeholder values provided.
        isArchived:
          type: boolean
          description: Specifies whether or not the template is archived
        name:
          type: string
          description: Specifies the name of the template.
        templateID:
          type: string
          description: Specifies the unique identifier of the template.
        userAccountID:
          type: string
          description: >-
            Specifies the unique identifier of the user to whom the template
            belongs.
        owner:
          type: object
          description: Specifies the owner of a template
          $ref: '#/components/schemas/templateOwner'
        accountID:
          type: string
          description: >-
            Specifies the unique identifier of the account to which the template
            belongs.
        accountName:
          type: string
          description: Specifies the name of the account to which the template belongs.
        tag:
          type: string
          description: A generic holder of any information you would like to provide
        originalID:
          type: string
          description: Original ID of Imported Template
    templateList:
      type: object
      properties:
        templates:
          type: array
          description: Provides a list of the templates accessible to the current user.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/template'
    templateParsed:
      type: object
      properties:
        content:
          type: object
          description: Provides the data required for submitting an envelope.
          $ref: '#/components/schemas/submission'
        placeholders:
          type: array
          description: >-
            Provides a list of the data elements used in the template that must
            be provided when referencing the template.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/placeholder'
        templates:
          type: array
          description: >-
            Provides a list of referenced templates and related placeholder
            values.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/templatePlaceholderValues'
        description:
          type: string
          description: >-
            Specifies the user provided description for the template. This is
            typically used to provide additional detail about the intended use
            case.
        isLocked:
          type: boolean
          description: Specifies whether or not the template is locked to prevent editing.
        isPartial:
          type: boolean
          description: >-
            Specifies whether or not the template contains only a partial
            definition. If true, additional data beyond placeholder values must
            be provided as part of the submission. If false, the template can be
            submitted with only placeholder values provided.
        isArchived:
          type: boolean
          description: Specifies whether or not the template is archived
        name:
          type: string
          description: Specifies the name of the template.
        templateID:
          type: string
          description: Specifies the unique identifier of the template.
        userAccountID:
          type: string
          description: >-
            Specifies the unique identifier of the user to whom the template
            belongs.
        owner:
          type: object
          description: Specifies the owner of a template
          $ref: '#/components/schemas/templateOwner'
        accountID:
          type: string
          description: >-
            Specifies the unique identifier of the account to which the template
            belongs.
        accountName:
          type: string
          description: Specifies the name of the account to which the template belongs.
        tag:
          type: string
          description: A generic holder of any information you would like to provide
        originalID:
          type: string
          description: Original ID of Imported Template
    templateV3_4:
      type: object
      properties:
        description:
          type: string
          description: >-
            Specifies the user provided description for the template. This is
            typically used to provide additional detail about the intended use
            case.
        isLocked:
          type: boolean
          description: Specifies whether or not the template is locked to prevent editing.
        isPartial:
          type: boolean
          description: >-
            Specifies whether or not the template contains only a partial
            definition. If true, additional data beyond placeholder values must
            be provided as part of the submission. If false, the template can be
            submitted with only placeholder values provided.
        canEdit:
          type: boolean
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
        accessibility:
          type: string
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
          enum:
            - User
            - Account
            - AccountAndChildren
        name:
          type: string
          description: Specifies the name of the template.
        templateID:
          type: string
          description: Specifies the unique identifier of the template.
        userAccountID:
          type: string
          description: >-
            Specifies the unique identifier of the user to whom the template
            belongs.
    templateParsedV3_4:
      type: object
      properties:
        content:
          type: object
          description: Provides the data required for submitting an envelope.
          $ref: '#/components/schemas/submissionV3_2'
        placeholders:
          type: array
          description: >-
            Provides a list of the data elements used in the template that must
            be provided when referencing the template.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/placeholder'
        templates:
          type: array
          description: >-
            Provides a list of referenced templates and related placeholder
            values.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/templatePlaceholderValuesV3_2'
        description:
          type: string
          description: >-
            Specifies the user provided description for the template. This is
            typically used to provide additional detail about the intended use
            case.
        isLocked:
          type: boolean
          description: Specifies whether or not the template is locked to prevent editing.
        isPartial:
          type: boolean
          description: >-
            Specifies whether or not the template contains only a partial
            definition. If true, additional data beyond placeholder values must
            be provided as part of the submission. If false, the template can be
            submitted with only placeholder values provided.
        canEdit:
          type: boolean
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
        accessibility:
          type: string
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
          enum:
            - User
            - Account
            - AccountAndChildren
        name:
          type: string
          description: Specifies the name of the template.
        templateID:
          type: string
          description: Specifies the unique identifier of the template.
        userAccountID:
          type: string
          description: >-
            Specifies the unique identifier of the user to whom the template
            belongs.
    templateListV3_4:
      type: object
      properties:
        templates:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/templateV3_4'
    templateParsedV3_2:
      type: object
      properties:
        content:
          type: object
          description: Provides the data required for submitting an envelope.
          $ref: '#/components/schemas/submissionV3_2'
        placeholders:
          type: array
          description: >-
            Provides a list of the data elements used in the template that must
            be provided when referencing the template.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/placeholder'
        templates:
          type: array
          description: >-
            Provides a list of referenced templates and related placeholder
            values.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/templatePlaceholderValuesV3_2'
        description:
          type: string
          description: >-
            Specifies the user provided description for the template. This is
            typically used to provide additional detail about the intended use
            case.
        isLocked:
          type: boolean
          description: Specifies whether or not the template is locked to prevent editing.
        isPartial:
          type: boolean
          description: >-
            Specifies whether or not the template contains only a partial
            definition. If true, additional data beyond placeholder values must
            be provided as part of the submission. If false, the template can be
            submitted with only placeholder values provided.
        canEdit:
          type: boolean
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
        accessibility:
          type: string
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
          enum:
            - User
            - Account
            - AccountAndChildren
        name:
          type: string
          description: Specifies the name of the template.
        templateID:
          type: string
          description: Specifies the unique identifier of the template.
        userAccountID:
          type: string
          description: >-
            Specifies the unique identifier of the user to whom the template
            belongs.
    templateV3_1:
      type: object
      properties:
        templateId:
          type: string
          description: Id of provided template
        canEdit:
          type: boolean
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
        userAccountId:
          type: string
          description: Id of the User Account which this template belongs to
        name:
          type: string
          description: Template name
        description:
          type: string
          description: Describes what the template is used for
        isLocked:
          type: boolean
          description: Is the template locked for editing
        isPartial:
          type: boolean
          description: Can this template be submitted as-is
        accessibility:
          type: string
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
          enum:
            - User
            - Account
            - AccountAndChildren
    templateParsedV3_1:
      type: object
      properties:
        content:
          type: object
          description: Provides the data required for submitting an envelope.
          $ref: '#/components/schemas/submissionV3_2'
        placeholders:
          type: array
          description: >-
            Provides a list of the data elements used in the template that must
            be provided when referencing the template.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/placeholder'
        templates:
          type: array
          description: >-
            Provides a list of referenced templates and related placeholder
            values.
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/templatePlaceholderValuesV3_2'
        templateId:
          type: string
          description: Id of provided template
        canEdit:
          type: boolean
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
        userAccountId:
          type: string
          description: Id of the User Account which this template belongs to
        name:
          type: string
          description: Template name
        description:
          type: string
          description: Describes what the template is used for
        isLocked:
          type: boolean
          description: Is the template locked for editing
        isPartial:
          type: boolean
          description: Can this template be submitted as-is
        accessibility:
          type: string
          description: >-
            Deprecated. With the introduction of entity permissions in version
            6.32, this property is no longer used
          enum:
            - User
            - Account
            - AccountAndChildren
    templateListV3_1:
      type: object
      properties:
        templates:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/templateV3_1'
    templateUpsertResponseV3_2:
      type: object
      properties:
        templateId:
          type: string
          format: uuid
          description: ''
    templateUpsertResponse:
      type: object
      properties:
        templateID:
          type: string
          format: uuid
          description: Specifies the unique identifier for the template.
    emailDesignDto:
      type: object
      properties:
        body:
          type: string
          description: ''
        dateCreated:
          type: string
          format: date-time
          description: ''
        dateModified:
          type: string
          format: date-time
          description: ''
        defaultRecipients:
          type: string
          description: ''
          enum:
            - None
            - Originator
            - Signers_SigningStep
            - Signers_All
        defaultTiming:
          type: string
          description: ''
          enum:
            - OnDocumentStepStart
            - OnDocumentStepComplete
            - OnDocumentStart
            - OnDocumentComplete
            - OnDocumentPreExpire
            - OnDocumentExpire
            - OnDocumentLandingVisit
            - OnDocumentCancel
            - OnDocumentDecline
            - OnEnvelopeClosure
            - OnEnvelopePreExpire
            - OnEnvelopeExpire
            - OnEnvelopeComplete
            - OnEnvelopeCancel
            - OnEnvelopeDecline
            - OnDocumentSignerFeedback
            - OnEnvelopeSignerFeedback
            - OnDocumentSignerAuthFailure
            - OnEnvelopeSignerAuthFailure
            - OnDocumentSignerKbaStart
            - OnEnvelopeSignerKbaStart
            - OnDocumentSignerKbaComplete
            - OnEnvelopeSignerKbaComplete
            - OnEnvelopeStepStart
            - OnEnvelopeStepComplete
            - OnPaymentApproved
            - OnPaymentDeclined
            - OnPaymentRefunded
            - OnEnvelopeLandingVisit
        emailDesignSetId:
          type: string
          format: uuid
          description: ''
        id:
          type: string
          format: uuid
          description: ''
        isSystem:
          type: boolean
          description: ''
        isUsedByDefault:
          type: boolean
          description: ''
        name:
          type: string
          description: ''
        subject:
          type: string
          description: ''
        systemId:
          type: string
          description: ''
    listEmailDesignsResultDto:
      type: object
      properties:
        emailDesigns:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/emailDesignDto'
    emailDesignSetDto:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          description: Owner AccountID of email designset
        culture:
          type: string
          description: Specified culture of designset
        dateCreated:
          type: string
          format: date-time
          description: ''
        dateModified:
          type: string
          format: date-time
          description: ''
        id:
          type: string
          format: uuid
          description: EmailDesignSet ID
        isAccountDefault:
          type: boolean
          description: Specifies if email designset is used as the account default
        isSystem:
          type: boolean
          description: Specifies if email designset is a built-in designset.
        name:
          type: string
          description: Name of email designset
        systemId:
          type: string
          format: uuid
          description: System ID of email designset
        originalID:
          type: string
          format: uuid
          description: Original ID of email designset
    listEmailDesignSetsResultDto:
      type: object
      properties:
        emailDesignSets:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/emailDesignSetDto'
    getAccessLinkResultDto:
      type: object
      properties:
        accessLink:
          type: object
          description: ''
          $ref: '#/components/schemas/accessLink'
    accessLink:
      type: object
      properties:
        envelopeID:
          type: string
          format: uuid
          description: ''
        signerID:
          type: string
          format: uuid
          description: ''
        signerEmail:
          type: string
          format: email
          description: ''
        signerMobilePhone:
          type: string
          description: ''
        url:
          type: string
          description: ''
        expirationDate:
          type: string
          format: date-time
          description: ''
        documentType:
          type: string
          description: ''
          enum:
            - ORIGINAL
            - INTERIM
            - COMPLETED
    base64File:
      type: object
      properties:
        data:
          type: string
          description: Specifies the actual file data a Base64-encoded string.
        fileName:
          type: string
          description: 'Specifies the full file name and extension. Example: Policy.pdf'
        parseDocument:
          type: boolean
          description: Parse this document for dynamic jotblocks
        dynamicDocumentVersion:
          type: string
          description: >-
            Parse the Document using V2 or V3 syntax. Only applicable if
            ParseDocument is set to true
          enum:
            - V2
    savedFile:
      type: object
      properties:
        fileName:
          type: string
          description: >-
            Specifies the full file name and extension for this previously
            uploaded file. Note that the filename should not contain any spaces
            or special characters.
        location:
          type: string
          description: Specifies the storage location of this previously uploaded file.
        pages:
          type: array
          description: >-
            Provides a list of the page images rendered for this previously
            uploaded file.
          items:
            type: object
            format: ''
            properties:
              width:
                type: string
                description: Specifies the width (in pixels) of a page image.
              height:
                type: string
                description: Specifies the height (in pixels) of a page image.
    envelopeApiModel:
      type: object
      properties:
        accountID:
          type: string
          format: uuid
          description: ''
        accountName:
          type: string
          description: ''
        cancelledDate:
          type: string
          format: date-time
          description: ''
        completionDate:
          type: string
          format: date-time
          description: ''
        declineBehavior:
          type: string
          description: ''
          enum:
            - DeclineAll
            - DeclineSingle
        declinedDate:
          type: string
          format: date-time
          description: ''
        expiredDate:
          type: string
          format: date-time
          description: ''
        staledDate:
          type: string
          format: date-time
          description: ''
        staleDate:
          type: string
          format: date-time
          description: ''
        hasPassword:
          type: boolean
          description: ''
        envelopeID:
          type: string
          format: uuid
          description: ''
        name:
          type: string
          description: ''
        redirectUrl:
          type: string
          description: ''
        signerAuthFailureDate:
          type: string
          format: date-time
          description: ''
        userAccountID:
          type: string
          format: uuid
          description: ''
        viewBehavior:
          type: string
          description: ''
          enum:
            - ViewSignatoryOnly
            - ViewAll
        closedDate:
          type: string
          format: date-time
          description: ''
        envelopeStatusType:
          type: string
          description: ''
          enum:
            - CREATED
            - IN_PROGRESS
            - COMPLETED
            - EXPIRED
            - DECLINED
            - CANCELLED
            - STALED
            - SIGNER_AUTHENTICATION_FAILED
        isFinalized:
          type: boolean
          description: >-
            Once this Envelope has been completed, cancelled, failed auth,
            declined, or expired
    documentApiModel:
      type: object
      properties:
        additionalAgreement:
          type: string
          description: ''
        additionalDisclosures:
          type: string
          description: ''
        additionalTerms:
          type: string
          description: ''
        cultureType:
          type: string
          description: ''
        documentID:
          type: string
          format: uuid
          description: ''
        name:
          type: string
          description: ''
        fileExtension:
          type: string
          description: ''
        pageCount:
          type: integer
          format: int32
          description: ''
        signingDeviceEnabled:
          type: boolean
          description: ''
        isFinalized:
          type: boolean
          description: ''
        completionDate:
          type: string
          format: date-time
          description: ''
        declinedDate:
          type: string
          format: date-time
          description: ''
    envelopeApiModelV3_5:
      type: object
      properties:
        accountID:
          type: string
          format: uuid
          description: ''
        accountName:
          type: string
          description: ''
        cancelledDate:
          type: string
          format: date-time
          description: ''
        completionDate:
          type: string
          format: date-time
          description: ''
        declineBehavior:
          type: string
          description: ''
          enum:
            - DeclineAll
            - DeclineSingle
        declinedDate:
          type: string
          format: date-time
          description: ''
        expiredDate:
          type: string
          format: date-time
          description: ''
        staledDate:
          type: string
          format: date-time
          description: ''
        staleDate:
          type: string
          format: date-time
          description: ''
        hasPassword:
          type: boolean
          description: ''
        evnelopeID:
          type: string
          format: uuid
          description: ''
        name:
          type: string
          description: ''
        redirectUrl:
          type: string
          description: ''
        signerAuthFailureDate:
          type: string
          format: date-time
          description: ''
        userAccountID:
          type: string
          format: uuid
          description: ''
        viewBehavior:
          type: string
          description: ''
          enum:
            - ViewSignatoryOnly
            - ViewAll
        closedDate:
          type: string
          format: date-time
          description: ''
        envelopeStatusType:
          type: string
          description: ''
          enum:
            - CREATED
            - IN_PROGRESS
            - COMPLETED
            - EXPIRED
            - DECLINED
            - CANCELLED
            - STALED
            - SIGNER_AUTHENTICATION_FAILED
        isFinalized:
          type: boolean
          description: >-
            Once this Envelope has been completed, cancelled, failed auth,
            declined, or expired
    listEnvelopeApiModel:
      type: object
      properties:
        envelopeApiModel:
          type: object
          description: ''
          $ref: '#/components/schemas/envelopeApiModel'
        documents:
          type: array
          description: ''
          items:
            type: n/a
            format: ''
            $ref: '#/components/schemas/documentApiModel'
    renderedPage:
      type: object
      properties:
        width:
          type: string
          description: Specifies the width (in pixels) of a page image.
        height:
          type: string
          description: Specifies the height (in pixels) of a page image.
    mergeResult:
      type: object
      properties:
        result:
          type: string
          description: Provides the resulting merged object.
        trace:
          type: string
          description: >-
            Provides a list of the merge operations that were applied to the
            object.
    appError:
      type: object
      properties:
        errorCode:
          type: string
          description: ''
        summary:
          type: string
          description: ''
        details:
          type: array
          description: ''
          items:
            type: string
            format: ''
    createWebhookRequest:
      type: object
    createWebhookResponse:
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      bearerFormat: JWT
      type: http
  links: {}
  callbacks: {}
security:
  - {}